{"version":3,"file":"dulcet-intl.js","sources":["../src/en.js","../node_modules/intl-messageformat/src/utils.js","../node_modules/intl-messageformat/src/es5.js","../node_modules/intl-messageformat/src/compiler.js","../node_modules/intl-messageformat-parser/src/parser.js","../node_modules/intl-messageformat/src/core.js","../node_modules/intl-messageformat/src/en.js","../node_modules/intl-messageformat/src/main.js","../node_modules/intl-relativeformat/src/diff.js","../node_modules/intl-relativeformat/src/es5.js","../node_modules/intl-relativeformat/src/core.js","../node_modules/intl-relativeformat/src/en.js","../node_modules/intl-relativeformat/src/main.js","../src/locale-data-registry.js","../src/types.js","../node_modules/invariant/invariant.js","../src/utils.js","../src/inject.js","../src/define-messages.js","../src/plural.js","../node_modules/intl-format-cache/src/es5.js","../node_modules/intl-format-cache/src/memoizer.js","../src/format.js","../src/components/provider.js","../src/components/date.js","../src/components/time.js","../src/components/relative.js","../src/components/number.js","../src/components/plural.js","../src/components/message.js","../src/components/html-message.js","../src/dulcet-intl.js"],"sourcesContent":["// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"},\"fields\":{\"year\":{\"displayName\":\"year\",\"relative\":{\"0\":\"this year\",\"1\":\"next year\",\"-1\":\"last year\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} year\",\"other\":\"in {0} years\"},\"past\":{\"one\":\"{0} year ago\",\"other\":\"{0} years ago\"}}},\"month\":{\"displayName\":\"month\",\"relative\":{\"0\":\"this month\",\"1\":\"next month\",\"-1\":\"last month\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} month\",\"other\":\"in {0} months\"},\"past\":{\"one\":\"{0} month ago\",\"other\":\"{0} months ago\"}}},\"day\":{\"displayName\":\"day\",\"relative\":{\"0\":\"today\",\"1\":\"tomorrow\",\"-1\":\"yesterday\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} day\",\"other\":\"in {0} days\"},\"past\":{\"one\":\"{0} day ago\",\"other\":\"{0} days ago\"}}},\"hour\":{\"displayName\":\"hour\",\"relativeTime\":{\"future\":{\"one\":\"in {0} hour\",\"other\":\"in {0} hours\"},\"past\":{\"one\":\"{0} hour ago\",\"other\":\"{0} hours ago\"}}},\"minute\":{\"displayName\":\"minute\",\"relativeTime\":{\"future\":{\"one\":\"in {0} minute\",\"other\":\"in {0} minutes\"},\"past\":{\"one\":\"{0} minute ago\",\"other\":\"{0} minutes ago\"}}},\"second\":{\"displayName\":\"second\",\"relative\":{\"0\":\"now\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} second\",\"other\":\"in {0} seconds\"},\"past\":{\"one\":\"{0} second ago\",\"other\":\"{0} seconds ago\"}}}}};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport var hop = Object.prototype.hasOwnProperty;\n\nexport function extend(obj) {\n    var sources = Array.prototype.slice.call(arguments, 1),\n        i, len, source, key;\n\n    for (i = 0, len = sources.length; i < len; i += 1) {\n        source = sources[i];\n        if (!source) { continue; }\n\n        for (key in source) {\n            if (hop.call(source, key)) {\n                obj[key] = source[key];\n            }\n        }\n    }\n\n    return obj;\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {hop} from './utils';\n\nexport {defineProperty, objCreate};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport default Compiler;\n\nfunction Compiler(locales, formats, pluralFn) {\n    this.locales  = locales;\n    this.formats  = formats;\n    this.pluralFn = pluralFn;\n}\n\nCompiler.prototype.compile = function (ast) {\n    this.pluralStack        = [];\n    this.currentPlural      = null;\n    this.pluralNumberFormat = null;\n\n    return this.compileMessage(ast);\n};\n\nCompiler.prototype.compileMessage = function (ast) {\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new Error('Message AST is not of type: \"messageFormatPattern\"');\n    }\n\n    var elements = ast.elements,\n        pattern  = [];\n\n    var i, len, element;\n\n    for (i = 0, len = elements.length; i < len; i += 1) {\n        element = elements[i];\n\n        switch (element.type) {\n            case 'messageTextElement':\n                pattern.push(this.compileMessageText(element));\n                break;\n\n            case 'argumentElement':\n                pattern.push(this.compileArgument(element));\n                break;\n\n            default:\n                throw new Error('Message element does not have a valid type');\n        }\n    }\n\n    return pattern;\n};\n\nCompiler.prototype.compileMessageText = function (element) {\n    // When this `element` is part of plural sub-pattern and its value contains\n    // an unescaped '#', use a `PluralOffsetString` helper to properly output\n    // the number with the correct offset in the string.\n    if (this.currentPlural && /(^|[^\\\\])#/g.test(element.value)) {\n        // Create a cache a NumberFormat instance that can be reused for any\n        // PluralOffsetString instance in this message.\n        if (!this.pluralNumberFormat) {\n            this.pluralNumberFormat = new Intl.NumberFormat(this.locales);\n        }\n\n        return new PluralOffsetString(\n                this.currentPlural.id,\n                this.currentPlural.format.offset,\n                this.pluralNumberFormat,\n                element.value);\n    }\n\n    // Unescape the escaped '#'s in the message text.\n    return element.value.replace(/\\\\#/g, '#');\n};\n\nCompiler.prototype.compileArgument = function (element) {\n    var format = element.format;\n\n    if (!format) {\n        return new StringFormat(element.id);\n    }\n\n    var formats  = this.formats,\n        locales  = this.locales,\n        pluralFn = this.pluralFn,\n        options;\n\n    switch (format.type) {\n        case 'numberFormat':\n            options = formats.number[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.NumberFormat(locales, options).format\n            };\n\n        case 'dateFormat':\n            options = formats.date[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'timeFormat':\n            options = formats.time[format.style];\n            return {\n                id    : element.id,\n                format: new Intl.DateTimeFormat(locales, options).format\n            };\n\n        case 'pluralFormat':\n            options = this.compileOptions(element);\n            return new PluralFormat(\n                element.id, format.ordinal, format.offset, options, pluralFn\n            );\n\n        case 'selectFormat':\n            options = this.compileOptions(element);\n            return new SelectFormat(element.id, options);\n\n        default:\n            throw new Error('Message element does not have a valid format type');\n    }\n};\n\nCompiler.prototype.compileOptions = function (element) {\n    var format      = element.format,\n        options     = format.options,\n        optionsHash = {};\n\n    // Save the current plural element, if any, then set it to a new value when\n    // compiling the options sub-patterns. This conforms the spec's algorithm\n    // for handling `\"#\"` syntax in message text.\n    this.pluralStack.push(this.currentPlural);\n    this.currentPlural = format.type === 'pluralFormat' ? element : null;\n\n    var i, len, option;\n\n    for (i = 0, len = options.length; i < len; i += 1) {\n        option = options[i];\n\n        // Compile the sub-pattern and save it under the options's selector.\n        optionsHash[option.selector] = this.compileMessage(option.value);\n    }\n\n    // Pop the plural stack to put back the original current plural value.\n    this.currentPlural = this.pluralStack.pop();\n\n    return optionsHash;\n};\n\n// -- Compiler Helper Classes --------------------------------------------------\n\nfunction StringFormat(id) {\n    this.id = id;\n}\n\nStringFormat.prototype.format = function (value) {\n    if (!value) {\n        return '';\n    }\n\n    return typeof value === 'string' ? value : String(value);\n};\n\nfunction PluralFormat(id, useOrdinal, offset, options, pluralFn) {\n    this.id         = id;\n    this.useOrdinal = useOrdinal;\n    this.offset     = offset;\n    this.options    = options;\n    this.pluralFn   = pluralFn;\n}\n\nPluralFormat.prototype.getOption = function (value) {\n    var options = this.options;\n\n    var option = options['=' + value] ||\n            options[this.pluralFn(value - this.offset, this.useOrdinal)];\n\n    return option || options.other;\n};\n\nfunction PluralOffsetString(id, offset, numberFormat, string) {\n    this.id           = id;\n    this.offset       = offset;\n    this.numberFormat = numberFormat;\n    this.string       = string;\n}\n\nPluralOffsetString.prototype.format = function (value) {\n    var number = this.numberFormat.format(value - this.offset);\n\n    return this.string\n            .replace(/(^|[^\\\\])#/g, '$1' + number)\n            .replace(/\\\\#/g, '#');\n};\n\nfunction SelectFormat(id, options) {\n    this.id      = id;\n    this.options = options;\n}\n\nSelectFormat.prototype.getOption = function (value) {\n    var options = this.options;\n    return options[value] || options.other;\n};\n","export default (function() {\n  /*\n   * Generated by PEG.js 0.8.0.\n   *\n   * http://pegjs.majda.cz/\n   */\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function SyntaxError(message, expected, found, offset, line, column) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.offset   = offset;\n    this.line     = line;\n    this.column   = column;\n\n    this.name     = \"SyntaxError\";\n  }\n\n  peg$subclass(SyntaxError, Error);\n\n  function parse(input) {\n    var options = arguments.length > 1 ? arguments[1] : {},\n\n        peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = [],\n        peg$c1 = function(elements) {\n                return {\n                    type    : 'messageFormatPattern',\n                    elements: elements\n                };\n            },\n        peg$c2 = peg$FAILED,\n        peg$c3 = function(text) {\n                var string = '',\n                    i, j, outerLen, inner, innerLen;\n\n                for (i = 0, outerLen = text.length; i < outerLen; i += 1) {\n                    inner = text[i];\n\n                    for (j = 0, innerLen = inner.length; j < innerLen; j += 1) {\n                        string += inner[j];\n                    }\n                }\n\n                return string;\n            },\n        peg$c4 = function(messageText) {\n                return {\n                    type : 'messageTextElement',\n                    value: messageText\n                };\n            },\n        peg$c5 = /^[^ \\t\\n\\r,.+={}#]/,\n        peg$c6 = { type: \"class\", value: \"[^ \\\\t\\\\n\\\\r,.+={}#]\", description: \"[^ \\\\t\\\\n\\\\r,.+={}#]\" },\n        peg$c7 = \"{\",\n        peg$c8 = { type: \"literal\", value: \"{\", description: \"\\\"{\\\"\" },\n        peg$c9 = null,\n        peg$c10 = \",\",\n        peg$c11 = { type: \"literal\", value: \",\", description: \"\\\",\\\"\" },\n        peg$c12 = \"}\",\n        peg$c13 = { type: \"literal\", value: \"}\", description: \"\\\"}\\\"\" },\n        peg$c14 = function(id, format) {\n                return {\n                    type  : 'argumentElement',\n                    id    : id,\n                    format: format && format[2]\n                };\n            },\n        peg$c15 = \"number\",\n        peg$c16 = { type: \"literal\", value: \"number\", description: \"\\\"number\\\"\" },\n        peg$c17 = \"date\",\n        peg$c18 = { type: \"literal\", value: \"date\", description: \"\\\"date\\\"\" },\n        peg$c19 = \"time\",\n        peg$c20 = { type: \"literal\", value: \"time\", description: \"\\\"time\\\"\" },\n        peg$c21 = function(type, style) {\n                return {\n                    type : type + 'Format',\n                    style: style && style[2]\n                };\n            },\n        peg$c22 = \"plural\",\n        peg$c23 = { type: \"literal\", value: \"plural\", description: \"\\\"plural\\\"\" },\n        peg$c24 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: false,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options\n                };\n            },\n        peg$c25 = \"selectordinal\",\n        peg$c26 = { type: \"literal\", value: \"selectordinal\", description: \"\\\"selectordinal\\\"\" },\n        peg$c27 = function(pluralStyle) {\n                return {\n                    type   : pluralStyle.type,\n                    ordinal: true,\n                    offset : pluralStyle.offset || 0,\n                    options: pluralStyle.options\n                }\n            },\n        peg$c28 = \"select\",\n        peg$c29 = { type: \"literal\", value: \"select\", description: \"\\\"select\\\"\" },\n        peg$c30 = function(options) {\n                return {\n                    type   : 'selectFormat',\n                    options: options\n                };\n            },\n        peg$c31 = \"=\",\n        peg$c32 = { type: \"literal\", value: \"=\", description: \"\\\"=\\\"\" },\n        peg$c33 = function(selector, pattern) {\n                return {\n                    type    : 'optionalFormatPattern',\n                    selector: selector,\n                    value   : pattern\n                };\n            },\n        peg$c34 = \"offset:\",\n        peg$c35 = { type: \"literal\", value: \"offset:\", description: \"\\\"offset:\\\"\" },\n        peg$c36 = function(number) {\n                return number;\n            },\n        peg$c37 = function(offset, options) {\n                return {\n                    type   : 'pluralFormat',\n                    offset : offset,\n                    options: options\n                };\n            },\n        peg$c38 = { type: \"other\", description: \"whitespace\" },\n        peg$c39 = /^[ \\t\\n\\r]/,\n        peg$c40 = { type: \"class\", value: \"[ \\\\t\\\\n\\\\r]\", description: \"[ \\\\t\\\\n\\\\r]\" },\n        peg$c41 = { type: \"other\", description: \"optionalWhitespace\" },\n        peg$c42 = /^[0-9]/,\n        peg$c43 = { type: \"class\", value: \"[0-9]\", description: \"[0-9]\" },\n        peg$c44 = /^[0-9a-f]/i,\n        peg$c45 = { type: \"class\", value: \"[0-9a-f]i\", description: \"[0-9a-f]i\" },\n        peg$c46 = \"0\",\n        peg$c47 = { type: \"literal\", value: \"0\", description: \"\\\"0\\\"\" },\n        peg$c48 = /^[1-9]/,\n        peg$c49 = { type: \"class\", value: \"[1-9]\", description: \"[1-9]\" },\n        peg$c50 = function(digits) {\n            return parseInt(digits, 10);\n        },\n        peg$c51 = /^[^{}\\\\\\0-\\x1F \\t\\n\\r]/,\n        peg$c52 = { type: \"class\", value: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\", description: \"[^{}\\\\\\\\\\\\0-\\\\x1F \\\\t\\\\n\\\\r]\" },\n        peg$c53 = \"\\\\\\\\\",\n        peg$c54 = { type: \"literal\", value: \"\\\\\\\\\", description: \"\\\"\\\\\\\\\\\\\\\\\\\"\" },\n        peg$c55 = function() { return '\\\\'; },\n        peg$c56 = \"\\\\#\",\n        peg$c57 = { type: \"literal\", value: \"\\\\#\", description: \"\\\"\\\\\\\\#\\\"\" },\n        peg$c58 = function() { return '\\\\#'; },\n        peg$c59 = \"\\\\{\",\n        peg$c60 = { type: \"literal\", value: \"\\\\{\", description: \"\\\"\\\\\\\\{\\\"\" },\n        peg$c61 = function() { return '\\u007B'; },\n        peg$c62 = \"\\\\}\",\n        peg$c63 = { type: \"literal\", value: \"\\\\}\", description: \"\\\"\\\\\\\\}\\\"\" },\n        peg$c64 = function() { return '\\u007D'; },\n        peg$c65 = \"\\\\u\",\n        peg$c66 = { type: \"literal\", value: \"\\\\u\", description: \"\\\"\\\\\\\\u\\\"\" },\n        peg$c67 = function(digits) {\n                return String.fromCharCode(parseInt(digits, 16));\n            },\n        peg$c68 = function(chars) { return chars.join(''); },\n\n        peg$currPos          = 0,\n        peg$reportedPos      = 0,\n        peg$cachedPos        = 0,\n        peg$cachedPosDetails = { line: 1, column: 1, seenCR: false },\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$reportedPos, peg$currPos);\n    }\n\n    function offset() {\n      return peg$reportedPos;\n    }\n\n    function line() {\n      return peg$computePosDetails(peg$reportedPos).line;\n    }\n\n    function column() {\n      return peg$computePosDetails(peg$reportedPos).column;\n    }\n\n    function expected(description) {\n      throw peg$buildException(\n        null,\n        [{ type: \"other\", description: description }],\n        peg$reportedPos\n      );\n    }\n\n    function error(message) {\n      throw peg$buildException(message, null, peg$reportedPos);\n    }\n\n    function peg$computePosDetails(pos) {\n      function advance(details, startPos, endPos) {\n        var p, ch;\n\n        for (p = startPos; p < endPos; p++) {\n          ch = input.charAt(p);\n          if (ch === \"\\n\") {\n            if (!details.seenCR) { details.line++; }\n            details.column = 1;\n            details.seenCR = false;\n          } else if (ch === \"\\r\" || ch === \"\\u2028\" || ch === \"\\u2029\") {\n            details.line++;\n            details.column = 1;\n            details.seenCR = true;\n          } else {\n            details.column++;\n            details.seenCR = false;\n          }\n        }\n      }\n\n      if (peg$cachedPos !== pos) {\n        if (peg$cachedPos > pos) {\n          peg$cachedPos = 0;\n          peg$cachedPosDetails = { line: 1, column: 1, seenCR: false };\n        }\n        advance(peg$cachedPosDetails, peg$cachedPos, pos);\n        peg$cachedPos = pos;\n      }\n\n      return peg$cachedPosDetails;\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildException(message, expected, pos) {\n      function cleanupExpected(expected) {\n        var i = 1;\n\n        expected.sort(function(a, b) {\n          if (a.description < b.description) {\n            return -1;\n          } else if (a.description > b.description) {\n            return 1;\n          } else {\n            return 0;\n          }\n        });\n\n        while (i < expected.length) {\n          if (expected[i - 1] === expected[i]) {\n            expected.splice(i, 1);\n          } else {\n            i++;\n          }\n        }\n      }\n\n      function buildMessage(expected, found) {\n        function stringEscape(s) {\n          function hex(ch) { return ch.charCodeAt(0).toString(16).toUpperCase(); }\n\n          return s\n            .replace(/\\\\/g,   '\\\\\\\\')\n            .replace(/\"/g,    '\\\\\"')\n            .replace(/\\x08/g, '\\\\b')\n            .replace(/\\t/g,   '\\\\t')\n            .replace(/\\n/g,   '\\\\n')\n            .replace(/\\f/g,   '\\\\f')\n            .replace(/\\r/g,   '\\\\r')\n            .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return '\\\\x0' + hex(ch); })\n            .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return '\\\\x'  + hex(ch); })\n            .replace(/[\\u0180-\\u0FFF]/g,         function(ch) { return '\\\\u0' + hex(ch); })\n            .replace(/[\\u1080-\\uFFFF]/g,         function(ch) { return '\\\\u'  + hex(ch); });\n        }\n\n        var expectedDescs = new Array(expected.length),\n            expectedDesc, foundDesc, i;\n\n        for (i = 0; i < expected.length; i++) {\n          expectedDescs[i] = expected[i].description;\n        }\n\n        expectedDesc = expected.length > 1\n          ? expectedDescs.slice(0, -1).join(\", \")\n              + \" or \"\n              + expectedDescs[expected.length - 1]\n          : expectedDescs[0];\n\n        foundDesc = found ? \"\\\"\" + stringEscape(found) + \"\\\"\" : \"end of input\";\n\n        return \"Expected \" + expectedDesc + \" but \" + foundDesc + \" found.\";\n      }\n\n      var posDetails = peg$computePosDetails(pos),\n          found      = pos < input.length ? input.charAt(pos) : null;\n\n      if (expected !== null) {\n        cleanupExpected(expected);\n      }\n\n      return new SyntaxError(\n        message !== null ? message : buildMessage(expected, found),\n        expected,\n        found,\n        pos,\n        posDetails.line,\n        posDetails.column\n      );\n    }\n\n    function peg$parsestart() {\n      var s0;\n\n      s0 = peg$parsemessageFormatPattern();\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatPattern() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsemessageFormatElement();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsemessageFormatElement();\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c1(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsemessageFormatElement() {\n      var s0;\n\n      s0 = peg$parsemessageTextElement();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseargumentElement();\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageText() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$currPos;\n      s3 = peg$parse_();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsechars();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parse_();\n          if (s5 !== peg$FAILED) {\n            s3 = [s3, s4, s5];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$c2;\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$currPos;\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsechars();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s3 = [s3, s4, s5];\n                s2 = s3;\n              } else {\n                peg$currPos = s2;\n                s2 = peg$c2;\n              }\n            } else {\n              peg$currPos = s2;\n              s2 = peg$c2;\n            }\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c3(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsews();\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parsemessageTextElement() {\n      var s0, s1;\n\n      s0 = peg$currPos;\n      s1 = peg$parsemessageText();\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c4(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parseargument() {\n      var s0, s1, s2;\n\n      s0 = peg$parsenumber();\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        if (peg$c5.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c6); }\n        }\n        if (s2 !== peg$FAILED) {\n          while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            if (peg$c5.test(input.charAt(peg$currPos))) {\n              s2 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c6); }\n            }\n          }\n        } else {\n          s1 = peg$c2;\n        }\n        if (s1 !== peg$FAILED) {\n          s1 = input.substring(s0, peg$currPos);\n        }\n        s0 = s1;\n      }\n\n      return s0;\n    }\n\n    function peg$parseargumentElement() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c7;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseargument();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 44) {\n                s6 = peg$c10;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c11); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parse_();\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseelementFormat();\n                  if (s8 !== peg$FAILED) {\n                    s6 = [s6, s7, s8];\n                    s5 = s6;\n                  } else {\n                    peg$currPos = s5;\n                    s5 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s5;\n                  s5 = peg$c2;\n                }\n              } else {\n                peg$currPos = s5;\n                s5 = peg$c2;\n              }\n              if (s5 === peg$FAILED) {\n                s5 = peg$c9;\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parse_();\n                if (s6 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 125) {\n                    s7 = peg$c12;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c14(s3, s5);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseelementFormat() {\n      var s0;\n\n      s0 = peg$parsesimpleFormat();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsepluralFormat();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseselectOrdinalFormat();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseselectFormat();\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsesimpleFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c15) {\n        s1 = peg$c15;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c16); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 4) === peg$c17) {\n          s1 = peg$c17;\n          peg$currPos += 4;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c18); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.substr(peg$currPos, 4) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 4;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n        }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s4 = peg$c10;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsechars();\n              if (s6 !== peg$FAILED) {\n                s4 = [s4, s5, s6];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$c2;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$c2;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$c2;\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$c9;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c21(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c23); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c24(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectOrdinalFormat() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 13) === peg$c25) {\n        s1 = peg$c25;\n        peg$currPos += 13;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c26); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsepluralStyle();\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c27(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselectFormat() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 6) === peg$c28) {\n        s1 = peg$c28;\n        peg$currPos += 6;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c29); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s3 = peg$c10;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parseoptionalFormatPattern();\n              if (s6 !== peg$FAILED) {\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parseoptionalFormatPattern();\n                }\n              } else {\n                s5 = peg$c2;\n              }\n              if (s5 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c30(s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 61) {\n        s2 = peg$c31;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c32); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenumber();\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$c2;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsechars();\n      }\n\n      return s0;\n    }\n\n    function peg$parseoptionalFormatPattern() {\n      var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselector();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 123) {\n              s4 = peg$c7;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c8); }\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parse_();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsemessageFormatPattern();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$parse_();\n                  if (s7 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 125) {\n                      s8 = peg$c12;\n                      peg$currPos++;\n                    } else {\n                      s8 = peg$FAILED;\n                      if (peg$silentFails === 0) { peg$fail(peg$c13); }\n                    }\n                    if (s8 !== peg$FAILED) {\n                      peg$reportedPos = s0;\n                      s1 = peg$c33(s2, s6);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$c2;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$c2;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parseoffset() {\n      var s0, s1, s2, s3;\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 7) === peg$c34) {\n        s1 = peg$c34;\n        peg$currPos += 7;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c35); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsenumber();\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c36(s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsepluralStyle() {\n      var s0, s1, s2, s3, s4;\n\n      s0 = peg$currPos;\n      s1 = peg$parseoffset();\n      if (s1 === peg$FAILED) {\n        s1 = peg$c9;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parseoptionalFormatPattern();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parseoptionalFormatPattern();\n            }\n          } else {\n            s3 = peg$c2;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c37(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$c2;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$c2;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$c2;\n      }\n\n      return s0;\n    }\n\n    function peg$parsews() {\n      var s0, s1;\n\n      peg$silentFails++;\n      s0 = [];\n      if (peg$c39.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c40); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c39.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c40); }\n          }\n        }\n      } else {\n        s0 = peg$c2;\n      }\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c38); }\n      }\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1, s2;\n\n      peg$silentFails++;\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsews();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parsews();\n      }\n      if (s1 !== peg$FAILED) {\n        s1 = input.substring(s0, peg$currPos);\n      }\n      s0 = s1;\n      peg$silentFails--;\n      if (s0 === peg$FAILED) {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c41); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsedigit() {\n      var s0;\n\n      if (peg$c42.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsehexDigit() {\n      var s0;\n\n      if (peg$c44.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n      }\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3, s4, s5;\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c46;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c47); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        s2 = peg$currPos;\n        if (peg$c48.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c49); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsedigit();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsedigit();\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$c2;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$c2;\n        }\n        if (s2 !== peg$FAILED) {\n          s2 = input.substring(s1, peg$currPos);\n        }\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c50(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    function peg$parsechar() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      if (peg$c51.test(input.charAt(peg$currPos))) {\n        s0 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c52); }\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c53) {\n          s1 = peg$c53;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c54); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$reportedPos = s0;\n          s1 = peg$c55();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          if (input.substr(peg$currPos, 2) === peg$c56) {\n            s1 = peg$c56;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c57); }\n          }\n          if (s1 !== peg$FAILED) {\n            peg$reportedPos = s0;\n            s1 = peg$c58();\n          }\n          s0 = s1;\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.substr(peg$currPos, 2) === peg$c59) {\n              s1 = peg$c59;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c60); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$reportedPos = s0;\n              s1 = peg$c61();\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.substr(peg$currPos, 2) === peg$c62) {\n                s1 = peg$c62;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c63); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$reportedPos = s0;\n                s1 = peg$c64();\n              }\n              s0 = s1;\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                if (input.substr(peg$currPos, 2) === peg$c65) {\n                  s1 = peg$c65;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c66); }\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$currPos;\n                  s3 = peg$currPos;\n                  s4 = peg$parsehexDigit();\n                  if (s4 !== peg$FAILED) {\n                    s5 = peg$parsehexDigit();\n                    if (s5 !== peg$FAILED) {\n                      s6 = peg$parsehexDigit();\n                      if (s6 !== peg$FAILED) {\n                        s7 = peg$parsehexDigit();\n                        if (s7 !== peg$FAILED) {\n                          s4 = [s4, s5, s6, s7];\n                          s3 = s4;\n                        } else {\n                          peg$currPos = s3;\n                          s3 = peg$c2;\n                        }\n                      } else {\n                        peg$currPos = s3;\n                        s3 = peg$c2;\n                      }\n                    } else {\n                      peg$currPos = s3;\n                      s3 = peg$c2;\n                    }\n                  } else {\n                    peg$currPos = s3;\n                    s3 = peg$c2;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s3 = input.substring(s2, peg$currPos);\n                  }\n                  s2 = s3;\n                  if (s2 !== peg$FAILED) {\n                    peg$reportedPos = s0;\n                    s1 = peg$c67(s2);\n                    s0 = s1;\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$c2;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$c2;\n                }\n              }\n            }\n          }\n        }\n      }\n\n      return s0;\n    }\n\n    function peg$parsechars() {\n      var s0, s1, s2;\n\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parsechar();\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          s2 = peg$parsechar();\n        }\n      } else {\n        s1 = peg$c2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$reportedPos = s0;\n        s1 = peg$c68(s1);\n      }\n      s0 = s1;\n\n      return s0;\n    }\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail({ type: \"end\", description: \"end of input\" });\n      }\n\n      throw peg$buildException(null, peg$maxFailExpected, peg$maxFailPos);\n    }\n  }\n\n  return {\n    SyntaxError: SyntaxError,\n    parse:       parse\n  };\n})();","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport {extend, hop} from './utils';\nimport {defineProperty, objCreate} from './es5';\nimport Compiler from './compiler';\nimport parser from 'intl-messageformat-parser';\n\nexport default MessageFormat;\n\n// -- MessageFormat --------------------------------------------------------\n\nfunction MessageFormat(message, locales, formats) {\n    // Parse string messages into an AST.\n    var ast = typeof message === 'string' ?\n            MessageFormat.__parse(message) : message;\n\n    if (!(ast && ast.type === 'messageFormatPattern')) {\n        throw new TypeError('A message must be provided as a String or AST.');\n    }\n\n    // Creates a new object with the specified `formats` merged with the default\n    // formats.\n    formats = this._mergeFormats(MessageFormat.formats, formats);\n\n    // Defined first because it's used to build the format pattern.\n    defineProperty(this, '_locale',  {value: this._resolveLocale(locales)});\n\n    // Compile the `ast` to a pattern that is highly optimized for repeated\n    // `format()` invocations. **Note:** This passes the `locales` set provided\n    // to the constructor instead of just the resolved locale.\n    var pluralFn = this._findPluralRuleFunction(this._locale);\n    var pattern  = this._compilePattern(ast, locales, formats, pluralFn);\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var messageFormat = this;\n    this.format = function (values) {\n        return messageFormat._format(pattern, values);\n    };\n}\n\n// Default format options used as the prototype of the `formats` provided to the\n// constructor. These are used when constructing the internal Intl.NumberFormat\n// and Intl.DateTimeFormat instances.\ndefineProperty(MessageFormat, 'formats', {\n    enumerable: true,\n\n    value: {\n        number: {\n            'currency': {\n                style: 'currency'\n            },\n\n            'percent': {\n                style: 'percent'\n            }\n        },\n\n        date: {\n            'short': {\n                month: 'numeric',\n                day  : 'numeric',\n                year : '2-digit'\n            },\n\n            'medium': {\n                month: 'short',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'long': {\n                month: 'long',\n                day  : 'numeric',\n                year : 'numeric'\n            },\n\n            'full': {\n                weekday: 'long',\n                month  : 'long',\n                day    : 'numeric',\n                year   : 'numeric'\n            }\n        },\n\n        time: {\n            'short': {\n                hour  : 'numeric',\n                minute: 'numeric'\n            },\n\n            'medium':  {\n                hour  : 'numeric',\n                minute: 'numeric',\n                second: 'numeric'\n            },\n\n            'long': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            },\n\n            'full': {\n                hour        : 'numeric',\n                minute      : 'numeric',\n                second      : 'numeric',\n                timeZoneName: 'short'\n            }\n        }\n    }\n});\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(MessageFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(MessageFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlMessageFormat is missing a ' +\n            '`locale` property'\n        );\n    }\n\n    MessageFormat.__localeData__[data.locale.toLowerCase()] = data;\n}});\n\n// Defines `__parse()` static method as an exposed private.\ndefineProperty(MessageFormat, '__parse', {value: parser.parse});\n\n// Define public `defaultLocale` property which defaults to English, but can be\n// set by the developer.\ndefineProperty(MessageFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\nMessageFormat.prototype.resolvedOptions = function () {\n    // TODO: Provide anything else?\n    return {\n        locale: this._locale\n    };\n};\n\nMessageFormat.prototype._compilePattern = function (ast, locales, formats, pluralFn) {\n    var compiler = new Compiler(locales, formats, pluralFn);\n    return compiler.compile(ast);\n};\n\nMessageFormat.prototype._findPluralRuleFunction = function (locale) {\n    var localeData = MessageFormat.__localeData__;\n    var data       = localeData[locale.toLowerCase()];\n\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find a `pluralRuleFunction` to return.\n    while (data) {\n        if (data.pluralRuleFunction) {\n            return data.pluralRuleFunction;\n        }\n\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n\n    throw new Error(\n        'Locale data added to IntlMessageFormat is missing a ' +\n        '`pluralRuleFunction` for :' + locale\n    );\n};\n\nMessageFormat.prototype._format = function (pattern, values) {\n    var result = '',\n        i, len, part, id, value;\n\n    for (i = 0, len = pattern.length; i < len; i += 1) {\n        part = pattern[i];\n\n        // Exist early for string parts.\n        if (typeof part === 'string') {\n            result += part;\n            continue;\n        }\n\n        id = part.id;\n\n        // Enforce that all required values are provided by the caller.\n        if (!(values && hop.call(values, id))) {\n            throw new Error('A value must be provided for: ' + id);\n        }\n\n        value = values[id];\n\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (part.options) {\n            result += this._format(part.getOption(value), values);\n        } else {\n            result += part.format(value);\n        }\n    }\n\n    return result;\n};\n\nMessageFormat.prototype._mergeFormats = function (defaults, formats) {\n    var mergedFormats = {},\n        type, mergedType;\n\n    for (type in defaults) {\n        if (!hop.call(defaults, type)) { continue; }\n\n        mergedFormats[type] = mergedType = objCreate(defaults[type]);\n\n        if (formats && hop.call(formats, type)) {\n            extend(mergedType, formats[type]);\n        }\n    }\n\n    return mergedFormats;\n};\n\nMessageFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(MessageFormat.defaultLocale);\n\n    var localeData = MessageFormat.__localeData__;\n    var i, len, localeParts, data;\n\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n\n            localeParts.pop();\n        }\n    }\n\n    var defaultLocale = locales.pop();\n    throw new Error(\n        'No locale data has been added to IntlMessageFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\n    );\n};\n","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"}};\n","/* jslint esnext: true */\n\nimport IntlMessageFormat from './core';\nimport defaultLocale from './en';\n\nIntlMessageFormat.__addLocaleData(defaultLocale);\nIntlMessageFormat.defaultLocale = 'en';\n\nexport default IntlMessageFormat;\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nvar round = Math.round;\n\nfunction daysToYears(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    return days * 400 / 146097;\n}\n\nexport default function (from, to) {\n    // Convert to ms timestamps.\n    from = +from;\n    to   = +to;\n\n    var millisecond = round(to - from),\n        second      = round(millisecond / 1000),\n        minute      = round(second / 60),\n        hour        = round(minute / 60),\n        day         = round(hour / 24),\n        week        = round(day / 7);\n\n    var rawYears = daysToYears(day),\n        month    = round(rawYears * 12),\n        year     = round(rawYears);\n\n    return {\n        millisecond: millisecond,\n        second     : second,\n        minute     : minute,\n        hour       : hour,\n        day        : day,\n        week       : week,\n        month      : month,\n        year       : year\n    };\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nexport {defineProperty, objCreate, arrIndexOf, isArray, dateNow};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar hop = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n\nvar arrIndexOf = Array.prototype.indexOf || function (search, fromIndex) {\n    /*jshint validthis:true */\n    var arr = this;\n    if (!arr.length) {\n        return -1;\n    }\n\n    for (var i = fromIndex || 0, max = arr.length; i < max; i++) {\n        if (arr[i] === search) {\n            return i;\n        }\n    }\n\n    return -1;\n};\n\nvar isArray = Array.isArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n};\n\nvar dateNow = Date.now || function () {\n    return new Date().getTime();\n};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport IntlMessageFormat from 'intl-messageformat';\nimport diff from './diff';\nimport {\n    defineProperty,\n    objCreate,\n    arrIndexOf,\n    isArray,\n    dateNow\n} from './es5';\n\nexport default RelativeFormat;\n\n// -----------------------------------------------------------------------------\n\nvar FIELDS = ['second', 'minute', 'hour', 'day', 'month', 'year'];\nvar STYLES = ['best fit', 'numeric'];\n\n// -- RelativeFormat -----------------------------------------------------------\n\nfunction RelativeFormat(locales, options) {\n    options = options || {};\n\n    // Make a copy of `locales` if it's an array, so that it doesn't change\n    // since it's used lazily.\n    if (isArray(locales)) {\n        locales = locales.concat();\n    }\n\n    defineProperty(this, '_locale', {value: this._resolveLocale(locales)});\n    defineProperty(this, '_options', {value: {\n        style: this._resolveStyle(options.style),\n        units: this._isValidUnits(options.units) && options.units\n    }});\n\n    defineProperty(this, '_locales', {value: locales});\n    defineProperty(this, '_fields', {value: this._findFields(this._locale)});\n    defineProperty(this, '_messages', {value: objCreate(null)});\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var relativeFormat = this;\n    this.format = function format(date, options) {\n        return relativeFormat._format(date, options);\n    };\n}\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(RelativeFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(RelativeFormat, '__addLocaleData', {value: function (data) {\n    if (!(data && data.locale)) {\n        throw new Error(\n            'Locale data provided to IntlRelativeFormat is missing a ' +\n            '`locale` property value'\n        );\n    }\n\n    RelativeFormat.__localeData__[data.locale.toLowerCase()] = data;\n\n    // Add data to IntlMessageFormat.\n    IntlMessageFormat.__addLocaleData(data);\n}});\n\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\ndefineProperty(RelativeFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\ndefineProperty(RelativeFormat, 'thresholds', {\n    enumerable: true,\n\n    value: {\n        second: 45,  // seconds to minute\n        minute: 45,  // minutes to hour\n        hour  : 22,  // hours to day\n        day   : 26,  // days to month\n        month : 11   // months to year\n    }\n});\n\nRelativeFormat.prototype.resolvedOptions = function () {\n    return {\n        locale: this._locale,\n        style : this._options.style,\n        units : this._options.units\n    };\n};\n\nRelativeFormat.prototype._compileMessage = function (units) {\n    // `this._locales` is the original set of locales the user specified to the\n    // constructor, while `this._locale` is the resolved root locale.\n    var locales        = this._locales;\n    var resolvedLocale = this._locale;\n\n    var field        = this._fields[units];\n    var relativeTime = field.relativeTime;\n    var future       = '';\n    var past         = '';\n    var i;\n\n    for (i in relativeTime.future) {\n        if (relativeTime.future.hasOwnProperty(i)) {\n            future += ' ' + i + ' {' +\n                relativeTime.future[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    for (i in relativeTime.past) {\n        if (relativeTime.past.hasOwnProperty(i)) {\n            past += ' ' + i + ' {' +\n                relativeTime.past[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    var message = '{when, select, future {{0, plural, ' + future + '}}' +\n                                 'past {{0, plural, ' + past + '}}}';\n\n    // Create the synthetic IntlMessageFormat instance using the original\n    // locales value specified by the user when constructing the the parent\n    // IntlRelativeFormat instance.\n    return new IntlMessageFormat(message, locales);\n};\n\nRelativeFormat.prototype._getMessage = function (units) {\n    var messages = this._messages;\n\n    // Create a new synthetic message based on the locale data from CLDR.\n    if (!messages[units]) {\n        messages[units] = this._compileMessage(units);\n    }\n\n    return messages[units];\n};\n\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n    var field = this._fields[units];\n\n    if (field.relative) {\n        return field.relative[diff];\n    }\n};\n\nRelativeFormat.prototype._findFields = function (locale) {\n    var localeData = RelativeFormat.__localeData__;\n    var data       = localeData[locale.toLowerCase()];\n\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find `fields` to return.\n    while (data) {\n        if (data.fields) {\n            return data.fields;\n        }\n\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n\n    throw new Error(\n        'Locale data added to IntlRelativeFormat is missing `fields` for :' +\n        locale\n    );\n};\n\nRelativeFormat.prototype._format = function (date, options) {\n    var now = options && options.now !== undefined ? options.now : dateNow();\n\n    if (date === undefined) {\n        date = now;\n    }\n\n    // Determine if the `date` and optional `now` values are valid, and throw a\n    // similar error to what `Intl.DateTimeFormat#format()` would throw.\n    if (!isFinite(now)) {\n        throw new RangeError(\n            'The `now` option provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    if (!isFinite(date)) {\n        throw new RangeError(\n            'The date value provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    var diffReport  = diff(now, date);\n    var units       = this._options.units || this._selectUnits(diffReport);\n    var diffInUnits = diffReport[units];\n\n    if (this._options.style !== 'numeric') {\n        var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n        if (relativeUnits) {\n            return relativeUnits;\n        }\n    }\n\n    return this._getMessage(units).format({\n        '0' : Math.abs(diffInUnits),\n        when: diffInUnits < 0 ? 'past' : 'future'\n    });\n};\n\nRelativeFormat.prototype._isValidUnits = function (units) {\n    if (!units || arrIndexOf.call(FIELDS, units) >= 0) {\n        return true;\n    }\n\n    if (typeof units === 'string') {\n        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n        if (suggestion && arrIndexOf.call(FIELDS, suggestion) >= 0) {\n            throw new Error(\n                '\"' + units + '\" is not a valid IntlRelativeFormat `units` ' +\n                'value, did you mean: ' + suggestion\n            );\n        }\n    }\n\n    throw new Error(\n        '\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' +\n        'must be one of: \"' + FIELDS.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(RelativeFormat.defaultLocale);\n\n    var localeData = RelativeFormat.__localeData__;\n    var i, len, localeParts, data;\n\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n\n            localeParts.pop();\n        }\n    }\n\n    var defaultLocale = locales.pop();\n    throw new Error(\n        'No locale data has been added to IntlRelativeFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\n    );\n};\n\nRelativeFormat.prototype._resolveStyle = function (style) {\n    // Default to \"best fit\" style.\n    if (!style) {\n        return STYLES[0];\n    }\n\n    if (arrIndexOf.call(STYLES, style) >= 0) {\n        return style;\n    }\n\n    throw new Error(\n        '\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' +\n        'must be one of: \"' + STYLES.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n    var i, l, units;\n\n    for (i = 0, l = FIELDS.length; i < l; i += 1) {\n        units = FIELDS[i];\n\n        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n            break;\n        }\n    }\n\n    return units;\n};\n","// GENERATED FILE\nexport default {\"locale\":\"en\",\"pluralRuleFunction\":function (n,ord){var s=String(n).split(\".\"),v0=!s[1],t0=Number(s[0])==n,n10=t0&&s[0].slice(-1),n100=t0&&s[0].slice(-2);if(ord)return n10==1&&n100!=11?\"one\":n10==2&&n100!=12?\"two\":n10==3&&n100!=13?\"few\":\"other\";return n==1&&v0?\"one\":\"other\"},\"fields\":{\"year\":{\"displayName\":\"year\",\"relative\":{\"0\":\"this year\",\"1\":\"next year\",\"-1\":\"last year\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} year\",\"other\":\"in {0} years\"},\"past\":{\"one\":\"{0} year ago\",\"other\":\"{0} years ago\"}}},\"month\":{\"displayName\":\"month\",\"relative\":{\"0\":\"this month\",\"1\":\"next month\",\"-1\":\"last month\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} month\",\"other\":\"in {0} months\"},\"past\":{\"one\":\"{0} month ago\",\"other\":\"{0} months ago\"}}},\"day\":{\"displayName\":\"day\",\"relative\":{\"0\":\"today\",\"1\":\"tomorrow\",\"-1\":\"yesterday\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} day\",\"other\":\"in {0} days\"},\"past\":{\"one\":\"{0} day ago\",\"other\":\"{0} days ago\"}}},\"hour\":{\"displayName\":\"hour\",\"relativeTime\":{\"future\":{\"one\":\"in {0} hour\",\"other\":\"in {0} hours\"},\"past\":{\"one\":\"{0} hour ago\",\"other\":\"{0} hours ago\"}}},\"minute\":{\"displayName\":\"minute\",\"relativeTime\":{\"future\":{\"one\":\"in {0} minute\",\"other\":\"in {0} minutes\"},\"past\":{\"one\":\"{0} minute ago\",\"other\":\"{0} minutes ago\"}}},\"second\":{\"displayName\":\"second\",\"relative\":{\"0\":\"now\"},\"relativeTime\":{\"future\":{\"one\":\"in {0} second\",\"other\":\"in {0} seconds\"},\"past\":{\"one\":\"{0} second ago\",\"other\":\"{0} seconds ago\"}}}}};\n","/* jslint esnext: true */\n\nimport IntlRelativeFormat from './core';\nimport defaultLocale from './en';\n\nIntlRelativeFormat.__addLocaleData(defaultLocale);\nIntlRelativeFormat.defaultLocale = 'en';\n\nexport default IntlRelativeFormat;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport IntlMessageFormat from 'intl-messageformat';\nimport IntlRelativeFormat from 'intl-relativeformat';\n\nexport function addLocaleData(data = []) {\n    let locales = Array.isArray(data) ? data : [data];\n\n    locales.forEach((localeData) => {\n        if (localeData && localeData.locale) {\n            IntlMessageFormat.__addLocaleData(localeData);\n            IntlRelativeFormat.__addLocaleData(localeData);\n        }\n    });\n}\n\nexport function hasLocaleData(locale) {\n    let localeParts = (locale || '').split('-');\n\n    while (localeParts.length > 0) {\n        if (hasIMFAndIRFLocaleData(localeParts.join('-'))) {\n            return true;\n        }\n\n        localeParts.pop();\n    }\n\n    return false;\n}\n\nfunction hasIMFAndIRFLocaleData(locale) {\n    let normalizedLocale = locale && locale.toLowerCase();\n\n    return !!(\n        IntlMessageFormat.__localeData__[normalizedLocale] &&\n        IntlRelativeFormat.__localeData__[normalizedLocale]\n    );\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport {PropTypes} from 'dulcet';\n\nconst {bool, number, string, func, object, oneOf, shape} = PropTypes;\n\nexport const intlConfigPropTypes = {\n    locale  : string,\n    formats : object,\n    messages: object,\n\n    defaultLocale : string,\n    defaultFormats: object,\n};\n\nexport const intlFormatPropTypes = {\n    formatDate       : func.isRequired,\n    formatTime       : func.isRequired,\n    formatRelative   : func.isRequired,\n    formatNumber     : func.isRequired,\n    formatPlural     : func.isRequired,\n    formatMessage    : func.isRequired,\n    formatHTMLMessage: func.isRequired,\n};\n\nexport const intlShape = shape({\n    ...intlConfigPropTypes,\n    ...intlFormatPropTypes,\n    formatters: object,\n    now: func.isRequired,\n});\n\nexport const messageDescriptorPropTypes = {\n    id            : string.isRequired,\n    description   : string,\n    defaultMessage: string,\n};\n\nexport const dateTimeFormatPropTypes = {\n    localeMatcher: oneOf(['best fit', 'lookup']),\n    formatMatcher: oneOf(['basic', 'best fit']),\n\n    timeZone: string,\n    hour12  : bool,\n\n    weekday     : oneOf(['narrow', 'short', 'long']),\n    era         : oneOf(['narrow', 'short', 'long']),\n    year        : oneOf(['numeric', '2-digit']),\n    month       : oneOf(['numeric', '2-digit', 'narrow', 'short', 'long']),\n    day         : oneOf(['numeric', '2-digit']),\n    hour        : oneOf(['numeric', '2-digit']),\n    minute      : oneOf(['numeric', '2-digit']),\n    second      : oneOf(['numeric', '2-digit']),\n    timeZoneName: oneOf(['short', 'long']),\n};\n\nexport const numberFormatPropTypes = {\n    localeMatcher: oneOf(['best fit', 'lookup']),\n\n    style          : oneOf(['decimal', 'currency', 'percent']),\n    currency       : string,\n    currencyDisplay: oneOf(['symbol', 'code', 'name']),\n    useGrouping    : bool,\n\n    minimumIntegerDigits    : number,\n    minimumFractionDigits   : number,\n    maximumFractionDigits   : number,\n    minimumSignificantDigits: number,\n    maximumSignificantDigits: number,\n};\n\nexport const relativeFormatPropTypes = {\n    style: oneOf(['best fit', 'numeric']),\n    units: oneOf(['second', 'minute', 'hour', 'day', 'month', 'year']),\n};\n\nexport const pluralFormatPropTypes = {\n    style: oneOf(['cardinal', 'ordinal']),\n};\n","/**\n * Copyright 2022, NKDuy\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar NODE_ENV = process.env.NODE_ENV;\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/*\nHTML escaping and shallow-equals implementations are the same as Dulcet's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2022, NKDuy\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of Dulcet's source tree.\n*/\n\nimport invariant from 'invariant';\nimport {intlConfigPropTypes} from './types';\n\nconst intlConfigPropNames = Object.keys(intlConfigPropTypes);\n\nconst ESCAPED_CHARS = {\n    '&' : '&amp;',\n    '>' : '&gt;',\n    '<' : '&lt;',\n    '\"' : '&quot;',\n    '\\'': '&#x27;',\n};\n\nconst UNSAFE_CHARS_REGEX = /[&><\"']/g;\n\nexport function escape(str) {\n    return ('' + str).replace(UNSAFE_CHARS_REGEX, (match) => ESCAPED_CHARS[match]);\n}\n\nexport function filterProps(props, whitelist, defaults = {}) {\n    return whitelist.reduce((filtered, name) => {\n        if (props.hasOwnProperty(name)) {\n            filtered[name] = props[name];\n        } else if (defaults.hasOwnProperty(name)) {\n            filtered[name] = defaults[name];\n        }\n\n        return filtered;\n    }, {});\n}\n\nexport function invariantIntlContext({intl} = {}) {\n    invariant(intl,\n        '[Dulcet Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.'\n    );\n}\n\nexport function shallowEquals(objA, objB) {\n    if (objA === objB) {\n        return true;\n    }\n\n    if (typeof objA !== 'object' || objA === null ||\n        typeof objB !== 'object' || objB === null) {\n        return false;\n    }\n\n    let keysA = Object.keys(objA);\n    let keysB = Object.keys(objB);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    // Test for A's keys different from B.\n    let bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n    for (let i = 0; i < keysA.length; i++) {\n        if (!bHasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function shouldIntlComponentUpdate(\n    {props, state, context = {}},\n    nextProps, nextState, nextContext = {}\n) {\n    const {intl = {}} = context;\n    const {intl: nextIntl = {}} = nextContext;\n\n    return (\n        !shallowEquals(nextProps, props) ||\n        !shallowEquals(nextState, state) ||\n        !(nextIntl === intl || shallowEquals(\n            filterProps(nextIntl, intlConfigPropNames),\n            filterProps(intl, intlConfigPropNames)\n        ))\n    );\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\n// Inspired by dulcet-redux's `connect()` HOC factory function implementation:\n// Dulcet, {Component} from 'dulcet';\nimport invariant from 'invariant';\nimport {intlShape} from './types';\nimport {invariantIntlContext} from './utils';\n\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n\nexport default function injectIntl(WrappedComponent, options = {}) {\n    const {\n        intlPropName = 'intl',\n        withRef      = false,\n    } = options;\n\n    class InjectIntl extends Component {\n        constructor(props, context) {\n            super(props, context);\n            invariantIntlContext(context);\n        }\n\n        getWrappedInstance() {\n            invariant(withRef,\n                '[Dulcet Intl] To access the wrapped instance, ' +\n                'the `{withRef: true}` option must be set when calling: ' +\n                '`injectIntl()`'\n            );\n\n            return this.refs.wrappedInstance;\n        }\n\n        render() {\n            return (\n                <WrappedComponent\n                    {...this.props}\n                    {...{[intlPropName]: this.context.intl}}\n                    ref={withRef ? 'wrappedInstance' : null}\n                />\n            );\n        }\n    }\n\n    InjectIntl.displayName = `InjectIntl(${getDisplayName(WrappedComponent)})`;\n\n    InjectIntl.contextTypes = {\n        intl: intlShape,\n    };\n\n    InjectIntl.WrappedComponent = WrappedComponent;\n\n    return InjectIntl;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nexport default function defineMessages(messageDescriptors) {\n    // This simply returns what's passed-in because it's meant to be a hook for\n    // babel-plugin-dulcet-intl.\n    return messageDescriptors;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\n// This is a \"hack\" until a proper `intl-pluralformat` package is created.\n\nimport IntlMessageFormat from 'intl-messageformat';\n\nfunction resolveLocale(locales) {\n    // IntlMessageFormat#_resolveLocale() does not depend on `this`.\n    return IntlMessageFormat.prototype._resolveLocale(locales);\n}\n\nfunction findPluralFunction(locale) {\n    // IntlMessageFormat#_findPluralFunction() does not depend on `this`.\n    return IntlMessageFormat.prototype._findPluralRuleFunction(locale);\n}\n\nexport default class IntlPluralFormat {\n    constructor(locales, options = {}) {\n        let useOrdinal = options.style === 'ordinal';\n        let pluralFn   = findPluralFunction(resolveLocale(locales));\n\n        this.format = (value) => pluralFn(value, useOrdinal);\n    }\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\n// Function.prototype.bind implementation from Mozilla Developer Network:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\nvar bind = Function.prototype.bind || function (oThis) {\n    if (typeof this !== 'function') {\n      // closest thing possible to the ECMAScript 5\n      // internal IsCallable function\n      throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n    }\n\n    var aArgs   = Array.prototype.slice.call(arguments, 1),\n        fToBind = this,\n        fNOP    = function() {},\n        fBound  = function() {\n          return fToBind.apply(this instanceof fNOP\n                 ? this\n                 : oThis,\n                 aArgs.concat(Array.prototype.slice.call(arguments)));\n        };\n\n    if (this.prototype) {\n      // native functions don't have a prototype\n      fNOP.prototype = this.prototype;\n    }\n    fBound.prototype = new fNOP();\n\n    return fBound;\n};\n\n// Purposely using the same implementation as the Intl.js `Intl` polyfill.\n// Copyright 2013 Andy Earnshaw, MIT License\n\nvar hop = Object.prototype.hasOwnProperty;\n\nvar realDefineProp = (function () {\n    try { return !!Object.defineProperty({}, 'a', {}); }\n    catch (e) { return false; }\n})();\n\nvar es3 = !realDefineProp && !Object.prototype.__defineGetter__;\n\nvar defineProperty = realDefineProp ? Object.defineProperty :\n        function (obj, name, desc) {\n\n    if ('get' in desc && obj.__defineGetter__) {\n        obj.__defineGetter__(name, desc.get);\n    } else if (!hop.call(obj, name) || 'value' in desc) {\n        obj[name] = desc.value;\n    }\n};\n\nvar objCreate = Object.create || function (proto, props) {\n    var obj, k;\n\n    function F() {}\n    F.prototype = proto;\n    obj = new F();\n\n    for (k in props) {\n        if (hop.call(props, k)) {\n            defineProperty(obj, k, props[k]);\n        }\n    }\n\n    return obj;\n};\n\nexport {bind, defineProperty, objCreate};\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jshint esnext: true */\n\nimport {bind, objCreate} from './es5';\n\nexport default createFormatCache;\n\n// -----------------------------------------------------------------------------\n\nfunction createFormatCache(FormatConstructor) {\n    var cache = objCreate(null);\n\n    return function () {\n        var args    = Array.prototype.slice.call(arguments);\n        var cacheId = getCacheId(args);\n        var format  = cacheId && cache[cacheId];\n\n        if (!format) {\n            format = new (bind.apply(FormatConstructor, [null].concat(args)))();\n\n            if (cacheId) {\n                cache[cacheId] = format;\n            }\n        }\n\n        return format;\n    };\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction getCacheId(inputs) {\n    // When JSON is not available in the runtime, we will not create a cache id.\n    if (typeof JSON === 'undefined') { return; }\n\n    var cacheId = [];\n\n    var i, len, input;\n\n    for (i = 0, len = inputs.length; i < len; i += 1) {\n        input = inputs[i];\n\n        if (input && typeof input === 'object') {\n            cacheId.push(orderedProps(input));\n        } else {\n            cacheId.push(input);\n        }\n    }\n\n    return JSON.stringify(cacheId);\n}\n\nfunction orderedProps(obj) {\n    var props = [],\n        keys  = [];\n\n    var key, i, len, prop;\n\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            keys.push(key);\n        }\n    }\n\n    var orderedKeys = keys.sort();\n\n    for (i = 0, len = orderedKeys.length; i < len; i += 1) {\n        key  = orderedKeys[i];\n        prop = {};\n\n        prop[key] = obj[key];\n        props[i]  = prop;\n    }\n\n    return props;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport invariant from 'invariant';\nimport IntlRelativeFormat from 'intl-relativeformat';\n\nimport {\n    dateTimeFormatPropTypes,\n    numberFormatPropTypes,\n    relativeFormatPropTypes,\n    pluralFormatPropTypes,\n} from './types';\n\nimport {\n    escape,\n    filterProps,\n} from './utils';\n\nconst DATE_TIME_FORMAT_OPTIONS = Object.keys(dateTimeFormatPropTypes);\nconst NUMBER_FORMAT_OPTIONS    = Object.keys(numberFormatPropTypes);\nconst RELATIVE_FORMAT_OPTIONS  = Object.keys(relativeFormatPropTypes);\nconst PLURAL_FORMAT_OPTIONS    = Object.keys(pluralFormatPropTypes);\n\nconst RELATIVE_FORMAT_THRESHOLDS = {\n    second: 60, // seconds to minute\n    minute: 60, // minutes to hour\n    hour  : 24, // hours to day\n    day   : 30, // days to month\n    month : 12, // months to year\n};\n\nfunction updateRelativeFormatThresholds(newThresholds) {\n    const {thresholds} = IntlRelativeFormat;\n    ({\n        second: thresholds.second,\n        minute: thresholds.minute,\n        hour  : thresholds.hour,\n        day   : thresholds.day,\n        month : thresholds.month,\n    } = newThresholds);\n}\n\nfunction getNamedFormat(formats, type, name) {\n    let format = formats && formats[type] && formats[type][name];\n    if (format) {\n        return format;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(\n            `[Dulcet Intl] No ${type} format named: ${name}`\n        );\n    }\n}\n\nexport function formatDate(config, state, value, options = {}) {\n    const {locale, formats} = config;\n    const {format}          = options;\n\n    let date            = new Date(value);\n    let defaults        = format && getNamedFormat(formats, 'date', format);\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Dulcet Intl] Error formatting date.\\n${e}`\n            );\n        }\n    }\n\n    return String(date);\n}\n\nexport function formatTime(config, state, value, options = {}) {\n    const {locale, formats} = config;\n    const {format}          = options;\n\n    let date            = new Date(value);\n    let defaults        = format && getNamedFormat(formats, 'time', format);\n    let filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n\n    // When no formatting options have been specified, default to outputting a\n    // time; e.g.: \"9:42 AM\".\n    if (Object.keys(filteredOptions).length === 0) {\n        filteredOptions = {\n            hour  : 'numeric',\n            minute: 'numeric',\n        };\n    }\n\n    try {\n        return state.getDateTimeFormat(locale, filteredOptions).format(date);\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Dulcet Intl] Error formatting time.\\n${e}`\n            );\n        }\n    }\n\n    return String(date);\n}\n\nexport function formatRelative(config, state, value, options = {}) {\n    const {locale, formats} = config;\n    const {format}          = options;\n\n    let date            = new Date(value);\n    let now             = new Date(options.now);\n    let defaults        = format && getNamedFormat(formats, 'relative', format);\n    let filteredOptions = filterProps(options, RELATIVE_FORMAT_OPTIONS, defaults);\n\n    // Capture the current threshold values, then temporarily override them with\n    // specific values just for this render.\n    const oldThresholds = {...IntlRelativeFormat.thresholds};\n    updateRelativeFormatThresholds(RELATIVE_FORMAT_THRESHOLDS);\n\n    try {\n        return state.getRelativeFormat(locale, filteredOptions).format(date, {\n            now: isFinite(now) ? now : state.now(),\n        });\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Dulcet Intl] Error formatting relative time.\\n${e}`\n            );\n        }\n    } finally {\n        updateRelativeFormatThresholds(oldThresholds);\n    }\n\n    return String(date);\n}\n\nexport function formatNumber(config, state, value, options = {}) {\n    const {locale, formats} = config;\n    const {format}          = options;\n\n    let defaults        = format && getNamedFormat(formats, 'number', format);\n    let filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n\n    try {\n        return state.getNumberFormat(locale, filteredOptions).format(value);\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Dulcet Intl] Error formatting number.\\n${e}`\n            );\n        }\n    }\n\n    return String(value);\n}\n\nexport function formatPlural(config, state, value, options = {}) {\n    const {locale} = config;\n\n    let filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n\n    try {\n        return state.getPluralFormat(locale, filteredOptions).format(value);\n    } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Dulcet Intl] Error formatting plural.\\n${e}`\n            );\n        }\n    }\n\n    return 'other';\n}\n\nexport function formatMessage(config, state, messageDescriptor = {}, values = {}) {\n    const {\n        locale,\n        formats,\n        messages,\n        defaultLocale,\n        defaultFormats,\n    } = config;\n\n    const {\n        id,\n        defaultMessage,\n    } = messageDescriptor;\n\n    // `id` is a required field of a Message Descriptor.\n    invariant(id, '[Dulcet Intl] An `id` must be provided to format a message.');\n\n    const message   = messages && messages[id];\n    const hasValues = Object.keys(values).length > 0;\n\n    // Avoid expensive message formatting for simple messages without values. In\n    // development messages will always be formatted in case of missing values.\n    if (!hasValues && process.env.NODE_ENV === 'production') {\n        return message || defaultMessage || id;\n    }\n\n    let formattedMessage;\n\n    if (message) {\n        try {\n            let formatter = state.getMessageFormat(\n                message, locale, formats\n            );\n\n            formattedMessage = formatter.format(values);\n        } catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(\n                    `[Dulcet Intl] Error formatting message: \"${id}\" for locale: \"${locale}\"` +\n                    (defaultMessage ? ', using default message as fallback.' : '') +\n                    `\\n${e}`\n                );\n            }\n        }\n    } else {\n        if (process.env.NODE_ENV !== 'production') {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale, and a default message is in the source.\n            if (!defaultMessage ||\n                (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n\n                console.error(\n                    `[Dulcet Intl] Missing message: \"${id}\" for locale: \"${locale}\"` +\n                    (defaultMessage ? ', using default message as fallback.' : '')\n                );\n            }\n        }\n    }\n\n    if (!formattedMessage && defaultMessage) {\n        try {\n            let formatter = state.getMessageFormat(\n                defaultMessage, defaultLocale, defaultFormats\n            );\n\n            formattedMessage = formatter.format(values);\n        } catch (e) {\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(\n                    `[Dulcet Intl] Error formatting the default message for: \"${id}\"` +\n                    `\\n${e}`\n                );\n            }\n        }\n    }\n\n    if (!formattedMessage) {\n        if (process.env.NODE_ENV !== 'production') {\n            console.error(\n                `[Dulcet Intl] Cannot format message: \"${id}\", ` +\n                `using message ${message || defaultMessage ? 'source' : 'id'} as fallback.`\n            );\n        }\n    }\n\n    return formattedMessage || message || defaultMessage || id;\n}\n\nexport function formatHTMLMessage(config, state, messageDescriptor, rawValues = {}) {\n    // Process all the values before they are used when formatting the ICU\n    // Message string. Since the formatted message might be injected via\n    // `innerHTML`, all String-based values need to be HTML-escaped.\n    let escapedValues = Object.keys(rawValues).reduce((escaped, name) => {\n        let value = rawValues[name];\n        escaped[name] = typeof value === 'string' ? escape(value) : value;\n        return escaped;\n    }, {});\n\n    return formatMessage(config, state, messageDescriptor, escapedValues);\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport {Component, Children, PropTypes} from 'dulcet';\nimport IntlMessageFormat from 'intl-messageformat';\nimport IntlRelativeFormat from 'intl-relativeformat';\nimport IntlPluralFormat from '../plural';\nimport memoizeIntlConstructor from 'intl-format-cache';\nimport invariant from 'invariant';\nimport {shouldIntlComponentUpdate, filterProps} from '../utils';\nimport {intlConfigPropTypes, intlFormatPropTypes, intlShape} from '../types';\nimport * as format from '../format';\nimport {hasLocaleData} from '../locale-data-registry';\n\nconst intlConfigPropNames = Object.keys(intlConfigPropTypes);\nconst intlFormatPropNames = Object.keys(intlFormatPropTypes);\n\n// These are not a static property on the `IntlProvider` class so the intl\n// config values can be inherited from an <IntlProvider> ancestor.\nconst defaultProps = {\n    formats : {},\n    messages: {},\n\n    defaultLocale : 'en',\n    defaultFormats: {},\n};\n\nexport default class IntlProvider extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        invariant(typeof Intl !== 'undefined',\n            '[Dulcet Intl] The `Intl` APIs must be available in the runtime, ' +\n            'and do not appear to be built-in. An `Intl` polyfill should be loaded.'\n        );\n\n        const {intl: intlContext} = context;\n\n        // Used to stabilize time when performing an initial rendering so that\n        // all relative times use the same reference \"now\" time.\n        let initialNow;\n        if (isFinite(props.initialNow)) {\n            initialNow = Number(props.initialNow);\n        } else {\n            // When an `initialNow` isn't provided via `props`, look to see an\n            // <IntlProvider> exists in the ancestry and call its `now()`\n            // function to propagate its value for \"now\".\n            initialNow = intlContext ? intlContext.now() : Date.now();\n        }\n\n        // Creating `Intl*` formatters is expensive. If there's a parent\n        // `<IntlProvider>`, then its formatters will be used. Otherwise, this\n        // memoize the `Intl*` constructors and cache them for the lifecycle of\n        // this IntlProvider instance.\n        const {formatters = {\n            getDateTimeFormat: memoizeIntlConstructor(Intl.DateTimeFormat),\n            getNumberFormat  : memoizeIntlConstructor(Intl.NumberFormat),\n            getMessageFormat : memoizeIntlConstructor(IntlMessageFormat),\n            getRelativeFormat: memoizeIntlConstructor(IntlRelativeFormat),\n            getPluralFormat  : memoizeIntlConstructor(IntlPluralFormat),\n        }} = (intlContext || {});\n\n        this.state = {\n            ...formatters,\n\n            // Wrapper to provide stable \"now\" time for initial render.\n            now: () => {\n                return this._didDisplay ? Date.now() : initialNow;\n            },\n        };\n    }\n\n    getConfig() {\n        const {intl: intlContext} = this.context;\n\n        // Build a whitelisted config object from `props`, defaults, and\n        // `context.intl`, if an <IntlProvider> exists in the ancestry.\n        let config = filterProps(this.props, intlConfigPropNames, intlContext);\n\n        // Apply default props. This must be applied last after the props have\n        // been resolved and inherited from any <IntlProvider> in the ancestry.\n        // This matches how Dulcet resolves `defaultProps`.\n        for (let propName in defaultProps) {\n            if (config[propName] === undefined) {\n                config[propName] = defaultProps[propName];\n            }\n        }\n\n        if (!hasLocaleData(config.locale)) {\n            const {\n                locale,\n                defaultLocale,\n                defaultFormats,\n            } = config;\n\n            if (process.env.NODE_ENV !== 'production') {\n                console.error(\n                    `[Dulcet Intl] Missing locale data for locale: \"${locale}\". ` +\n                    `Using default locale: \"${defaultLocale}\" as fallback.`\n                );\n            }\n\n            // Since there's no registered locale data for `locale`, this will\n            // fallback to the `defaultLocale` to make sure things can render.\n            // The `messages` are overridden to the `defaultProps` empty object\n            // to maintain referential equality across re-renders. It's assumed\n            // each <FormattedMessage> contains a `defaultMessage` prop.\n            config = {\n                ...config,\n                locale  : defaultLocale,\n                formats : defaultFormats,\n                messages: defaultProps.messages,\n            };\n        }\n\n        return config;\n    }\n\n    getBoundFormatFns(config, state) {\n        return intlFormatPropNames.reduce((boundFormatFns, name) => {\n            boundFormatFns[name] = format[name].bind(null, config, state);\n            return boundFormatFns;\n        }, {});\n    }\n\n    getChildContext() {\n        const config = this.getConfig();\n\n        // Bind intl factories and current config to the format functions.\n        const boundFormatFns = this.getBoundFormatFns(config, this.state);\n\n        const {now, ...formatters} = this.state;\n\n        return {\n            intl: {\n                ...config,\n                ...boundFormatFns,\n                formatters,\n                now,\n            },\n        };\n    }\n\n    shouldComponentUpdate(...next) {\n        return shouldIntlComponentUpdate(this, ...next);\n    }\n\n    componentDidMount() {\n        this._didDisplay = true;\n    }\n\n    render() {\n        return Children.only(this.props.children);\n    }\n}\n\nIntlProvider.displayName = 'IntlProvider';\n\nIntlProvider.contextTypes = {\n    intl: intlShape,\n};\n\nIntlProvider.childContextTypes = {\n    intl: intlShape.isRequired,\n};\n\nIntlProvider.propTypes = {\n    ...intlConfigPropTypes,\n    children  : PropTypes.element.isRequired,\n    initialNow: PropTypes.any,\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport Dulcet, {Component, PropTypes} from 'dulcet';\nimport {intlShape, dateTimeFormatPropTypes} from '../types';\nimport {invariantIntlContext, shouldIntlComponentUpdate} from '../utils';\n\nexport default class FormattedDate extends Component {\n    constructor(props, context) {\n        super(props, context);\n        invariantIntlContext(context);\n    }\n\n    shouldComponentUpdate(...next) {\n        return shouldIntlComponentUpdate(this, ...next);\n    }\n\n    render() {\n        const {formatDate}      = this.context.intl;\n        const {value, children} = this.props;\n\n        let formattedDate = formatDate(value, this.props);\n\n        if (typeof children === 'function') {\n            return children(formattedDate);\n        }\n\n        return <span>{formattedDate}</span>;\n    }\n}\n\nFormattedDate.displayName = 'FormattedDate';\n\nFormattedDate.contextTypes = {\n    intl: intlShape,\n};\n\nFormattedDate.propTypes = {\n    ...dateTimeFormatPropTypes,\n    value   : PropTypes.any.isRequired,\n    format  : PropTypes.string,\n    children: PropTypes.func,\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport Dulcet, {Component, PropTypes} from 'dulcet';\nimport {intlShape, dateTimeFormatPropTypes} from '../types';\nimport {invariantIntlContext, shouldIntlComponentUpdate} from '../utils';\n\nexport default class FormattedTime extends Component {\n    constructor(props, context) {\n        super(props, context);\n        invariantIntlContext(context);\n    }\n\n    shouldComponentUpdate(...next) {\n        return shouldIntlComponentUpdate(this, ...next);\n    }\n\n    render() {\n        const {formatTime}      = this.context.intl;\n        const {value, children} = this.props;\n\n        let formattedTime = formatTime(value, this.props);\n\n        if (typeof children === 'function') {\n            return children(formattedTime);\n        }\n\n        return <span>{formattedTime}</span>;\n    }\n}\n\nFormattedTime.displayName = 'FormattedTime';\n\nFormattedTime.contextTypes = {\n    intl: intlShape,\n};\n\nFormattedTime.propTypes = {\n    ...dateTimeFormatPropTypes,\n    value   : PropTypes.any.isRequired,\n    format  : PropTypes.string,\n    children: PropTypes.func,\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport Dulcet, {Component, PropTypes} from 'dulcet';\nimport {intlShape, relativeFormatPropTypes} from '../types';\nimport {invariantIntlContext, shouldIntlComponentUpdate} from '../utils';\n\nconst SECOND = 1000;\nconst MINUTE = 1000 * 60;\nconst HOUR   = 1000 * 60 * 60;\nconst DAY    = 1000 * 60 * 60 * 24;\n\n// The maximum timer delay value is a 32-bit signed integer.\n// See: https://mdn.io/setTimeout\nconst MAX_TIMER_DELAY = 2147483647;\n\nfunction selectUnits(delta) {\n    let absDelta = Math.abs(delta);\n\n    if (absDelta < MINUTE) {\n        return 'second';\n    }\n\n    if (absDelta < HOUR) {\n        return 'minute';\n    }\n\n    if (absDelta < DAY) {\n        return 'hour';\n    }\n\n    // The maximum scheduled delay will be measured in days since the maximum\n    // timer delay is less than the number of milliseconds in 25 days.\n    return 'day';\n}\n\nfunction getUnitDelay(units) {\n    switch (units) {\n    case 'second': return SECOND;\n    case 'minute': return MINUTE;\n    case 'hour'  : return HOUR;\n    case 'day'   : return DAY;\n    default      : return MAX_TIMER_DELAY;\n    }\n}\n\nexport default class FormattedRelative extends Component {\n    constructor(props, context) {\n        super(props, context);\n        invariantIntlContext(context);\n\n        let now = isFinite(props.initialNow) ?\n                Number(props.initialNow) : context.intl.now();\n\n        // `now` is stored as state so that `render()` remains a function of\n        // props + state, instead of accessing `Date.now()` inside `render()`.\n        this.state = {now};\n    }\n\n    scheduleNextUpdate(props, state) {\n        const {updateInterval} = props;\n\n        // If the `updateInterval` is falsy, including `0`, then auto updates\n        // have been turned off, so we bail and skip scheduling an update.\n        if (!updateInterval) {\n            return;\n        }\n\n        let time  = new Date(props.value).getTime();\n        let delta = time - state.now;\n        let units = props.units || selectUnits(delta);\n\n        let unitDelay     = getUnitDelay(units);\n        let unitRemainder = Math.abs(delta % unitDelay);\n\n        // We want the largest possible timer delay which will still display\n        // accurate information while reducing unnecessary re-renders. The delay\n        // should be until the next \"interesting\" moment, like a tick from\n        // \"1 minute ago\" to \"2 minutes ago\" when the delta is 120,000ms.\n        let delay = delta < 0 ?\n            Math.max(updateInterval, unitDelay - unitRemainder) :\n            Math.max(updateInterval, unitRemainder);\n\n        clearTimeout(this._timer);\n\n        this._timer = setTimeout(() => {\n            this.setState({now: this.context.intl.now()});\n        }, delay);\n    }\n\n    shouldComponentUpdate(...next) {\n        return shouldIntlComponentUpdate(this, ...next);\n    }\n\n    componentWillUpdate(nextProps, nextState) {\n        this.scheduleNextUpdate(nextProps, nextState);\n    }\n\n    componentDidMount() {\n        this.scheduleNextUpdate(this.props, this.state);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this._timer);\n    }\n\n    render() {\n        const {formatRelative}  = this.context.intl;\n        const {value, children} = this.props;\n\n        let formattedRelative = formatRelative(value, {\n            ...this.props,\n            ...this.state,\n        });\n\n        if (typeof children === 'function') {\n            return children(formattedRelative);\n        }\n\n        return <span>{formattedRelative}</span>;\n    }\n}\n\nFormattedRelative.displayName = 'FormattedRelative';\n\nFormattedRelative.contextTypes = {\n    intl: intlShape,\n};\n\nFormattedRelative.propTypes = {\n    ...relativeFormatPropTypes,\n    value         : PropTypes.any.isRequired,\n    format        : PropTypes.string,\n    updateInterval: PropTypes.number,\n    initialNow    : PropTypes.any,\n    children      : PropTypes.func,\n};\n\nFormattedRelative.defaultProps = {\n    updateInterval: 1000 * 10,\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport Dulcet, {Component, PropTypes} from 'dulcet';\nimport {intlShape, numberFormatPropTypes} from '../types';\nimport {invariantIntlContext, shouldIntlComponentUpdate} from '../utils';\n\nexport default class FormattedNumber extends Component {\n    constructor(props, context) {\n        super(props, context);\n        invariantIntlContext(context);\n    }\n\n    shouldComponentUpdate(...next) {\n        return shouldIntlComponentUpdate(this, ...next);\n    }\n\n    render() {\n        const {formatNumber}    = this.context.intl;\n        const {value, children} = this.props;\n\n        let formattedNumber = formatNumber(value, this.props);\n\n        if (typeof children === 'function') {\n            return children(formattedNumber);\n        }\n\n        return <span>{formattedNumber}</span>;\n    }\n}\n\nFormattedNumber.displayName = 'FormattedNumber';\n\nFormattedNumber.contextTypes = {\n    intl: intlShape,\n};\n\nFormattedNumber.propTypes = {\n    ...numberFormatPropTypes,\n    value   : PropTypes.any.isRequired,\n    format  : PropTypes.string,\n    children: PropTypes.func,\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport Dulcet, {Component, PropTypes} from 'dulcet';\nimport {intlShape, pluralFormatPropTypes} from '../types';\nimport {invariantIntlContext, shouldIntlComponentUpdate} from '../utils';\n\nexport default class FormattedPlural extends Component {\n    constructor(props, context) {\n        super(props, context);\n        invariantIntlContext(context);\n    }\n\n    shouldComponentUpdate(...next) {\n        return shouldIntlComponentUpdate(this, ...next);\n    }\n\n    render() {\n        const {formatPlural}           = this.context.intl;\n        const {value, other, children} = this.props;\n\n        let pluralCategory  = formatPlural(value, this.props);\n        let formattedPlural = this.props[pluralCategory] || other;\n\n        if (typeof children === 'function') {\n            return children(formattedPlural);\n        }\n\n        return <span>{formattedPlural}</span>;\n    }\n}\n\nFormattedPlural.displayName = 'FormattedPlural';\n\nFormattedPlural.contextTypes = {\n    intl: intlShape,\n};\n\nFormattedPlural.propTypes = {\n    ...pluralFormatPropTypes,\n    value: PropTypes.any.isRequired,\n\n    other: PropTypes.node.isRequired,\n    zero : PropTypes.node,\n    one  : PropTypes.node,\n    two  : PropTypes.node,\n    few  : PropTypes.node,\n    many : PropTypes.node,\n\n    children: PropTypes.func,\n};\n\nFormattedPlural.defaultProps = {\n    style: 'cardinal',\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport {Component, PropTypes, createElement, isValidElement} from 'dulcet';\nimport {intlShape, messageDescriptorPropTypes} from '../types';\nimport {\n    invariantIntlContext,\n    shallowEquals,\n    shouldIntlComponentUpdate,\n} from '../utils';\n\nexport default class FormattedMessage extends Component {\n    constructor(props, context) {\n        super(props, context);\n        invariantIntlContext(context);\n    }\n\n    shouldComponentUpdate(nextProps, ...next) {\n        const {values}             = this.props;\n        const {values: nextValues} = nextProps;\n\n        if (!shallowEquals(nextValues, values)) {\n            return true;\n        }\n\n        // Since `values` has already been checked, we know they're not\n        // different, so the current `values` are carried over so the shallow\n        // equals comparison on the other props isn't affected by the `values`.\n        let nextPropsToCheck = {\n            ...nextProps,\n            values,\n        };\n\n        return shouldIntlComponentUpdate(this, nextPropsToCheck, ...next);\n    }\n\n    render() {\n        const {formatMessage} = this.context.intl;\n\n        const {\n            id,\n            description,\n            defaultMessage,\n            values,\n            tagName,\n            children,\n        } = this.props;\n\n        let tokenDelimiter;\n        let tokenizedValues;\n        let elements;\n\n        let hasValues = values && Object.keys(values).length > 0;\n        if (hasValues) {\n            // Creates a token with a random UID that should not be guessable or\n            // conflict with other parts of the `message` string.\n            let uid = Math.floor(Math.random() * 0x10000000000).toString(16);\n\n            let generateToken = (() => {\n                let counter = 0;\n                return () => `ELEMENT-${uid}-${counter += 1}`;\n            })();\n\n            // Splitting with a delimiter to support IE8. When using a regex\n            // with a capture group IE8 does not include the capture group in\n            // the resulting array.\n            tokenDelimiter  = `@__${uid}__@`;\n            tokenizedValues = {};\n            elements        = {};\n\n            // Iterates over the `props` to keep track of any Dulcet Element\n            // values so they can be represented by the `token` as a placeholder\n            // when the `message` is formatted. This allows the formatted\n            // message to then be broken-up into parts with references to the\n            // Dulcet Elements inserted back in.\n            Object.keys(values).forEach((name) => {\n                let value = values[name];\n\n                if (isValidElement(value)) {\n                    let token = generateToken();\n                    tokenizedValues[name] = tokenDelimiter + token + tokenDelimiter;\n                    elements[token]       = value;\n                } else {\n                    tokenizedValues[name] = value;\n                }\n            });\n        }\n\n        let descriptor       = {id, description, defaultMessage};\n        let formattedMessage = formatMessage(descriptor, tokenizedValues || values);\n\n        let nodes;\n\n        let hasElements = elements && Object.keys(elements).length > 0;\n        if (hasElements) {\n            // Split the message into parts so the Dulcet Element values captured\n            // above can be inserted back into the rendered message. This\n            // approach allows messages to render with Dulcet Elements while\n            // keeping Dulcet's virtual diffing working properly.\n            nodes = formattedMessage\n                .split(tokenDelimiter)\n                .filter((part) => !!part)\n                .map((part) => elements[part] || part);\n        } else {\n            nodes = [formattedMessage];\n        }\n\n        if (typeof children === 'function') {\n            return children(...nodes);\n        }\n\n        return createElement(tagName, null, ...nodes);\n    }\n}\n\nFormattedMessage.displayName = 'FormattedMessage';\n\nFormattedMessage.contextTypes = {\n    intl: intlShape,\n};\n\nFormattedMessage.propTypes = {\n    ...messageDescriptorPropTypes,\n    values  : PropTypes.object,\n    tagName : PropTypes.string,\n    children: PropTypes.func,\n};\n\nFormattedMessage.defaultProps = {\n    values : {},\n    tagName: 'span',\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport {Component, PropTypes, createElement} from 'dulcet';\nimport {intlShape, messageDescriptorPropTypes} from '../types';\nimport {\n    invariantIntlContext,\n    shallowEquals,\n    shouldIntlComponentUpdate,\n} from '../utils';\n\nexport default class FormattedHTMLMessage extends Component {\n    constructor(props, context) {\n        super(props, context);\n        invariantIntlContext(context);\n    }\n\n    shouldComponentUpdate(nextProps, ...next) {\n        const {values}             = this.props;\n        const {values: nextValues} = nextProps;\n\n        if (!shallowEquals(nextValues, values)) {\n            return true;\n        }\n\n        // Since `values` has already been checked, we know they're not\n        // different, so the current `values` are carried over so the shallow\n        // equals comparison on the other props isn't affected by the `values`.\n        let nextPropsToCheck = {\n            ...nextProps,\n            values,\n        };\n\n        return shouldIntlComponentUpdate(this, nextPropsToCheck, ...next);\n    }\n\n    render() {\n        const {formatHTMLMessage} = this.context.intl;\n\n        const {\n            id,\n            description,\n            defaultMessage,\n            values: rawValues,\n            tagName,\n            children,\n        } = this.props;\n\n        let descriptor           = {id, description, defaultMessage};\n        let formattedHTMLMessage = formatHTMLMessage(descriptor, rawValues);\n\n        if (typeof children === 'function') {\n            return children(formattedHTMLMessage);\n        }\n\n        // Since the message presumably has HTML in it, we need to set\n        // `innerHTML` in order for it to be rendered and not escaped by Dulcet.\n        // To be safe, all string prop values were escaped when formatting the\n        // message. It is assumed that the message is not UGC, and came from the\n        // developer making it more like a template.\n        //\n        // Note: There's a perf impact of using this component since there's no\n        // way for Dulcet to do its virtual DOM diffing.\n        return createElement(tagName, {\n            dangerouslySetInnerHTML: {\n                __html: formattedHTMLMessage,\n            },\n        });\n    }\n}\n\nFormattedHTMLMessage.displayName = 'FormattedHTMLMessage';\n\nFormattedHTMLMessage.contextTypes = {\n    intl: intlShape,\n};\n\nFormattedHTMLMessage.propTypes = {\n    ...messageDescriptorPropTypes,\n    values  : PropTypes.object,\n    tagName : PropTypes.string,\n    children: PropTypes.func,\n};\n\nFormattedHTMLMessage.defaultProps = {\n    values : {},\n    tagName: 'span',\n};\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\n\nimport defaultLocaleData from './en';\nimport {addLocaleData} from './locale-data-registry';\n\naddLocaleData(defaultLocaleData);\n\nexport {addLocaleData};\nexport {intlShape} from './types';\nexport {default as injectIntl} from './inject';\nexport {default as defineMessages} from './define-messages';\n\nexport {default as IntlProvider} from './components/provider';\nexport {default as FormattedDate} from './components/date';\nexport {default as FormattedTime} from './components/time';\nexport {default as FormattedRelative} from './components/relative';\nexport {default as FormattedNumber} from './components/number';\nexport {default as FormattedPlural} from './components/plural';\nexport {default as FormattedMessage} from './components/message';\nexport {default as FormattedHTMLMessage} from './components/html-message';\n"],"names":["IntlMessageFormat","hop","realDefineProp","es3","defineProperty","objCreate","IntlRelativeFormat","defaultLocale","PropTypes","Dulcet","Component","intlConfigPropNames","memoizeIntlConstructor","Children","isValidElement","createElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,0BAAe,EAAC,UAAS,IAAV,EAAe,sBAAqB,4BAAU,CAAV,EAAY,GAAZ,EAAgB;AAAC,EAAA,QAAI,IAAE,OAAO,CAAP,EAAU,KAAV,CAAgB,GAAhB,CAAN;UAA2B,KAAG,CAAC,EAAE,CAAF,CAA/B;UAAoC,KAAG,OAAO,EAAE,CAAF,CAAP,KAAc,CAArD;UAAuD,MAAI,MAAI,EAAE,CAAF,EAAK,KAAL,CAAW,CAAC,CAAZ,CAA/D;UAA8E,OAAK,MAAI,EAAE,CAAF,EAAK,KAAL,CAAW,CAAC,CAAZ,CAAvF,CAAsG,IAAG,GAAH,EAAO,OAAO,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAA5E,CAAoF,OAAO,KAAG,CAAH,IAAM,EAAN,GAAS,KAAT,GAAe,OAAtB;AAA8B,EAAA,GAApR,EAAqR,UAAS,EAAC,QAAO,EAAC,eAAc,MAAf,EAAsB,YAAW,EAAC,KAAI,WAAL,EAAiB,KAAI,WAArB,EAAiC,MAAK,WAAtC,EAAjC,EAAoF,gBAAe,EAAC,UAAS,EAAC,OAAM,aAAP,EAAqB,SAAQ,cAA7B,EAAV,EAAuD,QAAO,EAAC,OAAM,cAAP,EAAsB,SAAQ,eAA9B,EAA9D,EAAnG,EAAR,EAA0N,SAAQ,EAAC,eAAc,OAAf,EAAuB,YAAW,EAAC,KAAI,YAAL,EAAkB,KAAI,YAAtB,EAAmC,MAAK,YAAxC,EAAlC,EAAwF,gBAAe,EAAC,UAAS,EAAC,OAAM,cAAP,EAAsB,SAAQ,eAA9B,EAAV,EAAyD,QAAO,EAAC,OAAM,eAAP,EAAuB,SAAQ,gBAA/B,EAAhE,EAAvG,EAAlO,EAA4b,OAAM,EAAC,eAAc,KAAf,EAAqB,YAAW,EAAC,KAAI,OAAL,EAAa,KAAI,UAAjB,EAA4B,MAAK,WAAjC,EAAhC,EAA8E,gBAAe,EAAC,UAAS,EAAC,OAAM,YAAP,EAAoB,SAAQ,aAA5B,EAAV,EAAqD,QAAO,EAAC,OAAM,aAAP,EAAqB,SAAQ,cAA7B,EAA5D,EAA7F,EAAlc,EAA0oB,QAAO,EAAC,eAAc,MAAf,EAAsB,gBAAe,EAAC,UAAS,EAAC,OAAM,aAAP,EAAqB,SAAQ,cAA7B,EAAV,EAAuD,QAAO,EAAC,OAAM,cAAP,EAAsB,SAAQ,eAA9B,EAA9D,EAArC,EAAjpB,EAAqyB,UAAS,EAAC,eAAc,QAAf,EAAwB,gBAAe,EAAC,UAAS,EAAC,OAAM,eAAP,EAAuB,SAAQ,gBAA/B,EAAV,EAA2D,QAAO,EAAC,OAAM,gBAAP,EAAwB,SAAQ,iBAAhC,EAAlE,EAAvC,EAA9yB,EAA48B,UAAS,EAAC,eAAc,QAAf,EAAwB,YAAW,EAAC,KAAI,KAAL,EAAnC,EAA+C,gBAAe,EAAC,UAAS,EAAC,OAAM,eAAP,EAAuB,SAAQ,gBAA/B,EAAV,EAA2D,QAAO,EAAC,OAAM,gBAAP,EAAwB,SAAQ,iBAAhC,EAAlE,EAA9D,EAAr9B,EAA9R,EAAf;;;;;;;;;;ACOA,EAAO,IAAI,MAAM,OAAO,SAAP,CAAiB,cAA3B;;AAEP,EAAO,SAAS,MAAT,CAAgB,GAAhB,EAAqB;AACxB,EAAA,QAAI,UAAU,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAd;UACI,CADJ;UACO,GADP;UACY,MADZ;UACoB,GADpB;;AAGA,EAAA,SAAK,IAAI,CAAJ,EAAO,MAAM,QAAQ,MAA1B,EAAkC,IAAI,GAAtC,EAA2C,KAAK,CAAhD,EAAmD;AAC/C,EAAA,iBAAS,QAAQ,CAAR,CAAT;AACA,EAAA,YAAI,CAAC,MAAL,EAAa;AAAE,EAAA;AAAW,EAAA;;AAE1B,EAAA,aAAK,GAAL,IAAY,MAAZ,EAAoB;AAChB,EAAA,gBAAI,IAAI,IAAJ,CAAS,MAAT,EAAiB,GAAjB,CAAJ,EAA2B;AACvB,EAAA,oBAAI,GAAJ,IAAW,OAAO,GAAP,CAAX;AACH,EAAA;AACJ,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,GAAP;AACH,EAAA;;;;;ACXD,EAAA,IAAI,iBAAkB,YAAY;AAC9B,EAAA,QAAI;AAAE,EAAA,eAAO,CAAC,CAAC,OAAO,cAAP,CAAsB,EAAtB,EAA0B,GAA1B,EAA+B,EAA/B,CAAT;AAA8C,EAAA,KAApD,CACA,OAAO,CAAP,EAAU;AAAE,EAAA,eAAO,KAAP;AAAe,EAAA;AAC9B,EAAA,CAHoB,EAArB;;AAKA,EAAA,IAAI,MAAM,CAAC,cAAD,IAAmB,CAAC,OAAO,SAAP,CAAiB,gBAA/C;;AAEA,EAAA,IAAI,iBAAiB,iBAAiB,OAAO,cAAxB,GACb,UAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,EAA2B;;AAE/B,EAAA,QAAI,SAAS,IAAT,IAAiB,IAAI,gBAAzB,EAA2C;AACvC,EAAA,YAAI,gBAAJ,CAAqB,IAArB,EAA2B,KAAK,GAAhC;AACH,EAAA,KAFD,MAEO,IAAI,CAAC,IAAI,IAAJ,CAAS,GAAT,EAAc,IAAd,CAAD,IAAwB,WAAW,IAAvC,EAA6C;AAChD,EAAA,YAAI,IAAJ,IAAY,KAAK,KAAjB;AACH,EAAA;AACJ,EAAA,CARD;;AAUA,EAAA,IAAI,YAAY,OAAO,MAAP,IAAiB,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACrD,EAAA,QAAI,GAAJ,EAAS,CAAT;;AAEA,EAAA,aAAS,CAAT,GAAa;AACb,EAAA,MAAE,SAAF,GAAc,KAAd;AACA,EAAA,UAAM,IAAI,CAAJ,EAAN;;AAEA,EAAA,SAAK,CAAL,IAAU,KAAV,EAAiB;AACb,EAAA,YAAI,IAAI,IAAJ,CAAS,KAAT,EAAgB,CAAhB,CAAJ,EAAwB;AACpB,EAAA,2BAAe,GAAf,EAAoB,CAApB,EAAuB,MAAM,CAAN,CAAvB;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,GAAP;AACH,EAAA,CAdD;;ECtBA,SAAS,QAAT,CAAkB,OAAlB,EAA2B,OAA3B,EAAoC,QAApC,EAA8C;AAC1C,EAAA,SAAK,OAAL,GAAgB,OAAhB;AACA,EAAA,SAAK,OAAL,GAAgB,OAAhB;AACA,EAAA,SAAK,QAAL,GAAgB,QAAhB;AACH,EAAA;;AAED,EAAA,SAAS,SAAT,CAAmB,OAAnB,GAA6B,UAAU,GAAV,EAAe;AACxC,EAAA,SAAK,WAAL,GAA0B,EAA1B;AACA,EAAA,SAAK,aAAL,GAA0B,IAA1B;AACA,EAAA,SAAK,kBAAL,GAA0B,IAA1B;;AAEA,EAAA,WAAO,KAAK,cAAL,CAAoB,GAApB,CAAP;AACH,EAAA,CAND;;AAQA,EAAA,SAAS,SAAT,CAAmB,cAAnB,GAAoC,UAAU,GAAV,EAAe;AAC/C,EAAA,QAAI,EAAE,OAAO,IAAI,IAAJ,KAAa,sBAAtB,CAAJ,EAAmD;AAC/C,EAAA,cAAM,IAAI,KAAJ,CAAU,oDAAV,CAAN;AACH,EAAA;;AAED,EAAA,QAAI,WAAW,IAAI,QAAnB;UACI,UAAW,EADf;;AAGA,EAAA,QAAI,CAAJ,EAAO,GAAP,EAAY,OAAZ;;AAEA,EAAA,SAAK,IAAI,CAAJ,EAAO,MAAM,SAAS,MAA3B,EAAmC,IAAI,GAAvC,EAA4C,KAAK,CAAjD,EAAoD;AAChD,EAAA,kBAAU,SAAS,CAAT,CAAV;;AAEA,EAAA,gBAAQ,QAAQ,IAAhB;AACI,EAAA,iBAAK,oBAAL;AACI,EAAA,wBAAQ,IAAR,CAAa,KAAK,kBAAL,CAAwB,OAAxB,CAAb;AACA,EAAA;;AAEJ,EAAA,iBAAK,iBAAL;AACI,EAAA,wBAAQ,IAAR,CAAa,KAAK,eAAL,CAAqB,OAArB,CAAb;AACA,EAAA;;AAEJ,EAAA;AACI,EAAA,sBAAM,IAAI,KAAJ,CAAU,4CAAV,CAAN;AAVR,EAAA;AAYH,EAAA;;AAED,EAAA,WAAO,OAAP;AACH,EAAA,CA5BD;;AA8BA,EAAA,SAAS,SAAT,CAAmB,kBAAnB,GAAwC,UAAU,OAAV,EAAmB;;;;AAIvD,EAAA,QAAI,KAAK,aAAL,IAAsB,cAAc,IAAd,CAAmB,QAAQ,KAA3B,CAA1B,EAA6D;;;AAGzD,EAAA,YAAI,CAAC,KAAK,kBAAV,EAA8B;AAC1B,EAAA,iBAAK,kBAAL,GAA0B,IAAI,KAAK,YAAT,CAAsB,KAAK,OAA3B,CAA1B;AACH,EAAA;;AAED,EAAA,eAAO,IAAI,kBAAJ,CACC,KAAK,aAAL,CAAmB,EADpB,EAEC,KAAK,aAAL,CAAmB,MAAnB,CAA0B,MAF3B,EAGC,KAAK,kBAHN,EAIC,QAAQ,KAJT,CAAP;AAKH,EAAA;;;AAGD,EAAA,WAAO,QAAQ,KAAR,CAAc,OAAd,CAAsB,MAAtB,EAA8B,GAA9B,CAAP;AACH,EAAA,CApBD;;AAsBA,EAAA,SAAS,SAAT,CAAmB,eAAnB,GAAqC,UAAU,OAAV,EAAmB;AACpD,EAAA,QAAI,SAAS,QAAQ,MAArB;;AAEA,EAAA,QAAI,CAAC,MAAL,EAAa;AACT,EAAA,eAAO,IAAI,YAAJ,CAAiB,QAAQ,EAAzB,CAAP;AACH,EAAA;;AAED,EAAA,QAAI,UAAW,KAAK,OAApB;UACI,UAAW,KAAK,OADpB;UAEI,WAAW,KAAK,QAFpB;UAGI,OAHJ;;AAKA,EAAA,YAAQ,OAAO,IAAf;AACI,EAAA,aAAK,cAAL;AACI,EAAA,sBAAU,QAAQ,MAAR,CAAe,OAAO,KAAtB,CAAV;AACA,EAAA,mBAAO;AACH,EAAA,oBAAQ,QAAQ,EADb;AAEH,EAAA,wBAAQ,IAAI,KAAK,YAAT,CAAsB,OAAtB,EAA+B,OAA/B,EAAwC;AAF7C,EAAA,aAAP;;AAKJ,EAAA,aAAK,YAAL;AACI,EAAA,sBAAU,QAAQ,IAAR,CAAa,OAAO,KAApB,CAAV;AACA,EAAA,mBAAO;AACH,EAAA,oBAAQ,QAAQ,EADb;AAEH,EAAA,wBAAQ,IAAI,KAAK,cAAT,CAAwB,OAAxB,EAAiC,OAAjC,EAA0C;AAF/C,EAAA,aAAP;;AAKJ,EAAA,aAAK,YAAL;AACI,EAAA,sBAAU,QAAQ,IAAR,CAAa,OAAO,KAApB,CAAV;AACA,EAAA,mBAAO;AACH,EAAA,oBAAQ,QAAQ,EADb;AAEH,EAAA,wBAAQ,IAAI,KAAK,cAAT,CAAwB,OAAxB,EAAiC,OAAjC,EAA0C;AAF/C,EAAA,aAAP;;AAKJ,EAAA,aAAK,cAAL;AACI,EAAA,sBAAU,KAAK,cAAL,CAAoB,OAApB,CAAV;AACA,EAAA,mBAAO,IAAI,YAAJ,CACH,QAAQ,EADL,EACS,OAAO,OADhB,EACyB,OAAO,MADhC,EACwC,OADxC,EACiD,QADjD,CAAP;;AAIJ,EAAA,aAAK,cAAL;AACI,EAAA,sBAAU,KAAK,cAAL,CAAoB,OAApB,CAAV;AACA,EAAA,mBAAO,IAAI,YAAJ,CAAiB,QAAQ,EAAzB,EAA6B,OAA7B,CAAP;;AAEJ,EAAA;AACI,EAAA,kBAAM,IAAI,KAAJ,CAAU,mDAAV,CAAN;AAjCR,EAAA;AAmCH,EAAA,CA/CD;;AAiDA,EAAA,SAAS,SAAT,CAAmB,cAAnB,GAAoC,UAAU,OAAV,EAAmB;AACnD,EAAA,QAAI,SAAc,QAAQ,MAA1B;UACI,UAAc,OAAO,OADzB;UAEI,cAAc,EAFlB;;;;;AAOA,EAAA,SAAK,WAAL,CAAiB,IAAjB,CAAsB,KAAK,aAA3B;AACA,EAAA,SAAK,aAAL,GAAqB,OAAO,IAAP,KAAgB,cAAhB,GAAiC,OAAjC,GAA2C,IAAhE;;AAEA,EAAA,QAAI,CAAJ,EAAO,GAAP,EAAY,MAAZ;;AAEA,EAAA,SAAK,IAAI,CAAJ,EAAO,MAAM,QAAQ,MAA1B,EAAkC,IAAI,GAAtC,EAA2C,KAAK,CAAhD,EAAmD;AAC/C,EAAA,iBAAS,QAAQ,CAAR,CAAT;;;AAGA,EAAA,oBAAY,OAAO,QAAnB,IAA+B,KAAK,cAAL,CAAoB,OAAO,KAA3B,CAA/B;AACH,EAAA;;;AAGD,EAAA,SAAK,aAAL,GAAqB,KAAK,WAAL,CAAiB,GAAjB,EAArB;;AAEA,EAAA,WAAO,WAAP;AACH,EAAA,CAxBD;;;;AA4BA,EAAA,SAAS,YAAT,CAAsB,EAAtB,EAA0B;AACtB,EAAA,SAAK,EAAL,GAAU,EAAV;AACH,EAAA;;AAED,EAAA,aAAa,SAAb,CAAuB,MAAvB,GAAgC,UAAU,KAAV,EAAiB;AAC7C,EAAA,QAAI,CAAC,KAAL,EAAY;AACR,EAAA,eAAO,EAAP;AACH,EAAA;;AAED,EAAA,WAAO,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,OAAO,KAAP,CAA3C;AACH,EAAA,CAND;;AAQA,EAAA,SAAS,YAAT,CAAsB,EAAtB,EAA0B,UAA1B,EAAsC,MAAtC,EAA8C,OAA9C,EAAuD,QAAvD,EAAiE;AAC7D,EAAA,SAAK,EAAL,GAAkB,EAAlB;AACA,EAAA,SAAK,UAAL,GAAkB,UAAlB;AACA,EAAA,SAAK,MAAL,GAAkB,MAAlB;AACA,EAAA,SAAK,OAAL,GAAkB,OAAlB;AACA,EAAA,SAAK,QAAL,GAAkB,QAAlB;AACH,EAAA;;AAED,EAAA,aAAa,SAAb,CAAuB,SAAvB,GAAmC,UAAU,KAAV,EAAiB;AAChD,EAAA,QAAI,UAAU,KAAK,OAAnB;;AAEA,EAAA,QAAI,SAAS,QAAQ,MAAM,KAAd,KACL,QAAQ,KAAK,QAAL,CAAc,QAAQ,KAAK,MAA3B,EAAmC,KAAK,UAAxC,CAAR,CADR;;AAGA,EAAA,WAAO,UAAU,QAAQ,KAAzB;AACH,EAAA,CAPD;;AASA,EAAA,SAAS,kBAAT,CAA4B,EAA5B,EAAgC,MAAhC,EAAwC,YAAxC,EAAsD,MAAtD,EAA8D;AAC1D,EAAA,SAAK,EAAL,GAAoB,EAApB;AACA,EAAA,SAAK,MAAL,GAAoB,MAApB;AACA,EAAA,SAAK,YAAL,GAAoB,YAApB;AACA,EAAA,SAAK,MAAL,GAAoB,MAApB;AACH,EAAA;;AAED,EAAA,mBAAmB,SAAnB,CAA6B,MAA7B,GAAsC,UAAU,KAAV,EAAiB;AACnD,EAAA,QAAI,SAAS,KAAK,YAAL,CAAkB,MAAlB,CAAyB,QAAQ,KAAK,MAAtC,CAAb;;AAEA,EAAA,WAAO,KAAK,MAAL,CACE,OADF,CACU,aADV,EACyB,OAAO,MADhC,EAEE,OAFF,CAEU,MAFV,EAEkB,GAFlB,CAAP;AAGH,EAAA,CAND;;AAQA,EAAA,SAAS,YAAT,CAAsB,EAAtB,EAA0B,OAA1B,EAAmC;AAC/B,EAAA,SAAK,EAAL,GAAe,EAAf;AACA,EAAA,SAAK,OAAL,GAAe,OAAf;AACH,EAAA;;AAED,EAAA,aAAa,SAAb,CAAuB,SAAvB,GAAmC,UAAU,KAAV,EAAiB;AAChD,EAAA,QAAI,UAAU,KAAK,OAAnB;AACA,EAAA,WAAO,QAAQ,KAAR,KAAkB,QAAQ,KAAjC;AACH,EAAA,CAHD;;eC1Me,CAAC,YAAW;;;;;;;AAOzB,EAAA,WAAS,YAAT,CAAsB,KAAtB,EAA6B,MAA7B,EAAqC;AACnC,EAAA,aAAS,IAAT,GAAgB;AAAE,EAAA,WAAK,WAAL,GAAmB,KAAnB;AAA2B,EAAA;AAC7C,EAAA,SAAK,SAAL,GAAiB,OAAO,SAAxB;AACA,EAAA,UAAM,SAAN,GAAkB,IAAI,IAAJ,EAAlB;AACD,EAAA;;AAED,EAAA,WAAS,WAAT,CAAqB,OAArB,EAA8B,QAA9B,EAAwC,KAAxC,EAA+C,MAA/C,EAAuD,IAAvD,EAA6D,MAA7D,EAAqE;AACnE,EAAA,SAAK,OAAL,GAAgB,OAAhB;AACA,EAAA,SAAK,QAAL,GAAgB,QAAhB;AACA,EAAA,SAAK,KAAL,GAAgB,KAAhB;AACA,EAAA,SAAK,MAAL,GAAgB,MAAhB;AACA,EAAA,SAAK,IAAL,GAAgB,IAAhB;AACA,EAAA,SAAK,MAAL,GAAgB,MAAhB;;AAEA,EAAA,SAAK,IAAL,GAAgB,aAAhB;AACD,EAAA;;AAED,EAAA,eAAa,WAAb,EAA0B,KAA1B;;AAEA,EAAA,WAAS,KAAT,CAAe,KAAf,EAAsB;AACpB,EAAA,QAAI,UAAU,UAAU,MAAV,GAAmB,CAAnB,GAAuB,UAAU,CAAV,CAAvB,GAAsC,EAApD;UAEI,aAAa,EAFjB;UAII,yBAAyB,EAAE,OAAO,cAAT,EAJ7B;UAKI,wBAAyB,cAL7B;UAOI,SAAS,EAPb;UAQI,SAAS,SAAT,MAAS,CAAS,QAAT,EAAmB;AACpB,EAAA,aAAO;AACH,EAAA,cAAU,sBADP;AAEH,EAAA,kBAAU;AAFP,EAAA,OAAP;AAIH,EAAA,KAbT;UAcI,SAAS,UAdb;UAeI,SAAS,SAAT,MAAS,CAAS,IAAT,EAAe;AAChB,EAAA,UAAI,SAAS,EAAb;YACI,CADJ;YACO,CADP;YACU,QADV;YACoB,KADpB;YAC2B,QAD3B;;AAGA,EAAA,WAAK,IAAI,CAAJ,EAAO,WAAW,KAAK,MAA5B,EAAoC,IAAI,QAAxC,EAAkD,KAAK,CAAvD,EAA0D;AACtD,EAAA,gBAAQ,KAAK,CAAL,CAAR;;AAEA,EAAA,aAAK,IAAI,CAAJ,EAAO,WAAW,MAAM,MAA7B,EAAqC,IAAI,QAAzC,EAAmD,KAAK,CAAxD,EAA2D;AACvD,EAAA,oBAAU,MAAM,CAAN,CAAV;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,aAAO,MAAP;AACH,EAAA,KA5BT;UA6BI,SAAS,SAAT,MAAS,CAAS,WAAT,EAAsB;AACvB,EAAA,aAAO;AACH,EAAA,cAAO,oBADJ;AAEH,EAAA,eAAO;AAFJ,EAAA,OAAP;AAIH,EAAA,KAlCT;UAmCI,SAAS,oBAnCb;UAoCI,SAAS,EAAE,MAAM,OAAR,EAAiB,OAAO,sBAAxB,EAAgD,aAAa,sBAA7D,EApCb;UAqCI,SAAS,GArCb;UAsCI,SAAS,EAAE,MAAM,SAAR,EAAmB,OAAO,GAA1B,EAA+B,aAAa,OAA5C,EAtCb;UAuCI,SAAS,IAvCb;UAwCI,UAAU,GAxCd;UAyCI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,GAA1B,EAA+B,aAAa,OAA5C,EAzCd;UA0CI,UAAU,GA1Cd;UA2CI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,GAA1B,EAA+B,aAAa,OAA5C,EA3Cd;UA4CI,UAAU,SAAV,OAAU,CAAS,EAAT,EAAa,MAAb,EAAqB;AACvB,EAAA,aAAO;AACH,EAAA,cAAQ,iBADL;AAEH,EAAA,YAAQ,EAFL;AAGH,EAAA,gBAAQ,UAAU,OAAO,CAAP;AAHf,EAAA,OAAP;AAKH,EAAA,KAlDT;UAmDI,UAAU,QAnDd;UAoDI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,QAA1B,EAAoC,aAAa,YAAjD,EApDd;UAqDI,UAAU,MArDd;UAsDI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,MAA1B,EAAkC,aAAa,UAA/C,EAtDd;UAuDI,UAAU,MAvDd;UAwDI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,MAA1B,EAAkC,aAAa,UAA/C,EAxDd;UAyDI,UAAU,SAAV,OAAU,CAAS,IAAT,EAAe,KAAf,EAAsB;AACxB,EAAA,aAAO;AACH,EAAA,cAAO,OAAO,QADX;AAEH,EAAA,eAAO,SAAS,MAAM,CAAN;AAFb,EAAA,OAAP;AAIH,EAAA,KA9DT;UA+DI,UAAU,QA/Dd;UAgEI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,QAA1B,EAAoC,aAAa,YAAjD,EAhEd;UAiEI,UAAU,SAAV,OAAU,CAAS,WAAT,EAAsB;AACxB,EAAA,aAAO;AACH,EAAA,cAAS,YAAY,IADlB;AAEH,EAAA,iBAAS,KAFN;AAGH,EAAA,gBAAS,YAAY,MAAZ,IAAsB,CAH5B;AAIH,EAAA,iBAAS,YAAY;AAJlB,EAAA,OAAP;AAMH,EAAA,KAxET;UAyEI,UAAU,eAzEd;UA0EI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,eAA1B,EAA2C,aAAa,mBAAxD,EA1Ed;UA2EI,UAAU,SAAV,OAAU,CAAS,WAAT,EAAsB;AACxB,EAAA,aAAO;AACH,EAAA,cAAS,YAAY,IADlB;AAEH,EAAA,iBAAS,IAFN;AAGH,EAAA,gBAAS,YAAY,MAAZ,IAAsB,CAH5B;AAIH,EAAA,iBAAS,YAAY;AAJlB,EAAA,OAAP;AAMH,EAAA,KAlFT;UAmFI,UAAU,QAnFd;UAoFI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,QAA1B,EAAoC,aAAa,YAAjD,EApFd;UAqFI,UAAU,SAAV,OAAU,CAAS,OAAT,EAAkB;AACpB,EAAA,aAAO;AACH,EAAA,cAAS,cADN;AAEH,EAAA,iBAAS;AAFN,EAAA,OAAP;AAIH,EAAA,KA1FT;UA2FI,UAAU,GA3Fd;UA4FI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,GAA1B,EAA+B,aAAa,OAA5C,EA5Fd;UA6FI,UAAU,SAAV,OAAU,CAAS,QAAT,EAAmB,OAAnB,EAA4B;AAC9B,EAAA,aAAO;AACH,EAAA,cAAU,uBADP;AAEH,EAAA,kBAAU,QAFP;AAGH,EAAA,eAAU;AAHP,EAAA,OAAP;AAKH,EAAA,KAnGT;UAoGI,UAAU,SApGd;UAqGI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,SAA1B,EAAqC,aAAa,aAAlD,EArGd;UAsGI,UAAU,SAAV,OAAU,CAAS,MAAT,EAAiB;AACnB,EAAA,aAAO,MAAP;AACH,EAAA,KAxGT;UAyGI,UAAU,SAAV,OAAU,CAAS,MAAT,EAAiB,OAAjB,EAA0B;AAC5B,EAAA,aAAO;AACH,EAAA,cAAS,cADN;AAEH,EAAA,gBAAS,MAFN;AAGH,EAAA,iBAAS;AAHN,EAAA,OAAP;AAKH,EAAA,KA/GT;UAgHI,UAAU,EAAE,MAAM,OAAR,EAAiB,aAAa,YAA9B,EAhHd;UAiHI,UAAU,YAjHd;UAkHI,UAAU,EAAE,MAAM,OAAR,EAAiB,OAAO,cAAxB,EAAwC,aAAa,cAArD,EAlHd;UAmHI,UAAU,EAAE,MAAM,OAAR,EAAiB,aAAa,oBAA9B,EAnHd;UAoHI,UAAU,QApHd;UAqHI,UAAU,EAAE,MAAM,OAAR,EAAiB,OAAO,OAAxB,EAAiC,aAAa,OAA9C,EArHd;UAsHI,UAAU,YAtHd;UAuHI,UAAU,EAAE,MAAM,OAAR,EAAiB,OAAO,WAAxB,EAAqC,aAAa,WAAlD,EAvHd;UAwHI,UAAU,GAxHd;UAyHI,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,GAA1B,EAA+B,aAAa,OAA5C,EAzHd;UA0HI,UAAU,QA1Hd;UA2HI,UAAU,EAAE,MAAM,OAAR,EAAiB,OAAO,OAAxB,EAAiC,aAAa,OAA9C,EA3Hd;UA4HI,UAAU,SAAV,OAAU,CAAS,MAAT,EAAiB;AACvB,EAAA,aAAO,SAAS,MAAT,EAAiB,EAAjB,CAAP;AACH,EAAA,KA9HL;UA+HI,UAAU,yBA/Hd;UAgII,UAAU,EAAE,MAAM,OAAR,EAAiB,OAAO,+BAAxB,EAAyD,aAAa,+BAAtE,EAhId;UAiII,UAAU,MAjId;UAkII,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,MAA1B,EAAkC,aAAa,cAA/C,EAlId;UAmII,UAAU,SAAV,OAAU,GAAW;AAAE,EAAA,aAAO,IAAP;AAAc,EAAA,KAnIzC;UAoII,UAAU,KApId;UAqII,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,KAA1B,EAAiC,aAAa,WAA9C,EArId;UAsII,UAAU,SAAV,OAAU,GAAW;AAAE,EAAA,aAAO,KAAP;AAAe,EAAA,KAtI1C;UAuII,UAAU,KAvId;UAwII,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,KAA1B,EAAiC,aAAa,WAA9C,EAxId;UAyII,UAAU,SAAV,OAAU,GAAW;AAAE,EAAA,aAAO,GAAP;AAAkB,EAAA,KAzI7C;UA0II,UAAU,KA1Id;UA2II,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,KAA1B,EAAiC,aAAa,WAA9C,EA3Id;UA4II,UAAU,SAAV,OAAU,GAAW;AAAE,EAAA,aAAO,GAAP;AAAkB,EAAA,KA5I7C;UA6II,UAAU,KA7Id;UA8II,UAAU,EAAE,MAAM,SAAR,EAAmB,OAAO,KAA1B,EAAiC,aAAa,SAA9C,EA9Id;UA+II,UAAU,SAAV,OAAU,CAAS,MAAT,EAAiB;AACnB,EAAA,aAAO,OAAO,YAAP,CAAoB,SAAS,MAAT,EAAiB,EAAjB,CAApB,CAAP;AACH,EAAA,KAjJT;UAkJI,UAAU,SAAV,OAAU,CAAS,KAAT,EAAgB;AAAE,EAAA,aAAO,MAAM,IAAN,CAAW,EAAX,CAAP;AAAwB,EAAA,KAlJxD;UAoJI,cAAuB,CApJ3B;UAqJI,kBAAuB,CArJ3B;UAsJI,gBAAuB,CAtJ3B;UAuJI,uBAAuB,EAAE,MAAM,CAAR,EAAW,QAAQ,CAAnB,EAAsB,QAAQ,KAA9B,EAvJ3B;UAwJI,iBAAuB,CAxJ3B;UAyJI,sBAAuB,EAzJ3B;UA0JI,kBAAuB,CA1J3B;UA4JI,UA5JJ;;AA8JA,EAAA,QAAI,eAAe,OAAnB,EAA4B;AAC1B,EAAA,UAAI,EAAE,QAAQ,SAAR,IAAqB,sBAAvB,CAAJ,EAAoD;AAClD,EAAA,cAAM,IAAI,KAAJ,CAAU,qCAAqC,QAAQ,SAA7C,GAAyD,KAAnE,CAAN;AACD,EAAA;;AAED,EAAA,8BAAwB,uBAAuB,QAAQ,SAA/B,CAAxB;AACD,EAAA;;AAED,EAAA,aAAS,IAAT,GAAgB;AACd,EAAA,aAAO,MAAM,SAAN,CAAgB,eAAhB,EAAiC,WAAjC,CAAP;AACD,EAAA;;AAED,EAAA,aAAS,MAAT,GAAkB;AAChB,EAAA,aAAO,eAAP;AACD,EAAA;;AAED,EAAA,aAAS,IAAT,GAAgB;AACd,EAAA,aAAO,sBAAsB,eAAtB,EAAuC,IAA9C;AACD,EAAA;;AAED,EAAA,aAAS,MAAT,GAAkB;AAChB,EAAA,aAAO,sBAAsB,eAAtB,EAAuC,MAA9C;AACD,EAAA;;AAED,EAAA,aAAS,QAAT,CAAkB,WAAlB,EAA+B;AAC7B,EAAA,YAAM,mBACJ,IADI,EAEJ,CAAC,EAAE,MAAM,OAAR,EAAiB,aAAa,WAA9B,EAAD,CAFI,EAGJ,eAHI,CAAN;AAKD,EAAA;;AAED,EAAA,aAAS,KAAT,CAAe,OAAf,EAAwB;AACtB,EAAA,YAAM,mBAAmB,OAAnB,EAA4B,IAA5B,EAAkC,eAAlC,CAAN;AACD,EAAA;;AAED,EAAA,aAAS,qBAAT,CAA+B,GAA/B,EAAoC;AAClC,EAAA,eAAS,OAAT,CAAiB,OAAjB,EAA0B,QAA1B,EAAoC,MAApC,EAA4C;AAC1C,EAAA,YAAI,CAAJ,EAAO,EAAP;;AAEA,EAAA,aAAK,IAAI,QAAT,EAAmB,IAAI,MAAvB,EAA+B,GAA/B,EAAoC;AAClC,EAAA,eAAK,MAAM,MAAN,CAAa,CAAb,CAAL;AACA,EAAA,cAAI,OAAO,IAAX,EAAiB;AACf,EAAA,gBAAI,CAAC,QAAQ,MAAb,EAAqB;AAAE,EAAA,sBAAQ,IAAR;AAAiB,EAAA;AACxC,EAAA,oBAAQ,MAAR,GAAiB,CAAjB;AACA,EAAA,oBAAQ,MAAR,GAAiB,KAAjB;AACD,EAAA,WAJD,MAIO,IAAI,OAAO,IAAP,IAAe,OAAO,QAAtB,IAAkC,OAAO,QAA7C,EAAuD;AAC5D,EAAA,oBAAQ,IAAR;AACA,EAAA,oBAAQ,MAAR,GAAiB,CAAjB;AACA,EAAA,oBAAQ,MAAR,GAAiB,IAAjB;AACD,EAAA,WAJM,MAIA;AACL,EAAA,oBAAQ,MAAR;AACA,EAAA,oBAAQ,MAAR,GAAiB,KAAjB;AACD,EAAA;AACF,EAAA;AACF,EAAA;;AAED,EAAA,UAAI,kBAAkB,GAAtB,EAA2B;AACzB,EAAA,YAAI,gBAAgB,GAApB,EAAyB;AACvB,EAAA,0BAAgB,CAAhB;AACA,EAAA,iCAAuB,EAAE,MAAM,CAAR,EAAW,QAAQ,CAAnB,EAAsB,QAAQ,KAA9B,EAAvB;AACD,EAAA;AACD,EAAA,gBAAQ,oBAAR,EAA8B,aAA9B,EAA6C,GAA7C;AACA,EAAA,wBAAgB,GAAhB;AACD,EAAA;;AAED,EAAA,aAAO,oBAAP;AACD,EAAA;;AAED,EAAA,aAAS,QAAT,CAAkB,QAAlB,EAA4B;AAC1B,EAAA,UAAI,cAAc,cAAlB,EAAkC;AAAE,EAAA;AAAS,EAAA;;AAE7C,EAAA,UAAI,cAAc,cAAlB,EAAkC;AAChC,EAAA,yBAAiB,WAAjB;AACA,EAAA,8BAAsB,EAAtB;AACD,EAAA;;AAED,EAAA,0BAAoB,IAApB,CAAyB,QAAzB;AACD,EAAA;;AAED,EAAA,aAAS,kBAAT,CAA4B,OAA5B,EAAqC,QAArC,EAA+C,GAA/C,EAAoD;AAClD,EAAA,eAAS,eAAT,CAAyB,QAAzB,EAAmC;AACjC,EAAA,YAAI,IAAI,CAAR;;AAEA,EAAA,iBAAS,IAAT,CAAc,UAAS,CAAT,EAAY,CAAZ,EAAe;AAC3B,EAAA,cAAI,EAAE,WAAF,GAAgB,EAAE,WAAtB,EAAmC;AACjC,EAAA,mBAAO,CAAC,CAAR;AACD,EAAA,WAFD,MAEO,IAAI,EAAE,WAAF,GAAgB,EAAE,WAAtB,EAAmC;AACxC,EAAA,mBAAO,CAAP;AACD,EAAA,WAFM,MAEA;AACL,EAAA,mBAAO,CAAP;AACD,EAAA;AACF,EAAA,SARD;;AAUA,EAAA,eAAO,IAAI,SAAS,MAApB,EAA4B;AAC1B,EAAA,cAAI,SAAS,IAAI,CAAb,MAAoB,SAAS,CAAT,CAAxB,EAAqC;AACnC,EAAA,qBAAS,MAAT,CAAgB,CAAhB,EAAmB,CAAnB;AACD,EAAA,WAFD,MAEO;AACL,EAAA;AACD,EAAA;AACF,EAAA;AACF,EAAA;;AAED,EAAA,eAAS,YAAT,CAAsB,QAAtB,EAAgC,KAAhC,EAAuC;AACrC,EAAA,iBAAS,YAAT,CAAsB,CAAtB,EAAyB;AACvB,EAAA,mBAAS,GAAT,CAAa,EAAb,EAAiB;AAAE,EAAA,mBAAO,GAAG,UAAH,CAAc,CAAd,EAAiB,QAAjB,CAA0B,EAA1B,EAA8B,WAA9B,EAAP;AAAqD,EAAA;;AAExE,EAAA,iBAAO,EACJ,OADI,CACI,KADJ,EACa,MADb,EAEJ,OAFI,CAEI,IAFJ,EAEa,KAFb,EAGJ,OAHI,CAGI,OAHJ,EAGa,KAHb,EAIJ,OAJI,CAII,KAJJ,EAIa,KAJb,EAKJ,OALI,CAKI,KALJ,EAKa,KALb,EAMJ,OANI,CAMI,KANJ,EAMa,KANb,EAOJ,OAPI,CAOI,KAPJ,EAOa,KAPb,EAQJ,OARI,CAQI,0BARJ,EAQgC,UAAS,EAAT,EAAa;AAAE,EAAA,mBAAO,SAAS,IAAI,EAAJ,CAAhB;AAA0B,EAAA,WARzE,EASJ,OATI,CASI,uBATJ,EASgC,UAAS,EAAT,EAAa;AAAE,EAAA,mBAAO,QAAS,IAAI,EAAJ,CAAhB;AAA0B,EAAA,WATzE,EAUJ,OAVI,CAUI,kBAVJ,EAUgC,UAAS,EAAT,EAAa;AAAE,EAAA,mBAAO,SAAS,IAAI,EAAJ,CAAhB;AAA0B,EAAA,WAVzE,EAWJ,OAXI,CAWI,kBAXJ,EAWgC,UAAS,EAAT,EAAa;AAAE,EAAA,mBAAO,QAAS,IAAI,EAAJ,CAAhB;AAA0B,EAAA,WAXzE,CAAP;AAYD,EAAA;;AAED,EAAA,YAAI,gBAAgB,IAAI,KAAJ,CAAU,SAAS,MAAnB,CAApB;cACI,YADJ;cACkB,SADlB;cAC6B,CAD7B;;AAGA,EAAA,aAAK,IAAI,CAAT,EAAY,IAAI,SAAS,MAAzB,EAAiC,GAAjC,EAAsC;AACpC,EAAA,wBAAc,CAAd,IAAmB,SAAS,CAAT,EAAY,WAA/B;AACD,EAAA;;AAED,EAAA,uBAAe,SAAS,MAAT,GAAkB,CAAlB,GACX,cAAc,KAAd,CAAoB,CAApB,EAAuB,CAAC,CAAxB,EAA2B,IAA3B,CAAgC,IAAhC,IACI,MADJ,GAEI,cAAc,SAAS,MAAT,GAAkB,CAAhC,CAHO,GAIX,cAAc,CAAd,CAJJ;;AAMA,EAAA,oBAAY,QAAQ,OAAO,aAAa,KAAb,CAAP,GAA6B,IAArC,GAA4C,cAAxD;;AAEA,EAAA,eAAO,cAAc,YAAd,GAA6B,OAA7B,GAAuC,SAAvC,GAAmD,SAA1D;AACD,EAAA;;AAED,EAAA,UAAI,aAAa,sBAAsB,GAAtB,CAAjB;YACI,QAAa,MAAM,MAAM,MAAZ,GAAqB,MAAM,MAAN,CAAa,GAAb,CAArB,GAAyC,IAD1D;;AAGA,EAAA,UAAI,aAAa,IAAjB,EAAuB;AACrB,EAAA,wBAAgB,QAAhB;AACD,EAAA;;AAED,EAAA,aAAO,IAAI,WAAJ,CACL,YAAY,IAAZ,GAAmB,OAAnB,GAA6B,aAAa,QAAb,EAAuB,KAAvB,CADxB,EAEL,QAFK,EAGL,KAHK,EAIL,GAJK,EAKL,WAAW,IALN,EAML,WAAW,MANN,CAAP;AAQD,EAAA;;AAED,EAAA,aAAS,cAAT,GAA0B;AACxB,EAAA,UAAI,EAAJ;;AAEA,EAAA,WAAK,+BAAL;;AAEA,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,6BAAT,GAAyC;AACvC,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,EAAL;AACA,EAAA,WAAK,+BAAL;AACA,EAAA,aAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,WAAG,IAAH,CAAQ,EAAR;AACA,EAAA,aAAK,+BAAL;AACD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,0BAAkB,EAAlB;AACA,EAAA,aAAK,OAAO,EAAP,CAAL;AACD,EAAA;AACD,EAAA,WAAK,EAAL;;AAEA,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,6BAAT,GAAyC;AACvC,EAAA,UAAI,EAAJ;;AAEA,EAAA,WAAK,6BAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,0BAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,oBAAT,GAAgC;AAC9B,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,EAAL;AACA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,YAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,gBAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,YAAL;AACA,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAL;AACA,EAAA,iBAAK,EAAL;AACD,EAAA,WAHD,MAGO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SATD,MASO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OAfD,MAeO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,aAAG,IAAH,CAAQ,EAAR;AACA,EAAA,eAAK,WAAL;AACA,EAAA,eAAK,YAAL;AACA,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,gBAAL;AACA,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAK,YAAL;AACA,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,qBAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAL;AACA,EAAA,qBAAK,EAAL;AACD,EAAA,eAHD,MAGO;AACL,EAAA,8BAAc,EAAd;AACA,EAAA,qBAAK,MAAL;AACD,EAAA;AACF,EAAA,aATD,MASO;AACL,EAAA,4BAAc,EAAd;AACA,EAAA,mBAAK,MAAL;AACD,EAAA;AACF,EAAA,WAfD,MAeO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA;AACF,EAAA,OAzBD,MAyBO;AACL,EAAA,aAAK,MAAL;AACD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,0BAAkB,EAAlB;AACA,EAAA,aAAK,OAAO,EAAP,CAAL;AACD,EAAA;AACD,EAAA,WAAK,EAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,WAAL;AACA,EAAA,aAAK,aAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,MAAM,SAAN,CAAgB,EAAhB,EAAoB,WAApB,CAAL;AACD,EAAA;AACD,EAAA,aAAK,EAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,2BAAT,GAAuC;AACrC,EAAA,UAAI,EAAJ,EAAQ,EAAR;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,sBAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,0BAAkB,EAAlB;AACA,EAAA,aAAK,OAAO,EAAP,CAAL;AACD,EAAA;AACD,EAAA,WAAK,EAAL;;AAEA,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,iBAAT,GAA6B;AAC3B,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;;AAEA,EAAA,WAAK,iBAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,WAAL;AACA,EAAA,aAAK,EAAL;AACA,EAAA,YAAI,OAAO,IAAP,CAAY,MAAM,MAAN,CAAa,WAAb,CAAZ,CAAJ,EAA4C;AAC1C,EAAA,eAAK,MAAM,MAAN,CAAa,WAAb,CAAL;AACA,EAAA;AACD,EAAA,SAHD,MAGO;AACL,EAAA,eAAK,UAAL;AACA,EAAA,cAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,qBAAS,MAAT;AAAmB,EAAA;AACjD,EAAA;AACD,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,eAAG,IAAH,CAAQ,EAAR;AACA,EAAA,gBAAI,OAAO,IAAP,CAAY,MAAM,MAAN,CAAa,WAAb,CAAZ,CAAJ,EAA4C;AAC1C,EAAA,mBAAK,MAAM,MAAN,CAAa,WAAb,CAAL;AACA,EAAA;AACD,EAAA,aAHD,MAGO;AACL,EAAA,mBAAK,UAAL;AACA,EAAA,kBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,yBAAS,MAAT;AAAmB,EAAA;AACjD,EAAA;AACF,EAAA;AACF,EAAA,SAXD,MAWO;AACL,EAAA,eAAK,MAAL;AACD,EAAA;AACD,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,MAAM,SAAN,CAAgB,EAAhB,EAAoB,WAApB,CAAL;AACD,EAAA;AACD,EAAA,aAAK,EAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,wBAAT,GAAoC;AAClC,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,UAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,GAAtC,EAA2C;AACzC,EAAA,aAAK,MAAL;AACA,EAAA;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,MAAT;AAAmB,EAAA;AACjD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,YAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,mBAAL;AACA,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,YAAL;AACA,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAK,WAAL;AACA,EAAA,kBAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,EAAtC,EAA0C;AACxC,EAAA,qBAAK,OAAL;AACA,EAAA;AACD,EAAA,eAHD,MAGO;AACL,EAAA,qBAAK,UAAL;AACA,EAAA,oBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,2BAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,qBAAK,YAAL;AACA,EAAA,oBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,uBAAK,wBAAL;AACA,EAAA,sBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,yBAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAL;AACA,EAAA,yBAAK,EAAL;AACD,EAAA,mBAHD,MAGO;AACL,EAAA,kCAAc,EAAd;AACA,EAAA,yBAAK,MAAL;AACD,EAAA;AACF,EAAA,iBATD,MASO;AACL,EAAA,gCAAc,EAAd;AACA,EAAA,uBAAK,MAAL;AACD,EAAA;AACF,EAAA,eAfD,MAeO;AACL,EAAA,8BAAc,EAAd;AACA,EAAA,qBAAK,MAAL;AACD,EAAA;AACD,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,qBAAK,MAAL;AACD,EAAA;AACD,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,qBAAK,YAAL;AACA,EAAA,oBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,sBAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,GAAtC,EAA2C;AACzC,EAAA,yBAAK,OAAL;AACA,EAAA;AACD,EAAA,mBAHD,MAGO;AACL,EAAA,yBAAK,UAAL;AACA,EAAA,wBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,+BAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,sBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,sCAAkB,EAAlB;AACA,EAAA,yBAAK,QAAQ,EAAR,EAAY,EAAZ,CAAL;AACA,EAAA,yBAAK,EAAL;AACD,EAAA,mBAJD,MAIO;AACL,EAAA,kCAAc,EAAd;AACA,EAAA,yBAAK,MAAL;AACD,EAAA;AACF,EAAA,iBAhBD,MAgBO;AACL,EAAA,gCAAc,EAAd;AACA,EAAA,uBAAK,MAAL;AACD,EAAA;AACF,EAAA,eAtBD,MAsBO;AACL,EAAA,8BAAc,EAAd;AACA,EAAA,qBAAK,MAAL;AACD,EAAA;AACF,EAAA,aAzDD,MAyDO;AACL,EAAA,4BAAc,EAAd;AACA,EAAA,mBAAK,MAAL;AACD,EAAA;AACF,EAAA,WA/DD,MA+DO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SArED,MAqEO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OA3ED,MA2EO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,sBAAT,GAAkC;AAChC,EAAA,UAAI,EAAJ;;AAEA,EAAA,WAAK,uBAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,uBAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,8BAAL;AACA,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,uBAAL;AACD,EAAA;AACF,EAAA;AACF,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,qBAAT,GAAiC;AAC/B,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,UAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,aAAK,OAAL;AACA,EAAA,uBAAe,CAAf;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,YAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,eAAK,OAAL;AACA,EAAA,yBAAe,CAAf;AACD,EAAA,SAHD,MAGO;AACL,EAAA,eAAK,UAAL;AACA,EAAA,cAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,qBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,cAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,iBAAK,OAAL;AACA,EAAA,2BAAe,CAAf;AACD,EAAA,WAHD,MAGO;AACL,EAAA,iBAAK,UAAL;AACA,EAAA,gBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,uBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACF,EAAA;AACF,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,YAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,WAAL;AACA,EAAA,cAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,EAAtC,EAA0C;AACxC,EAAA,iBAAK,OAAL;AACA,EAAA;AACD,EAAA,WAHD,MAGO;AACL,EAAA,iBAAK,UAAL;AACA,EAAA,gBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,uBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,YAAL;AACA,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAK,gBAAL;AACA,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,qBAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAL;AACA,EAAA,qBAAK,EAAL;AACD,EAAA,eAHD,MAGO;AACL,EAAA,8BAAc,EAAd;AACA,EAAA,qBAAK,MAAL;AACD,EAAA;AACF,EAAA,aATD,MASO;AACL,EAAA,4BAAc,EAAd;AACA,EAAA,mBAAK,MAAL;AACD,EAAA;AACF,EAAA,WAfD,MAeO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,MAAL;AACD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,8BAAkB,EAAlB;AACA,EAAA,iBAAK,QAAQ,EAAR,EAAY,EAAZ,CAAL;AACA,EAAA,iBAAK,EAAL;AACD,EAAA,WAJD,MAIO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SAvCD,MAuCO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OA7CD,MA6CO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,qBAAT,GAAiC;AAC/B,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,UAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,aAAK,OAAL;AACA,EAAA,uBAAe,CAAf;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,YAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,cAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,EAAtC,EAA0C;AACxC,EAAA,iBAAK,OAAL;AACA,EAAA;AACD,EAAA,WAHD,MAGO;AACL,EAAA,iBAAK,UAAL;AACA,EAAA,gBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,uBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,YAAL;AACA,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAK,sBAAL;AACA,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,kCAAkB,EAAlB;AACA,EAAA,qBAAK,QAAQ,EAAR,CAAL;AACA,EAAA,qBAAK,EAAL;AACD,EAAA,eAJD,MAIO;AACL,EAAA,8BAAc,EAAd;AACA,EAAA,qBAAK,MAAL;AACD,EAAA;AACF,EAAA,aAVD,MAUO;AACL,EAAA,4BAAc,EAAd;AACA,EAAA,mBAAK,MAAL;AACD,EAAA;AACF,EAAA,WAhBD,MAgBO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SA5BD,MA4BO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OAlCD,MAkCO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,4BAAT,GAAwC;AACtC,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,UAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,EAA1B,MAAkC,OAAtC,EAA+C;AAC7C,EAAA,aAAK,OAAL;AACA,EAAA,uBAAe,EAAf;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,YAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,cAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,EAAtC,EAA0C;AACxC,EAAA,iBAAK,OAAL;AACA,EAAA;AACD,EAAA,WAHD,MAGO;AACL,EAAA,iBAAK,UAAL;AACA,EAAA,gBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,uBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,YAAL;AACA,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAK,sBAAL;AACA,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,kCAAkB,EAAlB;AACA,EAAA,qBAAK,QAAQ,EAAR,CAAL;AACA,EAAA,qBAAK,EAAL;AACD,EAAA,eAJD,MAIO;AACL,EAAA,8BAAc,EAAd;AACA,EAAA,qBAAK,MAAL;AACD,EAAA;AACF,EAAA,aAVD,MAUO;AACL,EAAA,4BAAc,EAAd;AACA,EAAA,mBAAK,MAAL;AACD,EAAA;AACF,EAAA,WAhBD,MAgBO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SA5BD,MA4BO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OAlCD,MAkCO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,qBAAT,GAAiC;AAC/B,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,UAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,aAAK,OAAL;AACA,EAAA,uBAAe,CAAf;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,YAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,cAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,EAAtC,EAA0C;AACxC,EAAA,iBAAK,OAAL;AACA,EAAA;AACD,EAAA,WAHD,MAGO;AACL,EAAA,iBAAK,UAAL;AACA,EAAA,gBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,uBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,YAAL;AACA,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAK,EAAL;AACA,EAAA,mBAAK,gCAAL;AACA,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,uBAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,qBAAG,IAAH,CAAQ,EAAR;AACA,EAAA,uBAAK,gCAAL;AACD,EAAA;AACF,EAAA,eALD,MAKO;AACL,EAAA,qBAAK,MAAL;AACD,EAAA;AACD,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,kCAAkB,EAAlB;AACA,EAAA,qBAAK,QAAQ,EAAR,CAAL;AACA,EAAA,qBAAK,EAAL;AACD,EAAA,eAJD,MAIO;AACL,EAAA,8BAAc,EAAd;AACA,EAAA,qBAAK,MAAL;AACD,EAAA;AACF,EAAA,aAnBD,MAmBO;AACL,EAAA,4BAAc,EAAd;AACA,EAAA,mBAAK,MAAL;AACD,EAAA;AACF,EAAA,WAzBD,MAyBO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SArCD,MAqCO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OA3CD,MA2CO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,iBAAT,GAA6B;AAC3B,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,WAAL;AACA,EAAA,UAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,EAAtC,EAA0C;AACxC,EAAA,aAAK,OAAL;AACA,EAAA;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,iBAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,CAAC,EAAD,EAAK,EAAL,CAAL;AACA,EAAA,eAAK,EAAL;AACD,EAAA,SAHD,MAGO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OATD,MASO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,MAAM,SAAN,CAAgB,EAAhB,EAAoB,WAApB,CAAL;AACD,EAAA;AACD,EAAA,WAAK,EAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,gBAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,8BAAT,GAA0C;AACxC,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,YAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,mBAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,YAAL;AACA,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,gBAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,GAAtC,EAA2C;AACzC,EAAA,mBAAK,MAAL;AACA,EAAA;AACD,EAAA,aAHD,MAGO;AACL,EAAA,mBAAK,UAAL;AACA,EAAA,kBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,yBAAS,MAAT;AAAmB,EAAA;AACjD,EAAA;AACD,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAK,YAAL;AACA,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,qBAAK,+BAAL;AACA,EAAA,oBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,uBAAK,YAAL;AACA,EAAA,sBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,wBAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,GAAtC,EAA2C;AACzC,EAAA,2BAAK,OAAL;AACA,EAAA;AACD,EAAA,qBAHD,MAGO;AACL,EAAA,2BAAK,UAAL;AACA,EAAA,0BAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,iCAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,wBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,wCAAkB,EAAlB;AACA,EAAA,2BAAK,QAAQ,EAAR,EAAY,EAAZ,CAAL;AACA,EAAA,2BAAK,EAAL;AACD,EAAA,qBAJD,MAIO;AACL,EAAA,oCAAc,EAAd;AACA,EAAA,2BAAK,MAAL;AACD,EAAA;AACF,EAAA,mBAhBD,MAgBO;AACL,EAAA,kCAAc,EAAd;AACA,EAAA,yBAAK,MAAL;AACD,EAAA;AACF,EAAA,iBAtBD,MAsBO;AACL,EAAA,gCAAc,EAAd;AACA,EAAA,uBAAK,MAAL;AACD,EAAA;AACF,EAAA,eA5BD,MA4BO;AACL,EAAA,8BAAc,EAAd;AACA,EAAA,qBAAK,MAAL;AACD,EAAA;AACF,EAAA,aAlCD,MAkCO;AACL,EAAA,4BAAc,EAAd;AACA,EAAA,mBAAK,MAAL;AACD,EAAA;AACF,EAAA,WA9CD,MA8CO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SApDD,MAoDO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OA1DD,MA0DO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,eAAT,GAA2B;AACzB,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,UAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,aAAK,OAAL;AACA,EAAA,uBAAe,CAAf;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,YAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,iBAAL;AACA,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,8BAAkB,EAAlB;AACA,EAAA,iBAAK,QAAQ,EAAR,CAAL;AACA,EAAA,iBAAK,EAAL;AACD,EAAA,WAJD,MAIO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SAVD,MAUO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OAhBD,MAgBO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,oBAAT,GAAgC;AAC9B,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,iBAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,MAAL;AACD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,YAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,EAAL;AACA,EAAA,eAAK,gCAAL;AACA,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,iBAAG,IAAH,CAAQ,EAAR;AACA,EAAA,mBAAK,gCAAL;AACD,EAAA;AACF,EAAA,WALD,MAKO;AACL,EAAA,iBAAK,MAAL;AACD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,8BAAkB,EAAlB;AACA,EAAA,iBAAK,QAAQ,EAAR,EAAY,EAAZ,CAAL;AACA,EAAA,iBAAK,EAAL;AACD,EAAA,WAJD,MAIO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SAnBD,MAmBO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACF,EAAA,OAzBD,MAyBO;AACL,EAAA,sBAAc,EAAd;AACA,EAAA,aAAK,MAAL;AACD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,WAAT,GAAuB;AACrB,EAAA,UAAI,EAAJ,EAAQ,EAAR;;AAEA,EAAA;AACA,EAAA,WAAK,EAAL;AACA,EAAA,UAAI,QAAQ,IAAR,CAAa,MAAM,MAAN,CAAa,WAAb,CAAb,CAAJ,EAA6C;AAC3C,EAAA,aAAK,MAAM,MAAN,CAAa,WAAb,CAAL;AACA,EAAA;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,aAAG,IAAH,CAAQ,EAAR;AACA,EAAA,cAAI,QAAQ,IAAR,CAAa,MAAM,MAAN,CAAa,WAAb,CAAb,CAAJ,EAA6C;AAC3C,EAAA,iBAAK,MAAM,MAAN,CAAa,WAAb,CAAL;AACA,EAAA;AACD,EAAA,WAHD,MAGO;AACL,EAAA,iBAAK,UAAL;AACA,EAAA,gBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,uBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACF,EAAA;AACF,EAAA,OAXD,MAWO;AACL,EAAA,aAAK,MAAL;AACD,EAAA;AACD,EAAA;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,UAAT,GAAsB;AACpB,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;;AAEA,EAAA;AACA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,EAAL;AACA,EAAA,WAAK,aAAL;AACA,EAAA,aAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,WAAG,IAAH,CAAQ,EAAR;AACA,EAAA,aAAK,aAAL;AACD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,MAAM,SAAN,CAAgB,EAAhB,EAAoB,WAApB,CAAL;AACD,EAAA;AACD,EAAA,WAAK,EAAL;AACA,EAAA;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,cAAT,GAA0B;AACxB,EAAA,UAAI,EAAJ;;AAEA,EAAA,UAAI,QAAQ,IAAR,CAAa,MAAM,MAAN,CAAa,WAAb,CAAb,CAAJ,EAA6C;AAC3C,EAAA,aAAK,MAAM,MAAN,CAAa,WAAb,CAAL;AACA,EAAA;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,iBAAT,GAA6B;AAC3B,EAAA,UAAI,EAAJ;;AAEA,EAAA,UAAI,QAAQ,IAAR,CAAa,MAAM,MAAN,CAAa,WAAb,CAAb,CAAJ,EAA6C;AAC3C,EAAA,aAAK,MAAM,MAAN,CAAa,WAAb,CAAL;AACA,EAAA;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,eAAT,GAA2B;AACzB,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,UAAI,MAAM,UAAN,CAAiB,WAAjB,MAAkC,EAAtC,EAA0C;AACxC,EAAA,aAAK,OAAL;AACA,EAAA;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,WAAL;AACA,EAAA,aAAK,WAAL;AACA,EAAA,YAAI,QAAQ,IAAR,CAAa,MAAM,MAAN,CAAa,WAAb,CAAb,CAAJ,EAA6C;AAC3C,EAAA,eAAK,MAAM,MAAN,CAAa,WAAb,CAAL;AACA,EAAA;AACD,EAAA,SAHD,MAGO;AACL,EAAA,eAAK,UAAL;AACA,EAAA,cAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,qBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,EAAL;AACA,EAAA,eAAK,gBAAL;AACA,EAAA,iBAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,eAAG,IAAH,CAAQ,EAAR;AACA,EAAA,iBAAK,gBAAL;AACD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,CAAC,EAAD,EAAK,EAAL,CAAL;AACA,EAAA,iBAAK,EAAL;AACD,EAAA,WAHD,MAGO;AACL,EAAA,0BAAc,EAAd;AACA,EAAA,iBAAK,MAAL;AACD,EAAA;AACF,EAAA,SAdD,MAcO;AACL,EAAA,wBAAc,EAAd;AACA,EAAA,eAAK,MAAL;AACD,EAAA;AACD,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,MAAM,SAAN,CAAgB,EAAhB,EAAoB,WAApB,CAAL;AACD,EAAA;AACD,EAAA,aAAK,EAAL;AACD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,0BAAkB,EAAlB;AACA,EAAA,aAAK,QAAQ,EAAR,CAAL;AACD,EAAA;AACD,EAAA,WAAK,EAAL;;AAEA,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,aAAT,GAAyB;AACvB,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC;;AAEA,EAAA,UAAI,QAAQ,IAAR,CAAa,MAAM,MAAN,CAAa,WAAb,CAAb,CAAJ,EAA6C;AAC3C,EAAA,aAAK,MAAM,MAAN,CAAa,WAAb,CAAL;AACA,EAAA;AACD,EAAA,OAHD,MAGO;AACL,EAAA,aAAK,UAAL;AACA,EAAA,YAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,mBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,aAAK,WAAL;AACA,EAAA,YAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,eAAK,OAAL;AACA,EAAA,yBAAe,CAAf;AACD,EAAA,SAHD,MAGO;AACL,EAAA,eAAK,UAAL;AACA,EAAA,cAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,qBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,4BAAkB,EAAlB;AACA,EAAA,eAAK,SAAL;AACD,EAAA;AACD,EAAA,aAAK,EAAL;AACA,EAAA,YAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAK,WAAL;AACA,EAAA,cAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,iBAAK,OAAL;AACA,EAAA,2BAAe,CAAf;AACD,EAAA,WAHD,MAGO;AACL,EAAA,iBAAK,UAAL;AACA,EAAA,gBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,uBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,8BAAkB,EAAlB;AACA,EAAA,iBAAK,SAAL;AACD,EAAA;AACD,EAAA,eAAK,EAAL;AACA,EAAA,cAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,iBAAK,WAAL;AACA,EAAA,gBAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,mBAAK,OAAL;AACA,EAAA,6BAAe,CAAf;AACD,EAAA,aAHD,MAGO;AACL,EAAA,mBAAK,UAAL;AACA,EAAA,kBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,yBAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,gCAAkB,EAAlB;AACA,EAAA,mBAAK,SAAL;AACD,EAAA;AACD,EAAA,iBAAK,EAAL;AACA,EAAA,gBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,mBAAK,WAAL;AACA,EAAA,kBAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,qBAAK,OAAL;AACA,EAAA,+BAAe,CAAf;AACD,EAAA,eAHD,MAGO;AACL,EAAA,qBAAK,UAAL;AACA,EAAA,oBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,2BAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,kCAAkB,EAAlB;AACA,EAAA,qBAAK,SAAL;AACD,EAAA;AACD,EAAA,mBAAK,EAAL;AACA,EAAA,kBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,qBAAK,WAAL;AACA,EAAA,oBAAI,MAAM,MAAN,CAAa,WAAb,EAA0B,CAA1B,MAAiC,OAArC,EAA8C;AAC5C,EAAA,uBAAK,OAAL;AACA,EAAA,iCAAe,CAAf;AACD,EAAA,iBAHD,MAGO;AACL,EAAA,uBAAK,UAAL;AACA,EAAA,sBAAI,oBAAoB,CAAxB,EAA2B;AAAE,EAAA,6BAAS,OAAT;AAAoB,EAAA;AAClD,EAAA;AACD,EAAA,oBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,uBAAK,WAAL;AACA,EAAA,uBAAK,WAAL;AACA,EAAA,uBAAK,mBAAL;AACA,EAAA,sBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,yBAAK,mBAAL;AACA,EAAA,wBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,2BAAK,mBAAL;AACA,EAAA,0BAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,6BAAK,mBAAL;AACA,EAAA,4BAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,+BAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAL;AACA,EAAA,+BAAK,EAAL;AACD,EAAA,yBAHD,MAGO;AACL,EAAA,wCAAc,EAAd;AACA,EAAA,+BAAK,MAAL;AACD,EAAA;AACF,EAAA,uBATD,MASO;AACL,EAAA,sCAAc,EAAd;AACA,EAAA,6BAAK,MAAL;AACD,EAAA;AACF,EAAA,qBAfD,MAeO;AACL,EAAA,oCAAc,EAAd;AACA,EAAA,2BAAK,MAAL;AACD,EAAA;AACF,EAAA,mBArBD,MAqBO;AACL,EAAA,kCAAc,EAAd;AACA,EAAA,yBAAK,MAAL;AACD,EAAA;AACD,EAAA,sBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,yBAAK,MAAM,SAAN,CAAgB,EAAhB,EAAoB,WAApB,CAAL;AACD,EAAA;AACD,EAAA,uBAAK,EAAL;AACA,EAAA,sBAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,sCAAkB,EAAlB;AACA,EAAA,yBAAK,QAAQ,EAAR,CAAL;AACA,EAAA,yBAAK,EAAL;AACD,EAAA,mBAJD,MAIO;AACL,EAAA,kCAAc,EAAd;AACA,EAAA,yBAAK,MAAL;AACD,EAAA;AACF,EAAA,iBAzCD,MAyCO;AACL,EAAA,gCAAc,EAAd;AACA,EAAA,uBAAK,MAAL;AACD,EAAA;AACF,EAAA;AACF,EAAA;AACF,EAAA;AACF,EAAA;AACF,EAAA;;AAED,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,aAAS,cAAT,GAA0B;AACxB,EAAA,UAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ;;AAEA,EAAA,WAAK,WAAL;AACA,EAAA,WAAK,EAAL;AACA,EAAA,WAAK,eAAL;AACA,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,eAAO,OAAO,UAAd,EAA0B;AACxB,EAAA,aAAG,IAAH,CAAQ,EAAR;AACA,EAAA,eAAK,eAAL;AACD,EAAA;AACF,EAAA,OALD,MAKO;AACL,EAAA,aAAK,MAAL;AACD,EAAA;AACD,EAAA,UAAI,OAAO,UAAX,EAAuB;AACrB,EAAA,0BAAkB,EAAlB;AACA,EAAA,aAAK,QAAQ,EAAR,CAAL;AACD,EAAA;AACD,EAAA,WAAK,EAAL;;AAEA,EAAA,aAAO,EAAP;AACD,EAAA;;AAED,EAAA,iBAAa,uBAAb;;AAEA,EAAA,QAAI,eAAe,UAAf,IAA6B,gBAAgB,MAAM,MAAvD,EAA+D;AAC7D,EAAA,aAAO,UAAP;AACD,EAAA,KAFD,MAEO;AACL,EAAA,UAAI,eAAe,UAAf,IAA6B,cAAc,MAAM,MAArD,EAA6D;AAC3D,EAAA,iBAAS,EAAE,MAAM,KAAR,EAAe,aAAa,cAA5B,EAAT;AACD,EAAA;;AAED,EAAA,YAAM,mBAAmB,IAAnB,EAAyB,mBAAzB,EAA8C,cAA9C,CAAN;AACD,EAAA;AACF,EAAA;;AAED,EAAA,SAAO;AACL,EAAA,iBAAa,WADR;AAEL,EAAA,WAAa;AAFR,EAAA,GAAP;AAID,EAAA,CA10Cc,GAAf;;;;ACiBA,EAAA,SAAS,aAAT,CAAuB,OAAvB,EAAgC,OAAhC,EAAyC,OAAzC,EAAkD;;AAE9C,EAAA,QAAI,MAAM,OAAO,OAAP,KAAmB,QAAnB,GACF,cAAc,OAAd,CAAsB,OAAtB,CADE,GAC+B,OADzC;;AAGA,EAAA,QAAI,EAAE,OAAO,IAAI,IAAJ,KAAa,sBAAtB,CAAJ,EAAmD;AAC/C,EAAA,cAAM,IAAI,SAAJ,CAAc,gDAAd,CAAN;AACH,EAAA;;;;AAID,EAAA,cAAU,KAAK,aAAL,CAAmB,cAAc,OAAjC,EAA0C,OAA1C,CAAV;;;AAGA,EAAA,mBAAe,IAAf,EAAqB,SAArB,EAAiC,EAAC,OAAO,KAAK,cAAL,CAAoB,OAApB,CAAR,EAAjC;;;;;AAKA,EAAA,QAAI,WAAW,KAAK,uBAAL,CAA6B,KAAK,OAAlC,CAAf;AACA,EAAA,QAAI,UAAW,KAAK,eAAL,CAAqB,GAArB,EAA0B,OAA1B,EAAmC,OAAnC,EAA4C,QAA5C,CAAf;;;;AAIA,EAAA,QAAI,gBAAgB,IAApB;AACA,EAAA,SAAK,MAAL,GAAc,UAAU,MAAV,EAAkB;AAC5B,EAAA,eAAO,cAAc,OAAd,CAAsB,OAAtB,EAA+B,MAA/B,CAAP;AACH,EAAA,KAFD;AAGH,EAAA;;;;;AAKD,EAAA,eAAe,aAAf,EAA8B,SAA9B,EAAyC;AACrC,EAAA,gBAAY,IADyB;;AAGrC,EAAA,WAAO;AACH,EAAA,gBAAQ;AACJ,EAAA,wBAAY;AACR,EAAA,uBAAO;AADC,EAAA,aADR;;AAKJ,EAAA,uBAAW;AACP,EAAA,uBAAO;AADA,EAAA;AALP,EAAA,SADL;;AAWH,EAAA,cAAM;AACF,EAAA,qBAAS;AACL,EAAA,uBAAO,SADF;AAEL,EAAA,qBAAO,SAFF;AAGL,EAAA,sBAAO;AAHF,EAAA,aADP;;AAOF,EAAA,sBAAU;AACN,EAAA,uBAAO,OADD;AAEN,EAAA,qBAAO,SAFD;AAGN,EAAA,sBAAO;AAHD,EAAA,aAPR;;AAaF,EAAA,oBAAQ;AACJ,EAAA,uBAAO,MADH;AAEJ,EAAA,qBAAO,SAFH;AAGJ,EAAA,sBAAO;AAHH,EAAA,aAbN;;AAmBF,EAAA,oBAAQ;AACJ,EAAA,yBAAS,MADL;AAEJ,EAAA,uBAAS,MAFL;AAGJ,EAAA,qBAAS,SAHL;AAIJ,EAAA,sBAAS;AAJL,EAAA;AAnBN,EAAA,SAXH;;AAsCH,EAAA,cAAM;AACF,EAAA,qBAAS;AACL,EAAA,sBAAQ,SADH;AAEL,EAAA,wBAAQ;AAFH,EAAA,aADP;;AAMF,EAAA,sBAAW;AACP,EAAA,sBAAQ,SADD;AAEP,EAAA,wBAAQ,SAFD;AAGP,EAAA,wBAAQ;AAHD,EAAA,aANT;;AAYF,EAAA,oBAAQ;AACJ,EAAA,sBAAc,SADV;AAEJ,EAAA,wBAAc,SAFV;AAGJ,EAAA,wBAAc,SAHV;AAIJ,EAAA,8BAAc;AAJV,EAAA,aAZN;;AAmBF,EAAA,oBAAQ;AACJ,EAAA,sBAAc,SADV;AAEJ,EAAA,wBAAc,SAFV;AAGJ,EAAA,wBAAc,SAHV;AAIJ,EAAA,8BAAc;AAJV,EAAA;AAnBN,EAAA;AAtCH,EAAA;AAH8B,EAAA,CAAzC;;;AAuEA,EAAA,eAAe,aAAf,EAA8B,gBAA9B,EAAgD,EAAC,OAAO,UAAU,IAAV,CAAR,EAAhD;AACA,EAAA,eAAe,aAAf,EAA8B,iBAA9B,EAAiD,EAAC,OAAO,eAAU,IAAV,EAAgB;AACrE,EAAA,YAAI,EAAE,QAAQ,KAAK,MAAf,CAAJ,EAA4B;AACxB,EAAA,kBAAM,IAAI,KAAJ,CACF,4DACA,mBAFE,CAAN;AAIH,EAAA;;AAED,EAAA,sBAAc,cAAd,CAA6B,KAAK,MAAL,CAAY,WAAZ,EAA7B,IAA0D,IAA1D;AACH,EAAA,KATgD,EAAjD;;;AAYA,EAAA,eAAe,aAAf,EAA8B,SAA9B,EAAyC,EAAC,OAAO,OAAO,KAAf,EAAzC;;;;AAIA,EAAA,eAAe,aAAf,EAA8B,eAA9B,EAA+C;AAC3C,EAAA,gBAAY,IAD+B;AAE3C,EAAA,cAAY,IAF+B;AAG3C,EAAA,WAAY;AAH+B,EAAA,CAA/C;;AAMA,EAAA,cAAc,SAAd,CAAwB,eAAxB,GAA0C,YAAY;;AAElD,EAAA,WAAO;AACH,EAAA,gBAAQ,KAAK;AADV,EAAA,KAAP;AAGH,EAAA,CALD;;AAOA,EAAA,cAAc,SAAd,CAAwB,eAAxB,GAA0C,UAAU,GAAV,EAAe,OAAf,EAAwB,OAAxB,EAAiC,QAAjC,EAA2C;AACjF,EAAA,QAAI,WAAW,IAAI,QAAJ,CAAa,OAAb,EAAsB,OAAtB,EAA+B,QAA/B,CAAf;AACA,EAAA,WAAO,SAAS,OAAT,CAAiB,GAAjB,CAAP;AACH,EAAA,CAHD;;AAKA,EAAA,cAAc,SAAd,CAAwB,uBAAxB,GAAkD,UAAU,MAAV,EAAkB;AAChE,EAAA,QAAI,aAAa,cAAc,cAA/B;AACA,EAAA,QAAI,OAAa,WAAW,OAAO,WAAP,EAAX,CAAjB;;;;AAIA,EAAA,WAAO,IAAP,EAAa;AACT,EAAA,YAAI,KAAK,kBAAT,EAA6B;AACzB,EAAA,mBAAO,KAAK,kBAAZ;AACH,EAAA;;AAED,EAAA,eAAO,KAAK,YAAL,IAAqB,WAAW,KAAK,YAAL,CAAkB,WAAlB,EAAX,CAA5B;AACH,EAAA;;AAED,EAAA,UAAM,IAAI,KAAJ,CACF,yDACA,4BADA,GAC+B,MAF7B,CAAN;AAIH,EAAA,CAlBD;;AAoBA,EAAA,cAAc,SAAd,CAAwB,OAAxB,GAAkC,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AACzD,EAAA,QAAI,SAAS,EAAb;UACI,CADJ;UACO,GADP;UACY,IADZ;UACkB,EADlB;UACsB,KADtB;;AAGA,EAAA,SAAK,IAAI,CAAJ,EAAO,MAAM,QAAQ,MAA1B,EAAkC,IAAI,GAAtC,EAA2C,KAAK,CAAhD,EAAmD;AAC/C,EAAA,eAAO,QAAQ,CAAR,CAAP;;;AAGA,EAAA,YAAI,OAAO,IAAP,KAAgB,QAApB,EAA8B;AAC1B,EAAA,sBAAU,IAAV;AACA,EAAA;AACH,EAAA;;AAED,EAAA,aAAK,KAAK,EAAV;;;AAGA,EAAA,YAAI,EAAE,UAAU,IAAI,IAAJ,CAAS,MAAT,EAAiB,EAAjB,CAAZ,CAAJ,EAAuC;AACnC,EAAA,kBAAM,IAAI,KAAJ,CAAU,mCAAmC,EAA7C,CAAN;AACH,EAAA;;AAED,EAAA,gBAAQ,OAAO,EAAP,CAAR;;;;;AAKA,EAAA,YAAI,KAAK,OAAT,EAAkB;AACd,EAAA,sBAAU,KAAK,OAAL,CAAa,KAAK,SAAL,CAAe,KAAf,CAAb,EAAoC,MAApC,CAAV;AACH,EAAA,SAFD,MAEO;AACH,EAAA,sBAAU,KAAK,MAAL,CAAY,KAAZ,CAAV;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,MAAP;AACH,EAAA,CAjCD;;AAmCA,EAAA,cAAc,SAAd,CAAwB,aAAxB,GAAwC,UAAU,QAAV,EAAoB,OAApB,EAA6B;AACjE,EAAA,QAAI,gBAAgB,EAApB;UACI,IADJ;UACU,UADV;;AAGA,EAAA,SAAK,IAAL,IAAa,QAAb,EAAuB;AACnB,EAAA,YAAI,CAAC,IAAI,IAAJ,CAAS,QAAT,EAAmB,IAAnB,CAAL,EAA+B;AAAE,EAAA;AAAW,EAAA;;AAE5C,EAAA,sBAAc,IAAd,IAAsB,aAAa,UAAU,SAAS,IAAT,CAAV,CAAnC;;AAEA,EAAA,YAAI,WAAW,IAAI,IAAJ,CAAS,OAAT,EAAkB,IAAlB,CAAf,EAAwC;AACpC,EAAA,mBAAO,UAAP,EAAmB,QAAQ,IAAR,CAAnB;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,aAAP;AACH,EAAA,CAfD;;AAiBA,EAAA,cAAc,SAAd,CAAwB,cAAxB,GAAyC,UAAU,OAAV,EAAmB;AACxD,EAAA,QAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,EAAA,kBAAU,CAAC,OAAD,CAAV;AACH,EAAA;;;AAGD,EAAA,cAAU,CAAC,WAAW,EAAZ,EAAgB,MAAhB,CAAuB,cAAc,aAArC,CAAV;;AAEA,EAAA,QAAI,aAAa,cAAc,cAA/B;AACA,EAAA,QAAI,CAAJ,EAAO,GAAP,EAAY,WAAZ,EAAyB,IAAzB;;;;;;;AAOA,EAAA,SAAK,IAAI,CAAJ,EAAO,MAAM,QAAQ,MAA1B,EAAkC,IAAI,GAAtC,EAA2C,KAAK,CAAhD,EAAmD;AAC/C,EAAA,sBAAc,QAAQ,CAAR,EAAW,WAAX,GAAyB,KAAzB,CAA+B,GAA/B,CAAd;;AAEA,EAAA,eAAO,YAAY,MAAnB,EAA2B;AACvB,EAAA,mBAAO,WAAW,YAAY,IAAZ,CAAiB,GAAjB,CAAX,CAAP;AACA,EAAA,gBAAI,IAAJ,EAAU;;;AAGN,EAAA,uBAAO,KAAK,MAAZ;AACH,EAAA;;AAED,EAAA,wBAAY,GAAZ;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,QAAI,gBAAgB,QAAQ,GAAR,EAApB;AACA,EAAA,UAAM,IAAI,KAAJ,CACF,6DACA,QAAQ,IAAR,CAAa,IAAb,CADA,GACqB,2BADrB,GACmD,aAFjD,CAAN;AAIH,EAAA,CApCD;;;ACnOA,sBAAe,EAAC,UAAS,IAAV,EAAe,sBAAqB,4BAAU,CAAV,EAAY,GAAZ,EAAgB;AAAC,EAAA,QAAI,IAAE,OAAO,CAAP,EAAU,KAAV,CAAgB,GAAhB,CAAN;UAA2B,KAAG,CAAC,EAAE,CAAF,CAA/B;UAAoC,KAAG,OAAO,EAAE,CAAF,CAAP,KAAc,CAArD;UAAuD,MAAI,MAAI,EAAE,CAAF,EAAK,KAAL,CAAW,CAAC,CAAZ,CAA/D;UAA8E,OAAK,MAAI,EAAE,CAAF,EAAK,KAAL,CAAW,CAAC,CAAZ,CAAvF,CAAsG,IAAG,GAAH,EAAO,OAAO,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAA5E,CAAoF,OAAO,KAAG,CAAH,IAAM,EAAN,GAAS,KAAT,GAAe,OAAtB;AAA8B,EAAA,GAApR,EAAf;;ACIAA,gBAAkB,eAAlB,CAAkC,aAAlC;AACAA,gBAAkB,aAAlB,GAAkC,IAAlC;;;;;;;;;;ACEA,EAAA,IAAI,QAAQ,KAAK,KAAjB;;AAEA,EAAA,SAAS,WAAT,CAAqB,IAArB,EAA2B;;AAEvB,EAAA,WAAO,OAAO,GAAP,GAAa,MAApB;AACH,EAAA;;AAED,iBAAyB,IAAV,EAAgB,EAAhB,EAAoB;;AAE/B,EAAA,WAAO,CAAC,IAAR;AACA,EAAA,SAAO,CAAC,EAAR;;AAEA,EAAA,QAAI,cAAc,MAAM,KAAK,IAAX,CAAlB;UACI,SAAc,MAAM,cAAc,IAApB,CADlB;UAEI,SAAc,MAAM,SAAS,EAAf,CAFlB;UAGI,OAAc,MAAM,SAAS,EAAf,CAHlB;UAII,MAAc,MAAM,OAAO,EAAb,CAJlB;UAKI,OAAc,MAAM,MAAM,CAAZ,CALlB;;AAOA,EAAA,QAAI,WAAW,YAAY,GAAZ,CAAf;UACI,QAAW,MAAM,WAAW,EAAjB,CADf;UAEI,OAAW,MAAM,QAAN,CAFf;;AAIA,EAAA,WAAO;AACH,EAAA,qBAAa,WADV;AAEH,EAAA,gBAAa,MAFV;AAGH,EAAA,gBAAa,MAHV;AAIH,EAAA,cAAa,IAJV;AAKH,EAAA,aAAa,GALV;AAMH,EAAA,cAAa,IANV;AAOH,EAAA,eAAa,KAPV;AAQH,EAAA,cAAa;AARV,EAAA,KAAP;AAUH,EAAA;;;;;AC5BD,EAAA,IAAIC,QAAM,OAAO,SAAP,CAAiB,cAA3B;AACA,EAAA,IAAI,WAAW,OAAO,SAAP,CAAiB,QAAhC;;AAEA,EAAA,IAAIC,mBAAkB,YAAY;AAC9B,EAAA,QAAI;AAAE,EAAA,eAAO,CAAC,CAAC,OAAO,cAAP,CAAsB,EAAtB,EAA0B,GAA1B,EAA+B,EAA/B,CAAT;AAA8C,EAAA,KAApD,CACA,OAAO,CAAP,EAAU;AAAE,EAAA,eAAO,KAAP;AAAe,EAAA;AAC9B,EAAA,CAHoB,EAArB;;AAKA,EAAA,IAAIC,QAAM,CAACD,gBAAD,IAAmB,CAAC,OAAO,SAAP,CAAiB,gBAA/C;;AAEA,EAAA,IAAIE,mBAAiBF,mBAAiB,OAAO,cAAxB,GACb,UAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,EAA2B;;AAE/B,EAAA,QAAI,SAAS,IAAT,IAAiB,IAAI,gBAAzB,EAA2C;AACvC,EAAA,YAAI,gBAAJ,CAAqB,IAArB,EAA2B,KAAK,GAAhC;AACH,EAAA,KAFD,MAEO,IAAI,CAACD,MAAI,IAAJ,CAAS,GAAT,EAAc,IAAd,CAAD,IAAwB,WAAW,IAAvC,EAA6C;AAChD,EAAA,YAAI,IAAJ,IAAY,KAAK,KAAjB;AACH,EAAA;AACJ,EAAA,CARD;;AAUA,EAAA,IAAII,cAAY,OAAO,MAAP,IAAiB,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACrD,EAAA,QAAI,GAAJ,EAAS,CAAT;;AAEA,EAAA,aAAS,CAAT,GAAa;AACb,EAAA,MAAE,SAAF,GAAc,KAAd;AACA,EAAA,UAAM,IAAI,CAAJ,EAAN;;AAEA,EAAA,SAAK,CAAL,IAAU,KAAV,EAAiB;AACb,EAAA,YAAIJ,MAAI,IAAJ,CAAS,KAAT,EAAgB,CAAhB,CAAJ,EAAwB;AACpB,EAAA,6BAAe,GAAf,EAAoB,CAApB,EAAuB,MAAM,CAAN,CAAvB;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,GAAP;AACH,EAAA,CAdD;;AAgBA,EAAA,IAAI,aAAa,MAAM,SAAN,CAAgB,OAAhB,IAA2B,UAAU,MAAV,EAAkB,SAAlB,EAA6B;;AAErE,EAAA,QAAI,MAAM,IAAV;AACA,EAAA,QAAI,CAAC,IAAI,MAAT,EAAiB;AACb,EAAA,eAAO,CAAC,CAAR;AACH,EAAA;;AAED,EAAA,SAAK,IAAI,IAAI,aAAa,CAArB,EAAwB,MAAM,IAAI,MAAvC,EAA+C,IAAI,GAAnD,EAAwD,GAAxD,EAA6D;AACzD,EAAA,YAAI,IAAI,CAAJ,MAAW,MAAf,EAAuB;AACnB,EAAA,mBAAO,CAAP;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,CAAC,CAAR;AACH,EAAA,CAdD;;AAgBA,EAAA,IAAI,UAAU,MAAM,OAAN,IAAiB,UAAU,GAAV,EAAe;AAC1C,EAAA,WAAO,SAAS,IAAT,CAAc,GAAd,MAAuB,gBAA9B;AACH,EAAA,CAFD;;AAIA,EAAA,IAAI,UAAU,KAAK,GAAL,IAAY,YAAY;AAClC,EAAA,WAAO,IAAI,IAAJ,GAAW,OAAX,EAAP;AACH,EAAA,CAFD;;;;AC/CA,EAAA,IAAI,SAAS,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,EAA6B,KAA7B,EAAoC,OAApC,EAA6C,MAA7C,CAAb;AACA,EAAA,IAAI,SAAS,CAAC,UAAD,EAAa,SAAb,CAAb;;;;AAIA,EAAA,SAAS,cAAT,CAAwB,OAAxB,EAAiC,OAAjC,EAA0C;AACtC,EAAA,cAAU,WAAW,EAArB;;;;AAIA,EAAA,QAAI,QAAQ,OAAR,CAAJ,EAAsB;AAClB,EAAA,kBAAU,QAAQ,MAAR,EAAV;AACH,EAAA;;AAED,EAAA,qBAAe,IAAf,EAAqB,SAArB,EAAgC,EAAC,OAAO,KAAK,cAAL,CAAoB,OAApB,CAAR,EAAhC;AACA,EAAA,qBAAe,IAAf,EAAqB,UAArB,EAAiC,EAAC,OAAO;AACrC,EAAA,mBAAO,KAAK,aAAL,CAAmB,QAAQ,KAA3B,CAD8B;AAErC,EAAA,mBAAO,KAAK,aAAL,CAAmB,QAAQ,KAA3B,KAAqC,QAAQ;AAFf,EAAA,SAAR,EAAjC;;AAKA,EAAA,qBAAe,IAAf,EAAqB,UAArB,EAAiC,EAAC,OAAO,OAAR,EAAjC;AACA,EAAA,qBAAe,IAAf,EAAqB,SAArB,EAAgC,EAAC,OAAO,KAAK,WAAL,CAAiB,KAAK,OAAtB,CAAR,EAAhC;AACA,EAAA,qBAAe,IAAf,EAAqB,WAArB,EAAkC,EAAC,OAAOI,YAAU,IAAV,CAAR,EAAlC;;;;AAIA,EAAA,QAAI,iBAAiB,IAArB;AACA,EAAA,SAAK,MAAL,GAAc,SAAS,MAAT,CAAgB,IAAhB,EAAsB,OAAtB,EAA+B;AACzC,EAAA,eAAO,eAAe,OAAf,CAAuB,IAAvB,EAA6B,OAA7B,CAAP;AACH,EAAA,KAFD;AAGH,EAAA;;;AAGDD,mBAAe,cAAf,EAA+B,gBAA/B,EAAiD,EAAC,OAAOC,YAAU,IAAV,CAAR,EAAjD;AACAD,mBAAe,cAAf,EAA+B,iBAA/B,EAAkD,EAAC,OAAO,eAAU,IAAV,EAAgB;AACtE,EAAA,YAAI,EAAE,QAAQ,KAAK,MAAf,CAAJ,EAA4B;AACxB,EAAA,kBAAM,IAAI,KAAJ,CACF,6DACA,yBAFE,CAAN;AAIH,EAAA;;AAED,EAAA,uBAAe,cAAf,CAA8B,KAAK,MAAL,CAAY,WAAZ,EAA9B,IAA2D,IAA3D;;;AAGA,EAAA,sBAAkB,eAAlB,CAAkC,IAAlC;AACH,EAAA,KAZiD,EAAlD;;;;;AAiBAA,mBAAe,cAAf,EAA+B,eAA/B,EAAgD;AAC5C,EAAA,gBAAY,IADgC;AAE5C,EAAA,cAAY,IAFgC;AAG5C,EAAA,WAAY;AAHgC,EAAA,CAAhD;;;;AAQAA,mBAAe,cAAf,EAA+B,YAA/B,EAA6C;AACzC,EAAA,gBAAY,IAD6B;;AAGzC,EAAA,WAAO;AACH,EAAA,gBAAQ,EADL;AAEH,EAAA,gBAAQ,EAFL;AAGH,EAAA,cAAQ,EAHL;AAIH,EAAA,aAAQ,EAJL;AAKH,EAAA,eAAQ;AALL,EAAA;AAHkC,EAAA,CAA7C;;AAYA,EAAA,eAAe,SAAf,CAAyB,eAAzB,GAA2C,YAAY;AACnD,EAAA,WAAO;AACH,EAAA,gBAAQ,KAAK,OADV;AAEH,EAAA,eAAQ,KAAK,QAAL,CAAc,KAFnB;AAGH,EAAA,eAAQ,KAAK,QAAL,CAAc;AAHnB,EAAA,KAAP;AAKH,EAAA,CAND;;AAQA,EAAA,eAAe,SAAf,CAAyB,eAAzB,GAA2C,UAAU,KAAV,EAAiB;;;AAGxD,EAAA,QAAI,UAAiB,KAAK,QAA1B;AACA,EAAA,QAAI,iBAAiB,KAAK,OAA1B;;AAEA,EAAA,QAAI,QAAe,KAAK,OAAL,CAAa,KAAb,CAAnB;AACA,EAAA,QAAI,eAAe,MAAM,YAAzB;AACA,EAAA,QAAI,SAAe,EAAnB;AACA,EAAA,QAAI,OAAe,EAAnB;AACA,EAAA,QAAI,CAAJ;;AAEA,EAAA,SAAK,CAAL,IAAU,aAAa,MAAvB,EAA+B;AAC3B,EAAA,YAAI,aAAa,MAAb,CAAoB,cAApB,CAAmC,CAAnC,CAAJ,EAA2C;AACvC,EAAA,sBAAU,MAAM,CAAN,GAAU,IAAV,GACN,aAAa,MAAb,CAAoB,CAApB,EAAuB,OAAvB,CAA+B,KAA/B,EAAsC,GAAtC,CADM,GACuC,GADjD;AAEH,EAAA;AACJ,EAAA;;AAED,EAAA,SAAK,CAAL,IAAU,aAAa,IAAvB,EAA6B;AACzB,EAAA,YAAI,aAAa,IAAb,CAAkB,cAAlB,CAAiC,CAAjC,CAAJ,EAAyC;AACrC,EAAA,oBAAQ,MAAM,CAAN,GAAU,IAAV,GACJ,aAAa,IAAb,CAAkB,CAAlB,EAAqB,OAArB,CAA6B,KAA7B,EAAoC,GAApC,CADI,GACuC,GAD/C;AAEH,EAAA;AACJ,EAAA;;AAED,EAAA,QAAI,UAAU,wCAAwC,MAAxC,GAAiD,IAAjD,GACe,oBADf,GACsC,IADtC,GAC6C,KAD3D;;;;;AAMA,EAAA,WAAO,IAAIJ,aAAJ,CAAsB,OAAtB,EAA+B,OAA/B,CAAP;AACH,EAAA,CAjCD;;AAmCA,EAAA,eAAe,SAAf,CAAyB,WAAzB,GAAuC,UAAU,KAAV,EAAiB;AACpD,EAAA,QAAI,WAAW,KAAK,SAApB;;;AAGA,EAAA,QAAI,CAAC,SAAS,KAAT,CAAL,EAAsB;AAClB,EAAA,iBAAS,KAAT,IAAkB,KAAK,eAAL,CAAqB,KAArB,CAAlB;AACH,EAAA;;AAED,EAAA,WAAO,SAAS,KAAT,CAAP;AACH,EAAA,CATD;;AAWA,EAAA,eAAe,SAAf,CAAyB,iBAAzB,GAA6C,UAAU,IAAV,EAAgB,KAAhB,EAAuB;AAChE,EAAA,QAAI,QAAQ,KAAK,OAAL,CAAa,KAAb,CAAZ;;AAEA,EAAA,QAAI,MAAM,QAAV,EAAoB;AAChB,EAAA,eAAO,MAAM,QAAN,CAAe,IAAf,CAAP;AACH,EAAA;AACJ,EAAA,CAND;;AAQA,EAAA,eAAe,SAAf,CAAyB,WAAzB,GAAuC,UAAU,MAAV,EAAkB;AACrD,EAAA,QAAI,aAAa,eAAe,cAAhC;AACA,EAAA,QAAI,OAAa,WAAW,OAAO,WAAP,EAAX,CAAjB;;;;AAIA,EAAA,WAAO,IAAP,EAAa;AACT,EAAA,YAAI,KAAK,MAAT,EAAiB;AACb,EAAA,mBAAO,KAAK,MAAZ;AACH,EAAA;;AAED,EAAA,eAAO,KAAK,YAAL,IAAqB,WAAW,KAAK,YAAL,CAAkB,WAAlB,EAAX,CAA5B;AACH,EAAA;;AAED,EAAA,UAAM,IAAI,KAAJ,CACF,sEACA,MAFE,CAAN;AAIH,EAAA,CAlBD;;AAoBA,EAAA,eAAe,SAAf,CAAyB,OAAzB,GAAmC,UAAU,IAAV,EAAgB,OAAhB,EAAyB;AACxD,EAAA,QAAI,MAAM,WAAW,QAAQ,GAAR,KAAgB,SAA3B,GAAuC,QAAQ,GAA/C,GAAqD,SAA/D;;AAEA,EAAA,QAAI,SAAS,SAAb,EAAwB;AACpB,EAAA,eAAO,GAAP;AACH,EAAA;;;;AAID,EAAA,QAAI,CAAC,SAAS,GAAT,CAAL,EAAoB;AAChB,EAAA,cAAM,IAAI,UAAJ,CACF,qEACA,iBAFE,CAAN;AAIH,EAAA;;AAED,EAAA,QAAI,CAAC,SAAS,IAAT,CAAL,EAAqB;AACjB,EAAA,cAAM,IAAI,UAAJ,CACF,mEACA,iBAFE,CAAN;AAIH,EAAA;;AAED,EAAA,QAAI,aAAc,KAAK,GAAL,EAAU,IAAV,CAAlB;AACA,EAAA,QAAI,QAAc,KAAK,QAAL,CAAc,KAAd,IAAuB,KAAK,YAAL,CAAkB,UAAlB,CAAzC;AACA,EAAA,QAAI,cAAc,WAAW,KAAX,CAAlB;;AAEA,EAAA,QAAI,KAAK,QAAL,CAAc,KAAd,KAAwB,SAA5B,EAAuC;AACnC,EAAA,YAAI,gBAAgB,KAAK,iBAAL,CAAuB,WAAvB,EAAoC,KAApC,CAApB;AACA,EAAA,YAAI,aAAJ,EAAmB;AACf,EAAA,mBAAO,aAAP;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,KAAK,WAAL,CAAiB,KAAjB,EAAwB,MAAxB,CAA+B;AAClC,EAAA,aAAM,KAAK,GAAL,CAAS,WAAT,CAD4B;AAElC,EAAA,cAAM,cAAc,CAAd,GAAkB,MAAlB,GAA2B;AAFC,EAAA,KAA/B,CAAP;AAIH,EAAA,CAtCD;;AAwCA,EAAA,eAAe,SAAf,CAAyB,aAAzB,GAAyC,UAAU,KAAV,EAAiB;AACtD,EAAA,QAAI,CAAC,KAAD,IAAU,WAAW,IAAX,CAAgB,MAAhB,EAAwB,KAAxB,KAAkC,CAAhD,EAAmD;AAC/C,EAAA,eAAO,IAAP;AACH,EAAA;;AAED,EAAA,QAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAC3B,EAAA,YAAI,aAAa,KAAK,IAAL,CAAU,KAAV,KAAoB,MAAM,MAAN,CAAa,CAAb,EAAgB,MAAM,MAAN,GAAe,CAA/B,CAArC;AACA,EAAA,YAAI,cAAc,WAAW,IAAX,CAAgB,MAAhB,EAAwB,UAAxB,KAAuC,CAAzD,EAA4D;AACxD,EAAA,kBAAM,IAAI,KAAJ,CACF,MAAM,KAAN,GAAc,8CAAd,GACA,uBADA,GAC0B,UAFxB,CAAN;AAIH,EAAA;AACJ,EAAA;;AAED,EAAA,UAAM,IAAI,KAAJ,CACF,MAAM,KAAN,GAAc,wDAAd,GACA,mBADA,GACsB,OAAO,IAAP,CAAY,MAAZ,CADtB,GAC4C,GAF1C,CAAN;AAIH,EAAA,CAnBD;;AAqBA,EAAA,eAAe,SAAf,CAAyB,cAAzB,GAA0C,UAAU,OAAV,EAAmB;AACzD,EAAA,QAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AAC7B,EAAA,kBAAU,CAAC,OAAD,CAAV;AACH,EAAA;;;AAGD,EAAA,cAAU,CAAC,WAAW,EAAZ,EAAgB,MAAhB,CAAuB,eAAe,aAAtC,CAAV;;AAEA,EAAA,QAAI,aAAa,eAAe,cAAhC;AACA,EAAA,QAAI,CAAJ,EAAO,GAAP,EAAY,WAAZ,EAAyB,IAAzB;;;;;;;AAOA,EAAA,SAAK,IAAI,CAAJ,EAAO,MAAM,QAAQ,MAA1B,EAAkC,IAAI,GAAtC,EAA2C,KAAK,CAAhD,EAAmD;AAC/C,EAAA,sBAAc,QAAQ,CAAR,EAAW,WAAX,GAAyB,KAAzB,CAA+B,GAA/B,CAAd;;AAEA,EAAA,eAAO,YAAY,MAAnB,EAA2B;AACvB,EAAA,mBAAO,WAAW,YAAY,IAAZ,CAAiB,GAAjB,CAAX,CAAP;AACA,EAAA,gBAAI,IAAJ,EAAU;;;AAGN,EAAA,uBAAO,KAAK,MAAZ;AACH,EAAA;;AAED,EAAA,wBAAY,GAAZ;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,QAAI,gBAAgB,QAAQ,GAAR,EAApB;AACA,EAAA,UAAM,IAAI,KAAJ,CACF,8DACA,QAAQ,IAAR,CAAa,IAAb,CADA,GACqB,2BADrB,GACmD,aAFjD,CAAN;AAIH,EAAA,CApCD;;AAsCA,EAAA,eAAe,SAAf,CAAyB,aAAzB,GAAyC,UAAU,KAAV,EAAiB;;AAEtD,EAAA,QAAI,CAAC,KAAL,EAAY;AACR,EAAA,eAAO,OAAO,CAAP,CAAP;AACH,EAAA;;AAED,EAAA,QAAI,WAAW,IAAX,CAAgB,MAAhB,EAAwB,KAAxB,KAAkC,CAAtC,EAAyC;AACrC,EAAA,eAAO,KAAP;AACH,EAAA;;AAED,EAAA,UAAM,IAAI,KAAJ,CACF,MAAM,KAAN,GAAc,wDAAd,GACA,mBADA,GACsB,OAAO,IAAP,CAAY,MAAZ,CADtB,GAC4C,GAF1C,CAAN;AAIH,EAAA,CAdD;;AAgBA,EAAA,eAAe,SAAf,CAAyB,YAAzB,GAAwC,UAAU,UAAV,EAAsB;AAC1D,EAAA,QAAI,CAAJ,EAAO,CAAP,EAAU,KAAV;;AAEA,EAAA,SAAK,IAAI,CAAJ,EAAO,IAAI,OAAO,MAAvB,EAA+B,IAAI,CAAnC,EAAsC,KAAK,CAA3C,EAA8C;AAC1C,EAAA,gBAAQ,OAAO,CAAP,CAAR;;AAEA,EAAA,YAAI,KAAK,GAAL,CAAS,WAAW,KAAX,CAAT,IAA8B,eAAe,UAAf,CAA0B,KAA1B,CAAlC,EAAoE;AAChE,EAAA;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,KAAP;AACH,EAAA,CAZD;;;ACjSA,wBAAe,EAAC,UAAS,IAAV,EAAe,sBAAqB,4BAAU,CAAV,EAAY,GAAZ,EAAgB;AAAC,EAAA,QAAI,IAAE,OAAO,CAAP,EAAU,KAAV,CAAgB,GAAhB,CAAN;UAA2B,KAAG,CAAC,EAAE,CAAF,CAA/B;UAAoC,KAAG,OAAO,EAAE,CAAF,CAAP,KAAc,CAArD;UAAuD,MAAI,MAAI,EAAE,CAAF,EAAK,KAAL,CAAW,CAAC,CAAZ,CAA/D;UAA8E,OAAK,MAAI,EAAE,CAAF,EAAK,KAAL,CAAW,CAAC,CAAZ,CAAvF,CAAsG,IAAG,GAAH,EAAO,OAAO,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAAK,CAAL,IAAQ,QAAM,EAAd,GAAiB,KAAjB,GAAuB,OAA5E,CAAoF,OAAO,KAAG,CAAH,IAAM,EAAN,GAAS,KAAT,GAAe,OAAtB;AAA8B,EAAA,GAApR,EAAqR,UAAS,EAAC,QAAO,EAAC,eAAc,MAAf,EAAsB,YAAW,EAAC,KAAI,WAAL,EAAiB,KAAI,WAArB,EAAiC,MAAK,WAAtC,EAAjC,EAAoF,gBAAe,EAAC,UAAS,EAAC,OAAM,aAAP,EAAqB,SAAQ,cAA7B,EAAV,EAAuD,QAAO,EAAC,OAAM,cAAP,EAAsB,SAAQ,eAA9B,EAA9D,EAAnG,EAAR,EAA0N,SAAQ,EAAC,eAAc,OAAf,EAAuB,YAAW,EAAC,KAAI,YAAL,EAAkB,KAAI,YAAtB,EAAmC,MAAK,YAAxC,EAAlC,EAAwF,gBAAe,EAAC,UAAS,EAAC,OAAM,cAAP,EAAsB,SAAQ,eAA9B,EAAV,EAAyD,QAAO,EAAC,OAAM,eAAP,EAAuB,SAAQ,gBAA/B,EAAhE,EAAvG,EAAlO,EAA4b,OAAM,EAAC,eAAc,KAAf,EAAqB,YAAW,EAAC,KAAI,OAAL,EAAa,KAAI,UAAjB,EAA4B,MAAK,WAAjC,EAAhC,EAA8E,gBAAe,EAAC,UAAS,EAAC,OAAM,YAAP,EAAoB,SAAQ,aAA5B,EAAV,EAAqD,QAAO,EAAC,OAAM,aAAP,EAAqB,SAAQ,cAA7B,EAA5D,EAA7F,EAAlc,EAA0oB,QAAO,EAAC,eAAc,MAAf,EAAsB,gBAAe,EAAC,UAAS,EAAC,OAAM,aAAP,EAAqB,SAAQ,cAA7B,EAAV,EAAuD,QAAO,EAAC,OAAM,cAAP,EAAsB,SAAQ,eAA9B,EAA9D,EAArC,EAAjpB,EAAqyB,UAAS,EAAC,eAAc,QAAf,EAAwB,gBAAe,EAAC,UAAS,EAAC,OAAM,eAAP,EAAuB,SAAQ,gBAA/B,EAAV,EAA2D,QAAO,EAAC,OAAM,gBAAP,EAAwB,SAAQ,iBAAhC,EAAlE,EAAvC,EAA9yB,EAA48B,UAAS,EAAC,eAAc,QAAf,EAAwB,YAAW,EAAC,KAAI,KAAL,EAAnC,EAA+C,gBAAe,EAAC,UAAS,EAAC,OAAM,eAAP,EAAuB,SAAQ,gBAA/B,EAAV,EAA2D,QAAO,EAAC,OAAM,gBAAP,EAAwB,SAAQ,iBAAhC,EAAlE,EAA9D,EAAr9B,EAA9R,EAAf;;ACIAM,iBAAmB,eAAnB,CAAmCC,eAAnC;AACAD,iBAAmB,aAAnB,GAAmC,IAAnC;;ECGO,SAAS,aAAT,GAAkC;AAAA,EAAA,QAAX,IAAW,yDAAJ,EAAI;;AACrC,EAAA,QAAI,UAAU,MAAM,OAAN,CAAc,IAAd,IAAsB,IAAtB,GAA6B,CAAC,IAAD,CAA3C;;AAEA,EAAA,YAAQ,OAAR,CAAgB,UAAC,UAAD,EAAgB;AAC5B,EAAA,YAAI,cAAc,WAAW,MAA7B,EAAqC;AACjC,EAAA,0BAAkB,eAAlB,CAAkC,UAAlC;AACA,EAAA,2BAAmB,eAAnB,CAAmC,UAAnC;AACH,EAAA;AACJ,EAAA,KALD;AAMH,EAAA;;AAED,EAAO,SAAS,aAAT,CAAuB,MAAvB,EAA+B;AAClC,EAAA,QAAI,cAAc,CAAC,UAAU,EAAX,EAAe,KAAf,CAAqB,GAArB,CAAlB;;AAEA,EAAA,WAAO,YAAY,MAAZ,GAAqB,CAA5B,EAA+B;AAC3B,EAAA,YAAI,uBAAuB,YAAY,IAAZ,CAAiB,GAAjB,CAAvB,CAAJ,EAAmD;AAC/C,EAAA,mBAAO,IAAP;AACH,EAAA;;AAED,EAAA,oBAAY,GAAZ;AACH,EAAA;;AAED,EAAA,WAAO,KAAP;AACH,EAAA;;AAED,EAAA,SAAS,sBAAT,CAAgC,MAAhC,EAAwC;AACpC,EAAA,QAAI,mBAAmB,UAAU,OAAO,WAAP,EAAjC;;AAEA,EAAA,WAAO,CAAC,EACJN,cAAkB,cAAlB,CAAiC,gBAAjC,KACAM,eAAmB,cAAnB,CAAkC,gBAAlC,CAFI,CAAR;AAIH,EAAA;;MCjCM,OAAoDE,gBAApD;MAAM,SAA8CA,gBAA9C;MAAQ,SAAsCA,gBAAtC;MAAQ,OAA8BA,gBAA9B;MAAM,SAAwBA,gBAAxB;MAAQ,QAAgBA,gBAAhB;MAAO,QAASA,gBAAT;;;AAElD,EAAO,IAAM,sBAAsB;AAC/B,EAAA,YAAU,MADqB;AAE/B,EAAA,aAAU,MAFqB;AAG/B,EAAA,cAAU,MAHqB;;AAK/B,EAAA,mBAAgB,MALe;AAM/B,EAAA,oBAAgB;AANe,EAAA,CAA5B;;AASP,EAAO,IAAM,sBAAsB;AAC/B,EAAA,gBAAmB,KAAK,UADO;AAE/B,EAAA,gBAAmB,KAAK,UAFO;AAG/B,EAAA,oBAAmB,KAAK,UAHO;AAI/B,EAAA,kBAAmB,KAAK,UAJO;AAK/B,EAAA,kBAAmB,KAAK,UALO;AAM/B,EAAA,mBAAmB,KAAK,UANO;AAO/B,EAAA,uBAAmB,KAAK;AAPO,EAAA,CAA5B;;AAUP,EAAO,IAAM,YAAY,kCAClB,mBADkB,EAElB,mBAFkB;AAGrB,EAAA,gBAAY,MAHS;AAIrB,EAAA,SAAK,KAAK;AAJW,EAAA,GAAlB;;AAOP,EAAO,IAAM,6BAA6B;AACtC,EAAA,QAAgB,OAAO,UADe;AAEtC,EAAA,iBAAgB,MAFsB;AAGtC,EAAA,oBAAgB;AAHsB,EAAA,CAAnC;;AAMP,EAAO,IAAM,0BAA0B;AACnC,EAAA,mBAAe,MAAM,CAAC,UAAD,EAAa,QAAb,CAAN,CADoB;AAEnC,EAAA,mBAAe,MAAM,CAAC,OAAD,EAAU,UAAV,CAAN,CAFoB;;AAInC,EAAA,cAAU,MAJyB;AAKnC,EAAA,YAAU,IALyB;;AAOnC,EAAA,aAAc,MAAM,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAN,CAPqB;AAQnC,EAAA,SAAc,MAAM,CAAC,QAAD,EAAW,OAAX,EAAoB,MAApB,CAAN,CARqB;AASnC,EAAA,UAAc,MAAM,CAAC,SAAD,EAAY,SAAZ,CAAN,CATqB;AAUnC,EAAA,WAAc,MAAM,CAAC,SAAD,EAAY,SAAZ,EAAuB,QAAvB,EAAiC,OAAjC,EAA0C,MAA1C,CAAN,CAVqB;AAWnC,EAAA,SAAc,MAAM,CAAC,SAAD,EAAY,SAAZ,CAAN,CAXqB;AAYnC,EAAA,UAAc,MAAM,CAAC,SAAD,EAAY,SAAZ,CAAN,CAZqB;AAanC,EAAA,YAAc,MAAM,CAAC,SAAD,EAAY,SAAZ,CAAN,CAbqB;AAcnC,EAAA,YAAc,MAAM,CAAC,SAAD,EAAY,SAAZ,CAAN,CAdqB;AAenC,EAAA,kBAAc,MAAM,CAAC,OAAD,EAAU,MAAV,CAAN;AAfqB,EAAA,CAAhC;;AAkBP,EAAO,IAAM,wBAAwB;AACjC,EAAA,mBAAe,MAAM,CAAC,UAAD,EAAa,QAAb,CAAN,CADkB;;AAGjC,EAAA,WAAiB,MAAM,CAAC,SAAD,EAAY,UAAZ,EAAwB,SAAxB,CAAN,CAHgB;AAIjC,EAAA,cAAiB,MAJgB;AAKjC,EAAA,qBAAiB,MAAM,CAAC,QAAD,EAAW,MAAX,EAAmB,MAAnB,CAAN,CALgB;AAMjC,EAAA,iBAAiB,IANgB;;AAQjC,EAAA,0BAA0B,MARO;AASjC,EAAA,2BAA0B,MATO;AAUjC,EAAA,2BAA0B,MAVO;AAWjC,EAAA,8BAA0B,MAXO;AAYjC,EAAA,8BAA0B;AAZO,EAAA,CAA9B;;AAeP,EAAO,IAAM,0BAA0B;AACnC,EAAA,WAAO,MAAM,CAAC,UAAD,EAAa,SAAb,CAAN,CAD4B;AAEnC,EAAA,WAAO,MAAM,CAAC,QAAD,EAAW,QAAX,EAAqB,MAArB,EAA6B,KAA7B,EAAoC,OAApC,EAA6C,MAA7C,CAAN;AAF4B,EAAA,CAAhC;;AAKP,EAAO,IAAM,wBAAwB;AACjC,EAAA,WAAO,MAAM,CAAC,UAAD,EAAa,SAAb,CAAN;AAD0B,EAAA,CAA9B;;;;;;;;;;;;ACvEP,EAAA;;;;;;;;;;;;;AAaA,EAAA,IAAI,WAAW,aAAf;;AAEA,EAAA,IAAI,YAAY,SAAZ,SAAY,CAAS,SAAT,EAAoB,MAApB,EAA4B,CAA5B,EAA+B,CAA/B,EAAkC,CAAlC,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C;QACxD,aAAa,YAAjB,EAA+B;UACzB,WAAW,SAAf,EAA0B;cAClB,IAAI,KAAJ,CAAU,8CAAV,CAAN;;;;QAIA,CAAC,SAAL,EAAgB;UACV,KAAJ;UACI,WAAW,SAAf,EAA0B;gBAChB,IAAI,KAAJ,CACN,uEACA,6DAFM,CAAR;OADF,MAKO;YACD,OAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAX;YACI,WAAW,CAAf;gBACQ,IAAI,KAAJ,CACN,OAAO,OAAP,CAAe,KAAf,EAAsB,YAAW;iBAAS,KAAK,UAAL,CAAP;SAAnC,CADM,CAAR;cAGM,IAAN,GAAa,qBAAb;;;YAGI,WAAN,GAAoB,CAApB;YACM,KAAN;;GAxBJ;;AA4BA,EAAA,OAAO,OAAP,GAAiB,SAAjB;;;;;ECtCA,IAAM,sBAAsB,OAAO,IAAP,CAAY,mBAAZ,CAA5B;;AAEA,EAAA,IAAM,gBAAgB;AAClB,EAAA,SAAM,OADY;AAElB,EAAA,SAAM,MAFY;AAGlB,EAAA,SAAM,MAHY;AAIlB,EAAA,SAAM,QAJY;AAKlB,EAAA,UAAM;AALY,EAAA,CAAtB;;AAQA,EAAA,IAAM,qBAAqB,UAA3B;;AAEA,EAAO,SAAS,MAAT,CAAgB,GAAhB,EAAqB;AACxB,EAAA,WAAO,CAAC,KAAK,GAAN,EAAW,OAAX,CAAmB,kBAAnB,EAAuC,UAAC,KAAD;AAAA,EAAA,eAAW,cAAc,KAAd,CAAX;AAAA,EAAA,KAAvC,CAAP;AACH,EAAA;;AAED,EAAO,SAAS,WAAT,CAAqB,KAArB,EAA4B,SAA5B,EAAsD;AAAA,EAAA,QAAf,QAAe,yDAAJ,EAAI;;AACzD,EAAA,WAAO,UAAU,MAAV,CAAiB,UAAC,QAAD,EAAW,IAAX,EAAoB;AACxC,EAAA,YAAI,MAAM,cAAN,CAAqB,IAArB,CAAJ,EAAgC;AAC5B,EAAA,qBAAS,IAAT,IAAiB,MAAM,IAAN,CAAjB;AACH,EAAA,SAFD,MAEO,IAAI,SAAS,cAAT,CAAwB,IAAxB,CAAJ,EAAmC;AACtC,EAAA,qBAAS,IAAT,IAAiB,SAAS,IAAT,CAAjB;AACH,EAAA;;AAED,EAAA,eAAO,QAAP;AACH,EAAA,KARM,EAQJ,EARI,CAAP;AASH,EAAA;;AAED,EAAO,SAAS,oBAAT,GAA2C;AAAA,EAAA,qEAAJ,EAAI;;AAAA,EAAA,QAAZ,IAAY,QAAZ,IAAY;;AAC9C,EAAA,gBAAU,IAAV,EACI,yDACA,0DAFJ;AAIH,EAAA;;AAED,EAAO,SAAS,aAAT,CAAuB,IAAvB,EAA6B,IAA7B,EAAmC;AACtC,EAAA,QAAI,SAAS,IAAb,EAAmB;AACf,EAAA,eAAO,IAAP;AACH,EAAA;;AAED,EAAA,QAAI,QAAO,IAAP,wDAAO,IAAP,OAAgB,QAAhB,IAA4B,SAAS,IAArC,IACA,QAAO,IAAP,wDAAO,IAAP,OAAgB,QADhB,IAC4B,SAAS,IADzC,EAC+C;AAC3C,EAAA,eAAO,KAAP;AACH,EAAA;;AAED,EAAA,QAAI,QAAQ,OAAO,IAAP,CAAY,IAAZ,CAAZ;AACA,EAAA,QAAI,QAAQ,OAAO,IAAP,CAAY,IAAZ,CAAZ;;AAEA,EAAA,QAAI,MAAM,MAAN,KAAiB,MAAM,MAA3B,EAAmC;AAC/B,EAAA,eAAO,KAAP;AACH,EAAA;;;AAGD,EAAA,QAAI,kBAAkB,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,IAArC,CAAtB;AACA,EAAA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AACnC,EAAA,YAAI,CAAC,gBAAgB,MAAM,CAAN,CAAhB,CAAD,IAA8B,KAAK,MAAM,CAAN,CAAL,MAAmB,KAAK,MAAM,CAAN,CAAL,CAArD,EAAqE;AACjE,EAAA,mBAAO,KAAP;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,IAAP;AACH,EAAA;;AAED,EAAO,SAAS,yBAAT,QAEH,SAFG,EAEQ,SAFR,EAGL;AAAA,EAAA,QAFG,KAEH,SAFG,KAEH;AAAA,EAAA,QAFU,KAEV,SAFU,KAEV;AAAA,EAAA,8BAFiB,OAEjB;AAAA,EAAA,QAFiB,OAEjB,iCAF2B,EAE3B;AAAA,EAAA,QADwB,WACxB,yDADsC,EACtC;AAAA,EAAA,wBACsB,OADtB,CACS,IADT;AAAA,EAAA,QACS,IADT,iCACgB,EADhB;AAAA,EAAA,4BAEgC,WAFhC,CAES,IAFT;AAAA,EAAA,QAEe,QAFf,qCAE0B,EAF1B;;;AAIE,EAAA,WACI,CAAC,cAAc,SAAd,EAAyB,KAAzB,CAAD,IACA,CAAC,cAAc,SAAd,EAAyB,KAAzB,CADD,IAEA,EAAE,aAAa,IAAb,IAAqB,cACnB,YAAY,QAAZ,EAAsB,mBAAtB,CADmB,EAEnB,YAAY,IAAZ,EAAkB,mBAAlB,CAFmB,CAAvB,CAHJ;AAQH,EAAA;;EC9ED,SAAS,cAAT,CAAwB,SAAxB,EAAmC;AAC/B,EAAA,WAAO,UAAU,WAAV,IAAyB,UAAU,IAAnC,IAA2C,WAAlD;AACH,EAAA;;AAED,EAAe,SAAS,UAAT,CAAoB,gBAApB,EAAoD;AAAA,EAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,EAAA,gCAI3D,OAJ2D,CAE3D,YAF2D;AAAA,EAAA,QAE3D,YAF2D,yCAE5C,MAF4C;AAAA,EAAA,2BAI3D,OAJ2D,CAG3D,OAH2D;AAAA,EAAA,QAG3D,OAH2D,oCAG5C,KAH4C;;AAAA,EAAA,QAMzD,UANyD;AAAA,EAAA;;AAO3D,EAAA,4BAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,kHAClB,KADkB,EACX,OADW;;AAExB,EAAA,iCAAqB,OAArB;AAFwB,EAAA;AAG3B,EAAA;;AAV0D,EAAA;AAAA,EAAA;AAAA,EAAA,iDAYtC;AACjB,EAAA,4BAAU,OAAV,EACI,kDACA,yDADA,GAEA,gBAHJ;;AAMA,EAAA,uBAAO,KAAK,IAAL,CAAU,eAAjB;AACH,EAAA;AApB0D,EAAA;AAAA,EAAA;AAAA,EAAA,qCAsBlD;AACL,EAAA,uBACIC,6BAAC,gBAAD,8BACQ,KAAK,KADb,kCAEU,YAFV,EAEyB,KAAK,OAAL,CAAa,IAFtC;AAGI,EAAA,yBAAK,UAAU,iBAAV,GAA8B;AAHvC,EAAA,mBADJ;AAOH,EAAA;AA9B0D,EAAA;AAAA,EAAA;AAAA,EAAA,MAMtCC,eANsC;;AAiC/D,EAAA,eAAW,WAAX,mBAAuC,eAAe,gBAAf,CAAvC;;AAEA,EAAA,eAAW,YAAX,GAA0B;AACtB,EAAA,cAAM;AADgB,EAAA,KAA1B;;AAIA,EAAA,eAAW,gBAAX,GAA8B,gBAA9B;;AAEA,EAAA,WAAO,UAAP;AACH,EAAA;;;;;;;;ACtDD,EAAe,SAAS,cAAT,CAAwB,kBAAxB,EAA4C;;;AAGvD,EAAA,SAAO,kBAAP;AACH,EAAA;;ECAD,SAAS,aAAT,CAAuB,OAAvB,EAAgC;;AAE5B,EAAA,WAAOV,cAAkB,SAAlB,CAA4B,cAA5B,CAA2C,OAA3C,CAAP;AACH,EAAA;;AAED,EAAA,SAAS,kBAAT,CAA4B,MAA5B,EAAoC;;AAEhC,EAAA,WAAOA,cAAkB,SAAlB,CAA4B,uBAA5B,CAAoD,MAApD,CAAP;AACH,EAAA;;MAEoB,mBACjB,0BAAY,OAAZ,EAAmC;AAAA,EAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,EAAA;;AAC/B,EAAA,QAAI,aAAa,QAAQ,KAAR,KAAkB,SAAnC;AACA,EAAA,QAAI,WAAa,mBAAmB,cAAc,OAAd,CAAnB,CAAjB;;AAEA,EAAA,SAAK,MAAL,GAAc,UAAC,KAAD;AAAA,EAAA,eAAW,SAAS,KAAT,EAAgB,UAAhB,CAAX;AAAA,EAAA,KAAd;AACH,EAAA;;;;;;;;;;;;;ACfL,EAAA,IAAI,OAAO,SAAS,SAAT,CAAmB,IAAnB,IAA2B,UAAU,KAAV,EAAiB;AACnD,EAAA,QAAI,OAAO,IAAP,KAAgB,UAApB,EAAgC;;;AAG9B,EAAA,cAAM,IAAI,SAAJ,CAAc,sEAAd,CAAN;AACD,EAAA;;AAED,EAAA,QAAI,QAAU,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,EAAsC,CAAtC,CAAd;UACI,UAAU,IADd;UAEI,OAAU,SAAV,IAAU,GAAW,EAFzB;UAGI,SAAU,SAAV,MAAU,GAAW;AACnB,EAAA,eAAO,QAAQ,KAAR,CAAc,gBAAgB,IAAhB,GACZ,IADY,GAEZ,KAFF,EAGA,MAAM,MAAN,CAAa,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAb,CAHA,CAAP;AAID,EAAA,KARL;;AAUA,EAAA,QAAI,KAAK,SAAT,EAAoB;;AAElB,EAAA,aAAK,SAAL,GAAiB,KAAK,SAAtB;AACD,EAAA;AACD,EAAA,WAAO,SAAP,GAAmB,IAAI,IAAJ,EAAnB;;AAEA,EAAA,WAAO,MAAP;AACH,EAAA,CAxBD;;;;;AA6BA,EAAA,IAAIC,QAAM,OAAO,SAAP,CAAiB,cAA3B;;AAEA,EAAA,IAAIC,mBAAkB,YAAY;AAC9B,EAAA,QAAI;AAAE,EAAA,eAAO,CAAC,CAAC,OAAO,cAAP,CAAsB,EAAtB,EAA0B,GAA1B,EAA+B,EAA/B,CAAT;AAA8C,EAAA,KAApD,CACA,OAAO,CAAP,EAAU;AAAE,EAAA,eAAO,KAAP;AAAe,EAAA;AAC9B,EAAA,CAHoB,EAArB;;AAKA,EAAA,IAAIC,QAAM,CAACD,gBAAD,IAAmB,CAAC,OAAO,SAAP,CAAiB,gBAA/C;;AAEA,EAAA,IAAIE,mBAAiBF,mBAAiB,OAAO,cAAxB,GACb,UAAU,GAAV,EAAe,IAAf,EAAqB,IAArB,EAA2B;;AAE/B,EAAA,QAAI,SAAS,IAAT,IAAiB,IAAI,gBAAzB,EAA2C;AACvC,EAAA,YAAI,gBAAJ,CAAqB,IAArB,EAA2B,KAAK,GAAhC;AACH,EAAA,KAFD,MAEO,IAAI,CAACD,MAAI,IAAJ,CAAS,GAAT,EAAc,IAAd,CAAD,IAAwB,WAAW,IAAvC,EAA6C;AAChD,EAAA,YAAI,IAAJ,IAAY,KAAK,KAAjB;AACH,EAAA;AACJ,EAAA,CARD;;AAUA,EAAA,IAAII,cAAY,OAAO,MAAP,IAAiB,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACrD,EAAA,QAAI,GAAJ,EAAS,CAAT;;AAEA,EAAA,aAAS,CAAT,GAAa;AACb,EAAA,MAAE,SAAF,GAAc,KAAd;AACA,EAAA,UAAM,IAAI,CAAJ,EAAN;;AAEA,EAAA,SAAK,CAAL,IAAU,KAAV,EAAiB;AACb,EAAA,YAAIJ,MAAI,IAAJ,CAAS,KAAT,EAAgB,CAAhB,CAAJ,EAAwB;AACpB,EAAA,6BAAe,GAAf,EAAoB,CAApB,EAAuB,MAAM,CAAN,CAAvB;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,GAAP;AACH,EAAA,CAdD;;;;AC7CA,EAAA,SAAS,iBAAT,CAA2B,iBAA3B,EAA8C;AAC1C,EAAA,QAAI,QAAQI,YAAU,IAAV,CAAZ;;AAEA,EAAA,WAAO,YAAY;AACf,EAAA,YAAI,OAAU,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAd;AACA,EAAA,YAAI,UAAU,WAAW,IAAX,CAAd;AACA,EAAA,YAAI,SAAU,WAAW,MAAM,OAAN,CAAzB;;AAEA,EAAA,YAAI,CAAC,MAAL,EAAa;AACT,EAAA,qBAAS,KAAK,KAAK,KAAL,CAAW,iBAAX,EAA8B,CAAC,IAAD,EAAO,MAAP,CAAc,IAAd,CAA9B,CAAL,GAAT;;AAEA,EAAA,gBAAI,OAAJ,EAAa;AACT,EAAA,sBAAM,OAAN,IAAiB,MAAjB;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,eAAO,MAAP;AACH,EAAA,KAdD;AAeH,EAAA;;;;AAID,EAAA,SAAS,UAAT,CAAoB,MAApB,EAA4B;;AAExB,EAAA,QAAI,OAAO,IAAP,KAAgB,WAApB,EAAiC;AAAE,EAAA;AAAS,EAAA;;AAE5C,EAAA,QAAI,UAAU,EAAd;;AAEA,EAAA,QAAI,CAAJ,EAAO,GAAP,EAAY,KAAZ;;AAEA,EAAA,SAAK,IAAI,CAAJ,EAAO,MAAM,OAAO,MAAzB,EAAiC,IAAI,GAArC,EAA0C,KAAK,CAA/C,EAAkD;AAC9C,EAAA,gBAAQ,OAAO,CAAP,CAAR;;AAEA,EAAA,YAAI,SAAS,QAAO,KAAP,wDAAO,KAAP,OAAiB,QAA9B,EAAwC;AACpC,EAAA,oBAAQ,IAAR,CAAa,aAAa,KAAb,CAAb;AACH,EAAA,SAFD,MAEO;AACH,EAAA,oBAAQ,IAAR,CAAa,KAAb;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,KAAK,SAAL,CAAe,OAAf,CAAP;AACH,EAAA;;AAED,EAAA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACvB,EAAA,QAAI,QAAQ,EAAZ;UACI,OAAQ,EADZ;;AAGA,EAAA,QAAI,GAAJ,EAAS,CAAT,EAAY,GAAZ,EAAiB,IAAjB;;AAEA,EAAA,SAAK,GAAL,IAAY,GAAZ,EAAiB;AACb,EAAA,YAAI,IAAI,cAAJ,CAAmB,GAAnB,CAAJ,EAA6B;AACzB,EAAA,iBAAK,IAAL,CAAU,GAAV;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,QAAI,cAAc,KAAK,IAAL,EAAlB;;AAEA,EAAA,SAAK,IAAI,CAAJ,EAAO,MAAM,YAAY,MAA9B,EAAsC,IAAI,GAA1C,EAA+C,KAAK,CAApD,EAAuD;AACnD,EAAA,cAAO,YAAY,CAAZ,CAAP;AACA,EAAA,eAAO,EAAP;;AAEA,EAAA,aAAK,GAAL,IAAY,IAAI,GAAJ,CAAZ;AACA,EAAA,cAAM,CAAN,IAAY,IAAZ;AACH,EAAA;;AAED,EAAA,WAAO,KAAP;AACH,EAAA;;EC3DD,IAAM,2BAA2B,OAAO,IAAP,CAAY,uBAAZ,CAAjC;AACA,EAAA,IAAM,wBAA2B,OAAO,IAAP,CAAY,qBAAZ,CAAjC;AACA,EAAA,IAAM,0BAA2B,OAAO,IAAP,CAAY,uBAAZ,CAAjC;AACA,EAAA,IAAM,wBAA2B,OAAO,IAAP,CAAY,qBAAZ,CAAjC;;AAEA,EAAA,IAAM,6BAA6B;AAC/B,EAAA,YAAQ,EADuB;AAE/B,EAAA,YAAQ,EAFuB;AAG/B,EAAA,UAAQ,EAHuB;AAI/B,EAAA,SAAQ,EAJuB;AAK/B,EAAA,WAAQ,EALuB,EAAnC;;;AAQA,EAAA,SAAS,8BAAT,CAAwC,aAAxC,EAAuD;AAAA,EAAA,QAC5C,UAD4C,GAC9BC,cAD8B,CAC5C,UAD4C;AAGvC,EAAA,eAAW,MAH4B,GAQ/C,aAR+C,CAG/C,MAH+C;AAIvC,EAAA,eAAW,MAJ4B,GAQ/C,aAR+C,CAI/C,MAJ+C;AAKvC,EAAA,eAAW,IAL4B,GAQ/C,aAR+C,CAK/C,IAL+C;AAMvC,EAAA,eAAW,GAN4B,GAQ/C,aAR+C,CAM/C,GAN+C;AAOvC,EAAA,eAAW,KAP4B,GAQ/C,aAR+C,CAO/C,KAP+C;AAStD,EAAA;;AAED,EAAA,SAAS,cAAT,CAAwB,OAAxB,EAAiC,IAAjC,EAAuC,IAAvC,EAA6C;AACzC,EAAA,QAAI,SAAS,WAAW,QAAQ,IAAR,CAAX,IAA4B,QAAQ,IAAR,EAAc,IAAd,CAAzC;AACA,EAAA,QAAI,MAAJ,EAAY;AACR,EAAA,eAAO,MAAP;AACH,EAAA;;AAED,EAAA,QAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,gBAAQ,KAAR,sBACuB,IADvB,uBAC6C,IAD7C;AAGH,EAAA;AACJ,EAAA;;AAED,EAAO,SAAS,UAAT,CAAoB,MAApB,EAA4B,KAA5B,EAAmC,KAAnC,EAAwD;AAAA,EAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,EAAA,QACpD,MADoD,GACjC,MADiC,CACpD,MADoD;AAAA,EAAA,QAC5C,OAD4C,GACjC,MADiC,CAC5C,OAD4C;AAAA,EAAA,QAEpD,MAFoD,GAEjC,OAFiC,CAEpD,MAFoD;;;AAI3D,EAAA,QAAI,OAAkB,IAAI,IAAJ,CAAS,KAAT,CAAtB;AACA,EAAA,QAAI,WAAkB,UAAU,eAAe,OAAf,EAAwB,MAAxB,EAAgC,MAAhC,CAAhC;AACA,EAAA,QAAI,kBAAkB,YAAY,OAAZ,EAAqB,wBAArB,EAA+C,QAA/C,CAAtB;;AAEA,EAAA,QAAI;AACA,EAAA,eAAO,MAAM,iBAAN,CAAwB,MAAxB,EAAgC,eAAhC,EAAiD,MAAjD,CAAwD,IAAxD,CAAP;AACH,EAAA,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,EAAA,YAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,oBAAQ,KAAR,2CAC4C,CAD5C;AAGH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,OAAO,IAAP,CAAP;AACH,EAAA;;AAED,EAAO,SAAS,UAAT,CAAoB,MAApB,EAA4B,KAA5B,EAAmC,KAAnC,EAAwD;AAAA,EAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,EAAA,QACpD,MADoD,GACjC,MADiC,CACpD,MADoD;AAAA,EAAA,QAC5C,OAD4C,GACjC,MADiC,CAC5C,OAD4C;AAAA,EAAA,QAEpD,MAFoD,GAEjC,OAFiC,CAEpD,MAFoD;;;AAI3D,EAAA,QAAI,OAAkB,IAAI,IAAJ,CAAS,KAAT,CAAtB;AACA,EAAA,QAAI,WAAkB,UAAU,eAAe,OAAf,EAAwB,MAAxB,EAAgC,MAAhC,CAAhC;AACA,EAAA,QAAI,kBAAkB,YAAY,OAAZ,EAAqB,wBAArB,EAA+C,QAA/C,CAAtB;;;;AAIA,EAAA,QAAI,OAAO,IAAP,CAAY,eAAZ,EAA6B,MAA7B,KAAwC,CAA5C,EAA+C;AAC3C,EAAA,0BAAkB;AACd,EAAA,kBAAQ,SADM;AAEd,EAAA,oBAAQ;AAFM,EAAA,SAAlB;AAIH,EAAA;;AAED,EAAA,QAAI;AACA,EAAA,eAAO,MAAM,iBAAN,CAAwB,MAAxB,EAAgC,eAAhC,EAAiD,MAAjD,CAAwD,IAAxD,CAAP;AACH,EAAA,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,EAAA,YAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,oBAAQ,KAAR,2CAC4C,CAD5C;AAGH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,OAAO,IAAP,CAAP;AACH,EAAA;;AAED,EAAO,SAAS,cAAT,CAAwB,MAAxB,EAAgC,KAAhC,EAAuC,KAAvC,EAA4D;AAAA,EAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,EAAA,QACxD,MADwD,GACrC,MADqC,CACxD,MADwD;AAAA,EAAA,QAChD,OADgD,GACrC,MADqC,CAChD,OADgD;AAAA,EAAA,QAExD,MAFwD,GAErC,OAFqC,CAExD,MAFwD;;;AAI/D,EAAA,QAAI,OAAkB,IAAI,IAAJ,CAAS,KAAT,CAAtB;AACA,EAAA,QAAI,MAAkB,IAAI,IAAJ,CAAS,QAAQ,GAAjB,CAAtB;AACA,EAAA,QAAI,WAAkB,UAAU,eAAe,OAAf,EAAwB,UAAxB,EAAoC,MAApC,CAAhC;AACA,EAAA,QAAI,kBAAkB,YAAY,OAAZ,EAAqB,uBAArB,EAA8C,QAA9C,CAAtB;;;;AAIA,EAAA,QAAM,4CAAoBA,eAAmB,UAAvC,CAAN;AACA,EAAA,mCAA+B,0BAA/B;;AAEA,EAAA,QAAI;AACA,EAAA,eAAO,MAAM,iBAAN,CAAwB,MAAxB,EAAgC,eAAhC,EAAiD,MAAjD,CAAwD,IAAxD,EAA8D;AACjE,EAAA,iBAAK,SAAS,GAAT,IAAgB,GAAhB,GAAsB,MAAM,GAAN;AADsC,EAAA,SAA9D,CAAP;AAGH,EAAA,KAJD,CAIE,OAAO,CAAP,EAAU;AACR,EAAA,YAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,oBAAQ,KAAR,oDACqD,CADrD;AAGH,EAAA;AACJ,EAAA,KAVD,SAUU;AACN,EAAA,uCAA+B,aAA/B;AACH,EAAA;;AAED,EAAA,WAAO,OAAO,IAAP,CAAP;AACH,EAAA;;AAED,EAAO,SAAS,YAAT,CAAsB,MAAtB,EAA8B,KAA9B,EAAqC,KAArC,EAA0D;AAAA,EAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,EAAA,QACtD,MADsD,GACnC,MADmC,CACtD,MADsD;AAAA,EAAA,QAC9C,OAD8C,GACnC,MADmC,CAC9C,OAD8C;AAAA,EAAA,QAEtD,MAFsD,GAEnC,OAFmC,CAEtD,MAFsD;;;AAI7D,EAAA,QAAI,WAAkB,UAAU,eAAe,OAAf,EAAwB,QAAxB,EAAkC,MAAlC,CAAhC;AACA,EAAA,QAAI,kBAAkB,YAAY,OAAZ,EAAqB,qBAArB,EAA4C,QAA5C,CAAtB;;AAEA,EAAA,QAAI;AACA,EAAA,eAAO,MAAM,eAAN,CAAsB,MAAtB,EAA8B,eAA9B,EAA+C,MAA/C,CAAsD,KAAtD,CAAP;AACH,EAAA,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,EAAA,YAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,oBAAQ,KAAR,6CAC8C,CAD9C;AAGH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,OAAO,KAAP,CAAP;AACH,EAAA;;AAED,EAAO,SAAS,YAAT,CAAsB,MAAtB,EAA8B,KAA9B,EAAqC,KAArC,EAA0D;AAAA,EAAA,QAAd,OAAc,yDAAJ,EAAI;AAAA,EAAA,QACtD,MADsD,GAC5C,MAD4C,CACtD,MADsD;;;AAG7D,EAAA,QAAI,kBAAkB,YAAY,OAAZ,EAAqB,qBAArB,CAAtB;;AAEA,EAAA,QAAI;AACA,EAAA,eAAO,MAAM,eAAN,CAAsB,MAAtB,EAA8B,eAA9B,EAA+C,MAA/C,CAAsD,KAAtD,CAAP;AACH,EAAA,KAFD,CAEE,OAAO,CAAP,EAAU;AACR,EAAA,YAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,oBAAQ,KAAR,6CAC8C,CAD9C;AAGH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,OAAP;AACH,EAAA;;AAED,EAAO,SAAS,aAAT,CAAuB,MAAvB,EAA+B,KAA/B,EAA2E;AAAA,EAAA,QAArC,iBAAqC,yDAAjB,EAAiB;AAAA,EAAA,QAAb,MAAa,yDAAJ,EAAI;AAAA,EAAA,QAE1E,MAF0E,GAO1E,MAP0E,CAE1E,MAF0E;AAAA,EAAA,QAG1E,OAH0E,GAO1E,MAP0E,CAG1E,OAH0E;AAAA,EAAA,QAI1E,QAJ0E,GAO1E,MAP0E,CAI1E,QAJ0E;AAAA,EAAA,QAK1E,aAL0E,GAO1E,MAP0E,CAK1E,aAL0E;AAAA,EAAA,QAM1E,cAN0E,GAO1E,MAP0E,CAM1E,cAN0E;AAAA,EAAA,QAU1E,EAV0E,GAY1E,iBAZ0E,CAU1E,EAV0E;AAAA,EAAA,QAW1E,cAX0E,GAY1E,iBAZ0E,CAW1E,cAX0E;;;;AAe9E,EAAA,gBAAU,EAAV,EAAc,4DAAd;;AAEA,EAAA,QAAM,UAAY,YAAY,SAAS,EAAT,CAA9B;AACA,EAAA,QAAM,YAAY,OAAO,IAAP,CAAY,MAAZ,EAAoB,MAApB,GAA6B,CAA/C;;;;AAIA,EAAA,QAAI,CAAC,SAAD,IAAc,aAAA,KAAyB,YAA3C,EAAyD;AACrD,EAAA,eAAO,WAAW,cAAX,IAA6B,EAApC;AACH,EAAA;;AAED,EAAA,QAAI,yBAAJ;;AAEA,EAAA,QAAI,OAAJ,EAAa;AACT,EAAA,YAAI;AACA,EAAA,gBAAI,YAAY,MAAM,gBAAN,CACZ,OADY,EACH,MADG,EACK,OADL,CAAhB;;AAIA,EAAA,+BAAmB,UAAU,MAAV,CAAiB,MAAjB,CAAnB;AACH,EAAA,SAND,CAME,OAAO,CAAP,EAAU;AACR,EAAA,gBAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,wBAAQ,KAAR,CACI,6CAA2C,EAA3C,uBAA+D,MAA/D,UACC,iBAAiB,sCAAjB,GAA0D,EAD3D,YAEK,CAFL,CADJ;AAKH,EAAA;AACJ,EAAA;AACJ,EAAA,KAhBD,MAgBO;AACH,EAAA,YAAI,aAAA,KAAyB,YAA7B,EAA2C;;;;AAIvC,EAAA,gBAAI,CAAC,cAAD,IACC,UAAU,OAAO,WAAP,OAAyB,cAAc,WAAd,EADxC,EACsE;;AAElE,EAAA,wBAAQ,KAAR,CACI,oCAAkC,EAAlC,uBAAsD,MAAtD,UACC,iBAAiB,sCAAjB,GAA0D,EAD3D,CADJ;AAIH,EAAA;AACJ,EAAA;AACJ,EAAA;;AAED,EAAA,QAAI,CAAC,gBAAD,IAAqB,cAAzB,EAAyC;AACrC,EAAA,YAAI;AACA,EAAA,gBAAI,aAAY,MAAM,gBAAN,CACZ,cADY,EACI,aADJ,EACmB,cADnB,CAAhB;;AAIA,EAAA,+BAAmB,WAAU,MAAV,CAAiB,MAAjB,CAAnB;AACH,EAAA,SAND,CAME,OAAO,CAAP,EAAU;AACR,EAAA,gBAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,wBAAQ,KAAR,CACI,6DAA2D,EAA3D,iBACK,CADL,CADJ;AAIH,EAAA;AACJ,EAAA;AACJ,EAAA;;AAED,EAAA,QAAI,CAAC,gBAAL,EAAuB;AACnB,EAAA,YAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,oBAAQ,KAAR,CACI,0CAAwC,EAAxC,gCACiB,WAAW,cAAX,GAA4B,QAA5B,GAAuC,IADxD,oBADJ;AAIH,EAAA;AACJ,EAAA;;AAED,EAAA,WAAO,oBAAoB,OAApB,IAA+B,cAA/B,IAAiD,EAAxD;AACH,EAAA;;AAED,EAAO,SAAS,iBAAT,CAA2B,MAA3B,EAAmC,KAAnC,EAA0C,iBAA1C,EAA6E;AAAA,EAAA,QAAhB,SAAgB,yDAAJ,EAAI;;;;;AAIhF,EAAA,QAAI,gBAAgB,OAAO,IAAP,CAAY,SAAZ,EAAuB,MAAvB,CAA8B,UAAC,OAAD,EAAU,IAAV,EAAmB;AACjE,EAAA,YAAI,QAAQ,UAAU,IAAV,CAAZ;AACA,EAAA,gBAAQ,IAAR,IAAgB,OAAO,KAAP,KAAiB,QAAjB,GAA4B,OAAO,KAAP,CAA5B,GAA4C,KAA5D;AACA,EAAA,eAAO,OAAP;AACH,EAAA,KAJmB,EAIjB,EAJiB,CAApB;;AAMA,EAAA,WAAO,cAAc,MAAd,EAAsB,KAAtB,EAA6B,iBAA7B,EAAgD,aAAhD,CAAP;AACH,EAAA;;ECrQD,IAAMK,wBAAsB,OAAO,IAAP,CAAY,mBAAZ,CAA5B;AACA,EAAA,IAAM,sBAAsB,OAAO,IAAP,CAAY,mBAAZ,CAA5B;;;;AAIA,EAAA,IAAM,eAAe;AACjB,EAAA,aAAU,EADO;AAEjB,EAAA,cAAU,EAFO;;AAIjB,EAAA,mBAAgB,IAJC;AAKjB,EAAA,oBAAgB;AALC,EAAA,CAArB;;MAQqB;;;AACjB,EAAA,0BAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,gHAClB,KADkB,EACX,OADW;;AAGxB,EAAA,oBAAU,OAAO,IAAP,KAAgB,WAA1B,EACI,oEACA,0EADA,GAEA,sDAHJ;;AAHwB,EAAA,YASX,WATW,GASI,OATJ,CASjB,IATiB;;;;;AAaxB,EAAA,YAAI,mBAAJ;AACA,EAAA,YAAI,SAAS,MAAM,UAAf,CAAJ,EAAgC;AAC5B,EAAA,yBAAa,OAAO,MAAM,UAAb,CAAb;AACH,EAAA,SAFD,MAEO;;;;AAIH,EAAA,yBAAa,cAAc,YAAY,GAAZ,EAAd,GAAkC,KAAK,GAAL,EAA/C;AACH,EAAA;;;;;;;AArBuB,EAAA,mBAiClB,eAAe,EAjCG;;AAAA,EAAA,mCA2BjB,UA3BiB;AAAA,EAAA,YA2BjB,UA3BiB,mCA2BJ;AAChB,EAAA,+BAAmBC,kBAAuB,KAAK,cAA5B,CADH;AAEhB,EAAA,6BAAmBA,kBAAuB,KAAK,YAA5B,CAFH;AAGhB,EAAA,8BAAmBA,kBAAuBZ,aAAvB,CAHH;AAIhB,EAAA,+BAAmBY,kBAAuBN,cAAvB,CAJH;AAKhB,EAAA,6BAAmBM,kBAAuB,gBAAvB;AALH,EAAA,SA3BI;;;AAmCxB,EAAA,cAAK,KAAL,+BACO,UADP;;;AAII,EAAA,iBAAK,eAAM;AACP,EAAA,uBAAO,MAAK,WAAL,GAAmB,KAAK,GAAL,EAAnB,GAAgC,UAAvC;AACH,EAAA;AANL,EAAA;AAnCwB,EAAA;AA2C3B,EAAA;;;;sCAEW;AAAA,EAAA,gBACK,WADL,GACoB,KAAK,OADzB,CACD,IADC;;;;;AAKR,EAAA,gBAAI,SAAS,YAAY,KAAK,KAAjB,EAAwBD,qBAAxB,EAA6C,WAA7C,CAAb;;;;;AAKA,EAAA,iBAAK,IAAI,QAAT,IAAqB,YAArB,EAAmC;AAC/B,EAAA,oBAAI,OAAO,QAAP,MAAqB,SAAzB,EAAoC;AAChC,EAAA,2BAAO,QAAP,IAAmB,aAAa,QAAb,CAAnB;AACH,EAAA;AACJ,EAAA;;AAED,EAAA,gBAAI,CAAC,cAAc,OAAO,MAArB,CAAL,EAAmC;AAAA,EAAA,8BAK3B,MAL2B;AAAA,EAAA,oBAE3B,MAF2B,WAE3B,MAF2B;AAAA,EAAA,oBAG3B,aAH2B,WAG3B,aAH2B;AAAA,EAAA,oBAI3B,cAJ2B,WAI3B,cAJ2B;;;AAO/B,EAAA,oBAAI,aAAA,KAAyB,YAA7B,EAA2C;AACvC,EAAA,4BAAQ,KAAR,CACI,mDAAiD,MAAjD,wCAC0B,aAD1B,oBADJ;AAIH,EAAA;;;;;;;AAOD,EAAA,qDACO,MADP;AAEI,EAAA,4BAAU,aAFd;AAGI,EAAA,6BAAU,cAHd;AAII,EAAA,8BAAU,aAAa;AAJ3B,EAAA;AAMH,EAAA;;AAED,EAAA,mBAAO,MAAP;AACH,EAAA;;;4CAEiB,QAAQ,OAAO;AAC7B,EAAA,mBAAO,oBAAoB,MAApB,CAA2B,UAAC,cAAD,EAAiB,IAAjB,EAA0B;AACxD,EAAA,+BAAe,IAAf,IAAuB,OAAO,IAAP,EAAa,IAAb,CAAkB,IAAlB,EAAwB,MAAxB,EAAgC,KAAhC,CAAvB;AACA,EAAA,uBAAO,cAAP;AACH,EAAA,aAHM,EAGJ,EAHI,CAAP;AAIH,EAAA;;;4CAEiB;AACd,EAAA,gBAAM,SAAS,KAAK,SAAL,EAAf;;;AAGA,EAAA,gBAAM,iBAAiB,KAAK,iBAAL,CAAuB,MAAvB,EAA+B,KAAK,KAApC,CAAvB;;AAJc,EAAA,yBAMe,KAAK,KANpB;AAAA,EAAA,gBAMP,GANO,UAMP,GANO;AAAA,EAAA,gBAMC,UAND;;;AAQd,EAAA,mBAAO;AACH,EAAA,kDACO,MADP,EAEO,cAFP;AAGI,EAAA,0CAHJ;AAII,EAAA;AAJJ,EAAA;AADG,EAAA,aAAP;AAQH,EAAA;;;kDAE8B;AAAA,EAAA,8CAAN,IAAM;AAAN,EAAA,oBAAM;AAAA,EAAA;;AAC3B,EAAA,mBAAO,4CAA0B,IAA1B,SAAmC,IAAnC,EAAP;AACH,EAAA;;;8CAEmB;AAChB,EAAA,iBAAK,WAAL,GAAmB,IAAnB;AACH,EAAA;;;mCAEQ;AACL,EAAA,mBAAOE,eAAS,IAAT,CAAc,KAAK,KAAL,CAAW,QAAzB,CAAP;AACH,EAAA;;;IA/HqCH;;EAkI1C,aAAa,WAAb,GAA2B,cAA3B;;AAEA,EAAA,aAAa,YAAb,GAA4B;AACxB,EAAA,UAAM;AADkB,EAAA,CAA5B;;AAIA,EAAA,aAAa,iBAAb,GAAiC;AAC7B,EAAA,UAAM,UAAU;AADa,EAAA,CAAjC;;AAIA,EAAA,aAAa,SAAb,+BACO,mBADP;AAEI,EAAA,cAAYF,gBAAU,OAAV,CAAkB,UAFlC;AAGI,EAAA,gBAAYA,gBAAU;AAH1B,EAAA;;MChKqB;;;AACjB,EAAA,2BAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,iHAClB,KADkB,EACX,OADW;;AAExB,EAAA,6BAAqB,OAArB;AAFwB,EAAA;AAG3B,EAAA;;;;kDAE8B;AAAA,EAAA,8CAAN,IAAM;AAAN,EAAA,oBAAM;AAAA,EAAA;;AAC3B,EAAA,mBAAO,4CAA0B,IAA1B,SAAmC,IAAnC,EAAP;AACH,EAAA;;;mCAEQ;AAAA,EAAA,gBACE,UADF,GACqB,KAAK,OAAL,CAAa,IADlC,CACE,UADF;AAAA,EAAA,yBAEqB,KAAK,KAF1B;AAAA,EAAA,gBAEE,KAFF,UAEE,KAFF;AAAA,EAAA,gBAES,QAFT,UAES,QAFT;;;AAIL,EAAA,gBAAI,gBAAgB,WAAW,KAAX,EAAkB,KAAK,KAAvB,CAApB;;AAEA,EAAA,gBAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,EAAA,uBAAO,SAAS,aAAT,CAAP;AACH,EAAA;;AAED,EAAA,mBAAOC;AAAA,EAAA;kBAAA;kBAAO;AAAP,EAAA,aAAP;AACH,EAAA;;;IArBsCC;;EAwB3C,cAAc,WAAd,GAA4B,eAA5B;;AAEA,EAAA,cAAc,YAAd,GAA6B;AACzB,EAAA,UAAM;AADmB,EAAA,CAA7B;;AAIA,EAAA,cAAc,SAAd,+BACO,uBADP;AAEI,EAAA,WAAUF,gBAAU,GAAV,CAAc,UAF5B;AAGI,EAAA,YAAUA,gBAAU,MAHxB;AAII,EAAA,cAAUA,gBAAU;AAJxB,EAAA;;MC9BqB;;;AACjB,EAAA,2BAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,iHAClB,KADkB,EACX,OADW;;AAExB,EAAA,6BAAqB,OAArB;AAFwB,EAAA;AAG3B,EAAA;;;;kDAE8B;AAAA,EAAA,8CAAN,IAAM;AAAN,EAAA,oBAAM;AAAA,EAAA;;AAC3B,EAAA,mBAAO,4CAA0B,IAA1B,SAAmC,IAAnC,EAAP;AACH,EAAA;;;mCAEQ;AAAA,EAAA,gBACE,UADF,GACqB,KAAK,OAAL,CAAa,IADlC,CACE,UADF;AAAA,EAAA,yBAEqB,KAAK,KAF1B;AAAA,EAAA,gBAEE,KAFF,UAEE,KAFF;AAAA,EAAA,gBAES,QAFT,UAES,QAFT;;;AAIL,EAAA,gBAAI,gBAAgB,WAAW,KAAX,EAAkB,KAAK,KAAvB,CAApB;;AAEA,EAAA,gBAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,EAAA,uBAAO,SAAS,aAAT,CAAP;AACH,EAAA;;AAED,EAAA,mBAAOC;AAAA,EAAA;kBAAA;kBAAO;AAAP,EAAA,aAAP;AACH,EAAA;;;IArBsCC;;EAwB3C,cAAc,WAAd,GAA4B,eAA5B;;AAEA,EAAA,cAAc,YAAd,GAA6B;AACzB,EAAA,UAAM;AADmB,EAAA,CAA7B;;AAIA,EAAA,cAAc,SAAd,+BACO,uBADP;AAEI,EAAA,WAAUF,gBAAU,GAAV,CAAc,UAF5B;AAGI,EAAA,YAAUA,gBAAU,MAHxB;AAII,EAAA,cAAUA,gBAAU;AAJxB,EAAA;;EC9BA,IAAM,SAAS,IAAf;AACA,EAAA,IAAM,SAAS,OAAO,EAAtB;AACA,EAAA,IAAM,OAAS,OAAO,EAAP,GAAY,EAA3B;AACA,EAAA,IAAM,MAAS,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAAhC;;;;AAIA,EAAA,IAAM,kBAAkB,UAAxB;;AAEA,EAAA,SAAS,WAAT,CAAqB,KAArB,EAA4B;AACxB,EAAA,QAAI,WAAW,KAAK,GAAL,CAAS,KAAT,CAAf;;AAEA,EAAA,QAAI,WAAW,MAAf,EAAuB;AACnB,EAAA,eAAO,QAAP;AACH,EAAA;;AAED,EAAA,QAAI,WAAW,IAAf,EAAqB;AACjB,EAAA,eAAO,QAAP;AACH,EAAA;;AAED,EAAA,QAAI,WAAW,GAAf,EAAoB;AAChB,EAAA,eAAO,MAAP;AACH,EAAA;;;;AAID,EAAA,WAAO,KAAP;AACH,EAAA;;AAED,EAAA,SAAS,YAAT,CAAsB,KAAtB,EAA6B;AACzB,EAAA,YAAQ,KAAR;AACA,EAAA,aAAK,QAAL;AAAe,EAAA,mBAAO,MAAP;AACf,EAAA,aAAK,QAAL;AAAe,EAAA,mBAAO,MAAP;AACf,EAAA,aAAK,MAAL;AAAe,EAAA,mBAAO,IAAP;AACf,EAAA,aAAK,KAAL;AAAe,EAAA,mBAAO,GAAP;AACf,EAAA;AAAe,EAAA,mBAAO,eAAP;AALf,EAAA;AAOH,EAAA;;MAEoB;;;AACjB,EAAA,+BAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,qHAClB,KADkB,EACX,OADW;;AAExB,EAAA,6BAAqB,OAArB;;AAEA,EAAA,YAAI,MAAM,SAAS,MAAM,UAAf,IACF,OAAO,MAAM,UAAb,CADE,GACyB,QAAQ,IAAR,CAAa,GAAb,EADnC;;;;AAKA,EAAA,cAAK,KAAL,GAAa,EAAC,QAAD,EAAb;AATwB,EAAA;AAU3B,EAAA;;;;6CAEkB,OAAO,OAAO;AAAA,EAAA;;AAAA,EAAA,gBACtB,cADsB,GACJ,KADI,CACtB,cADsB;;;;;AAK7B,EAAA,gBAAI,CAAC,cAAL,EAAqB;AACjB,EAAA;AACH,EAAA;;AAED,EAAA,gBAAI,OAAQ,IAAI,IAAJ,CAAS,MAAM,KAAf,EAAsB,OAAtB,EAAZ;AACA,EAAA,gBAAI,QAAQ,OAAO,MAAM,GAAzB;AACA,EAAA,gBAAI,QAAQ,MAAM,KAAN,IAAe,YAAY,KAAZ,CAA3B;;AAEA,EAAA,gBAAI,YAAgB,aAAa,KAAb,CAApB;AACA,EAAA,gBAAI,gBAAgB,KAAK,GAAL,CAAS,QAAQ,SAAjB,CAApB;;;;;;AAMA,EAAA,gBAAI,QAAQ,QAAQ,CAAR,GACR,KAAK,GAAL,CAAS,cAAT,EAAyB,YAAY,aAArC,CADQ,GAER,KAAK,GAAL,CAAS,cAAT,EAAyB,aAAzB,CAFJ;;AAIA,EAAA,yBAAa,KAAK,MAAlB;;AAEA,EAAA,iBAAK,MAAL,GAAc,WAAW,YAAM;AAC3B,EAAA,uBAAK,QAAL,CAAc,EAAC,KAAK,OAAK,OAAL,CAAa,IAAb,CAAkB,GAAlB,EAAN,EAAd;AACH,EAAA,aAFa,EAEX,KAFW,CAAd;AAGH,EAAA;;;kDAE8B;AAAA,EAAA,8CAAN,IAAM;AAAN,EAAA,oBAAM;AAAA,EAAA;;AAC3B,EAAA,mBAAO,4CAA0B,IAA1B,SAAmC,IAAnC,EAAP;AACH,EAAA;;;8CAEmB,WAAW,WAAW;AACtC,EAAA,iBAAK,kBAAL,CAAwB,SAAxB,EAAmC,SAAnC;AACH,EAAA;;;8CAEmB;AAChB,EAAA,iBAAK,kBAAL,CAAwB,KAAK,KAA7B,EAAoC,KAAK,KAAzC;AACH,EAAA;;;iDAEsB;AACnB,EAAA,yBAAa,KAAK,MAAlB;AACH,EAAA;;;mCAEQ;AAAA,EAAA,gBACE,cADF,GACqB,KAAK,OAAL,CAAa,IADlC,CACE,cADF;AAAA,EAAA,yBAEqB,KAAK,KAF1B;AAAA,EAAA,gBAEE,KAFF,UAEE,KAFF;AAAA,EAAA,gBAES,QAFT,UAES,QAFT;;;AAIL,EAAA,gBAAI,oBAAoB,eAAe,KAAf,8BACjB,KAAK,KADY,EAEjB,KAAK,KAFY,EAAxB;;AAKA,EAAA,gBAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,EAAA,uBAAO,SAAS,iBAAT,CAAP;AACH,EAAA;;AAED,EAAA,mBAAOC;AAAA,EAAA;kBAAA;kBAAO;AAAP,EAAA,aAAP;AACH,EAAA;;;IA1E0CC;;EA6E/C,kBAAkB,WAAlB,GAAgC,mBAAhC;;AAEA,EAAA,kBAAkB,YAAlB,GAAiC;AAC7B,EAAA,UAAM;AADuB,EAAA,CAAjC;;AAIA,EAAA,kBAAkB,SAAlB,+BACO,uBADP;AAEI,EAAA,WAAgBF,gBAAU,GAAV,CAAc,UAFlC;AAGI,EAAA,YAAgBA,gBAAU,MAH9B;AAII,EAAA,oBAAgBA,gBAAU,MAJ9B;AAKI,EAAA,gBAAgBA,gBAAU,GAL9B;AAMI,EAAA,cAAgBA,gBAAU;AAN9B,EAAA;;AASA,EAAA,kBAAkB,YAAlB,GAAiC;AAC7B,EAAA,oBAAgB,OAAO;AADM,EAAA,CAAjC;;MCnIqB;;;AACjB,EAAA,6BAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,mHAClB,KADkB,EACX,OADW;;AAExB,EAAA,6BAAqB,OAArB;AAFwB,EAAA;AAG3B,EAAA;;;;kDAE8B;AAAA,EAAA,8CAAN,IAAM;AAAN,EAAA,oBAAM;AAAA,EAAA;;AAC3B,EAAA,mBAAO,4CAA0B,IAA1B,SAAmC,IAAnC,EAAP;AACH,EAAA;;;mCAEQ;AAAA,EAAA,gBACE,YADF,GACqB,KAAK,OAAL,CAAa,IADlC,CACE,YADF;AAAA,EAAA,yBAEqB,KAAK,KAF1B;AAAA,EAAA,gBAEE,KAFF,UAEE,KAFF;AAAA,EAAA,gBAES,QAFT,UAES,QAFT;;;AAIL,EAAA,gBAAI,kBAAkB,aAAa,KAAb,EAAoB,KAAK,KAAzB,CAAtB;;AAEA,EAAA,gBAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,EAAA,uBAAO,SAAS,eAAT,CAAP;AACH,EAAA;;AAED,EAAA,mBAAOC;AAAA,EAAA;kBAAA;kBAAO;AAAP,EAAA,aAAP;AACH,EAAA;;;IArBwCC;;EAwB7C,gBAAgB,WAAhB,GAA8B,iBAA9B;;AAEA,EAAA,gBAAgB,YAAhB,GAA+B;AAC3B,EAAA,UAAM;AADqB,EAAA,CAA/B;;AAIA,EAAA,gBAAgB,SAAhB,+BACO,qBADP;AAEI,EAAA,WAAUF,gBAAU,GAAV,CAAc,UAF5B;AAGI,EAAA,YAAUA,gBAAU,MAHxB;AAII,EAAA,cAAUA,gBAAU;AAJxB,EAAA;;MC9BqB;;;AACjB,EAAA,6BAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,mHAClB,KADkB,EACX,OADW;;AAExB,EAAA,6BAAqB,OAArB;AAFwB,EAAA;AAG3B,EAAA;;;;kDAE8B;AAAA,EAAA,8CAAN,IAAM;AAAN,EAAA,oBAAM;AAAA,EAAA;;AAC3B,EAAA,mBAAO,4CAA0B,IAA1B,SAAmC,IAAnC,EAAP;AACH,EAAA;;;mCAEQ;AAAA,EAAA,gBACE,YADF,GAC4B,KAAK,OAAL,CAAa,IADzC,CACE,YADF;AAAA,EAAA,yBAE4B,KAAK,KAFjC;AAAA,EAAA,gBAEE,KAFF,UAEE,KAFF;AAAA,EAAA,gBAES,KAFT,UAES,KAFT;AAAA,EAAA,gBAEgB,QAFhB,UAEgB,QAFhB;;;AAIL,EAAA,gBAAI,iBAAkB,aAAa,KAAb,EAAoB,KAAK,KAAzB,CAAtB;AACA,EAAA,gBAAI,kBAAkB,KAAK,KAAL,CAAW,cAAX,KAA8B,KAApD;;AAEA,EAAA,gBAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,EAAA,uBAAO,SAAS,eAAT,CAAP;AACH,EAAA;;AAED,EAAA,mBAAOC;AAAA,EAAA;kBAAA;kBAAO;AAAP,EAAA,aAAP;AACH,EAAA;;;IAtBwCC;;EAyB7C,gBAAgB,WAAhB,GAA8B,iBAA9B;;AAEA,EAAA,gBAAgB,YAAhB,GAA+B;AAC3B,EAAA,UAAM;AADqB,EAAA,CAA/B;;AAIA,EAAA,gBAAgB,SAAhB,+BACO,qBADP;AAEI,EAAA,WAAOF,gBAAU,GAAV,CAAc,UAFzB;;AAII,EAAA,WAAOA,gBAAU,IAAV,CAAe,UAJ1B;AAKI,EAAA,UAAOA,gBAAU,IALrB;AAMI,EAAA,SAAOA,gBAAU,IANrB;AAOI,EAAA,SAAOA,gBAAU,IAPrB;AAQI,EAAA,SAAOA,gBAAU,IARrB;AASI,EAAA,UAAOA,gBAAU,IATrB;;AAWI,EAAA,cAAUA,gBAAU;AAXxB,EAAA;;AAcA,EAAA,gBAAgB,YAAhB,GAA+B;AAC3B,EAAA,WAAO;AADoB,EAAA,CAA/B;;MCzCqB;;;AACjB,EAAA,8BAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,oHAClB,KADkB,EACX,OADW;;AAExB,EAAA,6BAAqB,OAArB;AAFwB,EAAA;AAG3B,EAAA;;;;gDAEqB,WAAoB;AAAA,EAAA,gBAC/B,MAD+B,GACT,KAAK,KADI,CAC/B,MAD+B;AAAA,EAAA,gBAEvB,UAFuB,GAET,SAFS,CAE/B,MAF+B;;;AAItC,EAAA,gBAAI,CAAC,cAAc,UAAd,EAA0B,MAA1B,CAAL,EAAwC;AACpC,EAAA,uBAAO,IAAP;AACH,EAAA;;;;;AAKD,EAAA,gBAAI,+CACG,SADH;AAEA,EAAA;AAFA,EAAA,cAAJ;;AAXsC,EAAA,8CAAN,IAAM;AAAN,EAAA,oBAAM;AAAA,EAAA;;AAgBtC,EAAA,mBAAO,4CAA0B,IAA1B,EAAgC,gBAAhC,SAAqD,IAArD,EAAP;AACH,EAAA;;;mCAEQ;AAAA,EAAA,gBACE,aADF,GACmB,KAAK,OAAL,CAAa,IADhC,CACE,aADF;AAAA,EAAA,yBAUD,KAAK,KAVJ;AAAA,EAAA,gBAID,EAJC,UAID,EAJC;AAAA,EAAA,gBAKD,WALC,UAKD,WALC;AAAA,EAAA,gBAMD,cANC,UAMD,cANC;AAAA,EAAA,gBAOD,MAPC,UAOD,MAPC;AAAA,EAAA,gBAQD,OARC,UAQD,OARC;AAAA,EAAA,gBASD,QATC,UASD,QATC;;;AAYL,EAAA,gBAAI,uBAAJ;AACA,EAAA,gBAAI,wBAAJ;AACA,EAAA,gBAAI,iBAAJ;;AAEA,EAAA,gBAAI,YAAY,UAAU,OAAO,IAAP,CAAY,MAAZ,EAAoB,MAApB,GAA6B,CAAvD;AACA,EAAA,gBAAI,SAAJ,EAAe;AAAA,EAAA;;;AAGX,EAAA,wBAAI,MAAM,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,aAA3B,EAA0C,QAA1C,CAAmD,EAAnD,CAAV;;AAEA,EAAA,wBAAI,gBAAiB,YAAM;AACvB,EAAA,4BAAI,UAAU,CAAd;AACA,EAAA,+BAAO;AAAA,EAAA,gDAAiB,GAAjB,UAAwB,WAAW,CAAnC;AAAA,EAAA,yBAAP;AACH,EAAA,qBAHmB,EAApB;;;;;AAQA,EAAA,6CAAwB,GAAxB;AACA,EAAA,sCAAkB,EAAlB;AACA,EAAA,+BAAkB,EAAlB;;;;;;;AAOA,EAAA,2BAAO,IAAP,CAAY,MAAZ,EAAoB,OAApB,CAA4B,UAAC,IAAD,EAAU;AAClC,EAAA,4BAAI,QAAQ,OAAO,IAAP,CAAZ;;AAEA,EAAA,4BAAIM,qBAAe,KAAf,CAAJ,EAA2B;AACvB,EAAA,gCAAI,QAAQ,eAAZ;AACA,EAAA,4CAAgB,IAAhB,IAAwB,iBAAiB,KAAjB,GAAyB,cAAjD;AACA,EAAA,qCAAS,KAAT,IAAwB,KAAxB;AACH,EAAA,yBAJD,MAIO;AACH,EAAA,4CAAgB,IAAhB,IAAwB,KAAxB;AACH,EAAA;AACJ,EAAA,qBAVD;AAtBW,EAAA;AAiCd,EAAA;;AAED,EAAA,gBAAI,aAAmB,EAAC,MAAD,EAAK,wBAAL,EAAkB,8BAAlB,EAAvB;AACA,EAAA,gBAAI,mBAAmB,cAAc,UAAd,EAA0B,mBAAmB,MAA7C,CAAvB;;AAEA,EAAA,gBAAI,cAAJ;;AAEA,EAAA,gBAAI,cAAc,YAAY,OAAO,IAAP,CAAY,QAAZ,EAAsB,MAAtB,GAA+B,CAA7D;AACA,EAAA,gBAAI,WAAJ,EAAiB;;;;;AAKb,EAAA,wBAAQ,iBACH,KADG,CACG,cADH,EAEH,MAFG,CAEI,UAAC,IAAD;AAAA,EAAA,2BAAU,CAAC,CAAC,IAAZ;AAAA,EAAA,iBAFJ,EAGH,GAHG,CAGC,UAAC,IAAD;AAAA,EAAA,2BAAU,SAAS,IAAT,KAAkB,IAA5B;AAAA,EAAA,iBAHD,CAAR;AAIH,EAAA,aATD,MASO;AACH,EAAA,wBAAQ,CAAC,gBAAD,CAAR;AACH,EAAA;;AAED,EAAA,gBAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,EAAA,uBAAO,yDAAY,KAAZ,EAAP;AACH,EAAA;;AAED,EAAA,mBAAOC,sCAAc,OAAd,EAAuB,IAAvB,wCAAgC,KAAhC,GAAP;AACH,EAAA;;;IArGyCL;;EAwG9C,iBAAiB,WAAjB,GAA+B,kBAA/B;;AAEA,EAAA,iBAAiB,YAAjB,GAAgC;AAC5B,EAAA,UAAM;AADsB,EAAA,CAAhC;;AAIA,EAAA,iBAAiB,SAAjB,+BACO,0BADP;AAEI,EAAA,YAAUF,gBAAU,MAFxB;AAGI,EAAA,aAAUA,gBAAU,MAHxB;AAII,EAAA,cAAUA,gBAAU;AAJxB,EAAA;;AAOA,EAAA,iBAAiB,YAAjB,GAAgC;AAC5B,EAAA,YAAS,EADmB;AAE5B,EAAA,aAAS;AAFmB,EAAA,CAAhC;;MCrHqB;;;AACjB,EAAA,kCAAY,KAAZ,EAAmB,OAAnB,EAA4B;AAAA,EAAA;;AAAA,EAAA,wHAClB,KADkB,EACX,OADW;;AAExB,EAAA,6BAAqB,OAArB;AAFwB,EAAA;AAG3B,EAAA;;;;gDAEqB,WAAoB;AAAA,EAAA,gBAC/B,MAD+B,GACT,KAAK,KADI,CAC/B,MAD+B;AAAA,EAAA,gBAEvB,UAFuB,GAET,SAFS,CAE/B,MAF+B;;;AAItC,EAAA,gBAAI,CAAC,cAAc,UAAd,EAA0B,MAA1B,CAAL,EAAwC;AACpC,EAAA,uBAAO,IAAP;AACH,EAAA;;;;;AAKD,EAAA,gBAAI,+CACG,SADH;AAEA,EAAA;AAFA,EAAA,cAAJ;;AAXsC,EAAA,8CAAN,IAAM;AAAN,EAAA,oBAAM;AAAA,EAAA;;AAgBtC,EAAA,mBAAO,4CAA0B,IAA1B,EAAgC,gBAAhC,SAAqD,IAArD,EAAP;AACH,EAAA;;;mCAEQ;AAAA,EAAA,gBACE,iBADF,GACuB,KAAK,OAAL,CAAa,IADpC,CACE,iBADF;AAAA,EAAA,yBAUD,KAAK,KAVJ;AAAA,EAAA,gBAID,EAJC,UAID,EAJC;AAAA,EAAA,gBAKD,WALC,UAKD,WALC;AAAA,EAAA,gBAMD,cANC,UAMD,cANC;AAAA,EAAA,gBAOO,SAPP,UAOD,MAPC;AAAA,EAAA,gBAQD,OARC,UAQD,OARC;AAAA,EAAA,gBASD,QATC,UASD,QATC;;;AAYL,EAAA,gBAAI,aAAuB,EAAC,MAAD,EAAK,wBAAL,EAAkB,8BAAlB,EAA3B;AACA,EAAA,gBAAI,uBAAuB,kBAAkB,UAAlB,EAA8B,SAA9B,CAA3B;;AAEA,EAAA,gBAAI,OAAO,QAAP,KAAoB,UAAxB,EAAoC;AAChC,EAAA,uBAAO,SAAS,oBAAT,CAAP;AACH,EAAA;;;;;;;;;;AAUD,EAAA,mBAAOO,oBAAc,OAAd,EAAuB;AAC1B,EAAA,yCAAyB;AACrB,EAAA,4BAAQ;AADa,EAAA;AADC,EAAA,aAAvB,CAAP;AAKH,EAAA;;;IAzD6CL;;EA4DlD,qBAAqB,WAArB,GAAmC,sBAAnC;;AAEA,EAAA,qBAAqB,YAArB,GAAoC;AAChC,EAAA,UAAM;AAD0B,EAAA,CAApC;;AAIA,EAAA,qBAAqB,SAArB,+BACO,0BADP;AAEI,EAAA,YAAUF,gBAAU,MAFxB;AAGI,EAAA,aAAUA,gBAAU,MAHxB;AAII,EAAA,cAAUA,gBAAU;AAJxB,EAAA;;AAOA,EAAA,qBAAqB,YAArB,GAAoC;AAChC,EAAA,YAAS,EADuB;AAEhC,EAAA,aAAS;AAFuB,EAAA,CAApC;;EC9EA,cAAc,iBAAd;;;;;;;;;;;;;;;"}